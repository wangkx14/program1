{"ast":null,"code":"import \"D:\\\\software_data\\\\Project\\\\Y0527\\\\CODE\\\\frontend\\\\node_modules\\\\core-js\\\\modules\\\\es.array.iterator.js\";\nimport \"D:\\\\software_data\\\\Project\\\\Y0527\\\\CODE\\\\frontend\\\\node_modules\\\\core-js\\\\modules\\\\es.promise.js\";\nimport \"D:\\\\software_data\\\\Project\\\\Y0527\\\\CODE\\\\frontend\\\\node_modules\\\\core-js\\\\modules\\\\es.object.assign.js\";\nimport \"D:\\\\software_data\\\\Project\\\\Y0527\\\\CODE\\\\frontend\\\\node_modules\\\\core-js\\\\modules\\\\es.promise.finally.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { createApp } from 'vue';\nimport ElementPlus from 'element-plus';\nimport 'element-plus/dist/index.css';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\n\n// 添加全局错误处理，特别处理ResizeObserver错误\nvar originalConsoleError = console.error;\nconsole.error = function (message) {\n  // 过滤掉ResizeObserver的错误\n  if (typeof message === 'string' && message.includes('ResizeObserver')) {\n    // 可以在这里记录日志，但不向控制台输出\n    return;\n  }\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  originalConsoleError.apply(console, [message].concat(args));\n};\nvar app = createApp(App);\n\n// 添加全局错误处理程序\napp.config.errorHandler = function (err, vm, info) {\n  // 忽略ResizeObserver相关错误\n  if (err && err.message && err.message.includes('ResizeObserver')) {\n    return;\n  }\n  console.error(err);\n};\napp.use(ElementPlus);\napp.use(router);\napp.use(store);\napp.mount('#app');","map":{"version":3,"names":["createApp","ElementPlus","App","router","store","originalConsoleError","console","error","message","includes","_len","arguments","length","args","Array","_key","apply","concat","app","config","errorHandler","err","vm","info","use","mount"],"sources":["D:/software_data/Project/Y0527/CODE/frontend/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\r\nimport ElementPlus from 'element-plus'\r\nimport 'element-plus/dist/index.css'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\n// 添加全局错误处理，特别处理ResizeObserver错误\r\nconst originalConsoleError = console.error;\r\nconsole.error = function(message, ...args) {\r\n  // 过滤掉ResizeObserver的错误\r\n  if (typeof message === 'string' && message.includes('ResizeObserver')) {\r\n    // 可以在这里记录日志，但不向控制台输出\r\n    return;\r\n  }\r\n  originalConsoleError.apply(console, [message, ...args]);\r\n};\r\n\r\nconst app = createApp(App)\r\n\r\n// 添加全局错误处理程序\r\napp.config.errorHandler = (err, vm, info) => {\r\n  // 忽略ResizeObserver相关错误\r\n  if (err && err.message && err.message.includes('ResizeObserver')) {\r\n    return;\r\n  }\r\n  console.error(err);\r\n};\r\n\r\napp.use(ElementPlus)\r\napp.use(router)\r\napp.use(store)\r\n\r\napp.mount('#app') "],"mappings":";;;;;;;AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAO,6BAA6B;AACpC,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;;AAE3B;AACA,IAAMC,oBAAoB,GAAGC,OAAO,CAACC,KAAK;AAC1CD,OAAO,CAACC,KAAK,GAAG,UAASC,OAAO,EAAW;EACzC;EACA,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAIA,OAAO,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;IACrE;IACA;EACF;EAAC,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EALkCC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAMvCV,oBAAoB,CAACW,KAAK,CAACV,OAAO,GAAGE,OAAO,EAAAS,MAAA,CAAKJ,IAAI,CAAC,CAAC;AACzD,CAAC;AAED,IAAMK,GAAG,GAAGlB,SAAS,CAACE,GAAG,CAAC;;AAE1B;AACAgB,GAAG,CAACC,MAAM,CAACC,YAAY,GAAG,UAACC,GAAG,EAAEC,EAAE,EAAEC,IAAI,EAAK;EAC3C;EACA,IAAIF,GAAG,IAAIA,GAAG,CAACb,OAAO,IAAIa,GAAG,CAACb,OAAO,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;IAChE;EACF;EACAH,OAAO,CAACC,KAAK,CAACc,GAAG,CAAC;AACpB,CAAC;AAEDH,GAAG,CAACM,GAAG,CAACvB,WAAW,CAAC;AACpBiB,GAAG,CAACM,GAAG,CAACrB,MAAM,CAAC;AACfe,GAAG,CAACM,GAAG,CAACpB,KAAK,CAAC;AAEdc,GAAG,CAACO,KAAK,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}