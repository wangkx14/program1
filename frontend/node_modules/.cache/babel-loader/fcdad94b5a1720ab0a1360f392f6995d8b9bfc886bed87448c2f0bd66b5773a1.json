{"ast":null,"code":"import _objectSpread from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport * as echarts from 'echarts';\nimport energyEfficiencyApi from '@/api/energyEfficiency';\nimport { formatDateTime, calculateDuration } from '@/utils/dateTime';\nexport default {\n  name: 'EnergyEfficiencyAnalysis',\n  data: function data() {\n    return {\n      // 筛选条件\n      dateRange: [new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000), new Date()],\n      selectedStations: [],\n      selectedRobots: [],\n      // 数据列表\n      stations: [],\n      robots: [],\n      // 图表相关\n      currentChart: 'efficiency',\n      currentChartTitle: '充电效率趋势分析',\n      charts: {\n        efficiency: null,\n        consumption: null,\n        utilization: null,\n        robot: null,\n        peak: null\n      },\n      // KPI数据\n      kpiData: [{\n        title: '平均充电效率',\n        value: 0,\n        unit: '%',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '总能耗',\n        value: 0,\n        unit: 'kWh',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '充电器利用率',\n        value: 0,\n        unit: '%',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '平均等待时间',\n        value: 0,\n        unit: 'min',\n        change: 0,\n        trend: 'down'\n      }, {\n        title: '充电成功率',\n        value: 0,\n        unit: '%',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '总充电次数',\n        value: 0,\n        unit: '次',\n        change: 0,\n        trend: 'up'\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    initData: function initData() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var stationsResponse, robotsResponse;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return energyEfficiencyApi.getStations();\n            case 3:\n              stationsResponse = _context.sent;\n              _this.stations = stationsResponse.data;\n\n              // 获取机器人列表\n              _context.next = 7;\n              return energyEfficiencyApi.getRobots();\n            case 7:\n              robotsResponse = _context.sent;\n              _this.robots = robotsResponse.data;\n\n              // 获取初始数据\n              _this.fetchKpiData();\n              _this.fetchChartData();\n              _context.next = 17;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('初始化数据失败:', _context.t0);\n              _this.$message.error('加载数据失败，请重试');\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 13]]);\n      }))();\n    },\n    // 筛选器处理\n    handleDateChange: function handleDateChange() {\n      this.refreshData();\n    },\n    handleStationChange: function handleStationChange() {\n      this.refreshData();\n    },\n    handleRobotChange: function handleRobotChange() {\n      this.refreshData();\n    },\n    // 刷新所有数据\n    refreshData: function refreshData() {\n      this.fetchKpiData();\n      this.fetchChartData();\n    },\n    // 获取KPI数据\n    fetchKpiData: function fetchKpiData() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var params, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              params = _this2.getFilterParams();\n              _context2.next = 4;\n              return energyEfficiencyApi.getKpiData(params);\n            case 4:\n              response = _context2.sent;\n              _this2.kpiData = [{\n                title: '平均充电效率',\n                value: response.data.avgEfficiency.toFixed(2),\n                unit: '%',\n                change: response.data.efficiencyChange.toFixed(2),\n                trend: response.data.efficiencyChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '总能耗',\n                value: response.data.totalEnergy.toFixed(2),\n                unit: 'kWh',\n                change: response.data.energyChange.toFixed(2),\n                trend: response.data.energyChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '充电器利用率',\n                value: response.data.utilization.toFixed(2),\n                unit: '%',\n                change: response.data.utilizationChange.toFixed(2),\n                trend: response.data.utilizationChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '平均等待时间',\n                value: response.data.avgWaitTime.toFixed(2),\n                unit: 'min',\n                change: response.data.waitTimeChange.toFixed(2),\n                trend: response.data.waitTimeChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '充电成功率',\n                value: response.data.successRate.toFixed(2),\n                unit: '%',\n                change: response.data.successRateChange.toFixed(2),\n                trend: response.data.successRateChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '总充电次数',\n                value: response.data.totalOrders || 0,\n                unit: '次',\n                change: response.data.ordersChange || 0,\n                trend: (response.data.ordersChange || 0) >= 0 ? 'up' : 'down'\n              }];\n              _context2.next = 12;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('获取KPI数据失败:', _context2.t0);\n              _this2.$message.error('获取KPI数据失败');\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 8]]);\n      }))();\n    },\n    // 获取图表数据并渲染\n    fetchChartData: function fetchChartData() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var params;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              params = _this3.getFilterParams(); // 根据当前选择的图表类型获取数据\n              _context3.t0 = _this3.currentChart;\n              _context3.next = _context3.t0 === 'efficiency' ? 5 : _context3.t0 === 'consumption' ? 8 : _context3.t0 === 'utilization' ? 11 : _context3.t0 === 'robot' ? 14 : _context3.t0 === 'peak' ? 17 : 20;\n              break;\n            case 5:\n              _context3.next = 7;\n              return _this3.renderEfficiencyChart(params);\n            case 7:\n              return _context3.abrupt(\"break\", 20);\n            case 8:\n              _context3.next = 10;\n              return _this3.renderConsumptionChart(params);\n            case 10:\n              return _context3.abrupt(\"break\", 20);\n            case 11:\n              _context3.next = 13;\n              return _this3.renderUtilizationChart(params);\n            case 13:\n              return _context3.abrupt(\"break\", 20);\n            case 14:\n              _context3.next = 16;\n              return _this3.renderRobotChart(params);\n            case 16:\n              return _context3.abrupt(\"break\", 20);\n            case 17:\n              _context3.next = 19;\n              return _this3.renderPeakChart(params);\n            case 19:\n              return _context3.abrupt(\"break\", 20);\n            case 20:\n              _context3.next = 26;\n              break;\n            case 22:\n              _context3.prev = 22;\n              _context3.t1 = _context3[\"catch\"](0);\n              console.error('获取图表数据失败:', _context3.t1);\n              _this3.$message.error('获取图表数据失败');\n            case 26:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 22]]);\n      }))();\n    },\n    // 充电效率趋势图\n    renderEfficiencyChart: function renderEfficiencyChart(params) {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return energyEfficiencyApi.getEfficiencyTrend(params);\n            case 2:\n              response = _context4.sent;\n              if (!_this4.charts.efficiency) {\n                _this4.charts.efficiency = echarts.init(_this4.$refs.efficiencyChart);\n              }\n              option = {\n                title: {\n                  text: '充电效率趋势分析',\n                  left: 'center',\n                  top: '10px'\n                },\n                tooltip: {\n                  trigger: 'axis'\n                },\n                legend: {\n                  data: response.data.stations.map(function (station) {\n                    return station.name;\n                  }),\n                  selected: response.data.stations.reduce(function (acc, station) {\n                    acc[station.name] = true;\n                    return acc;\n                  }, {}),\n                  top: '40px',\n                  type: 'scroll',\n                  orient: 'horizontal'\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  top: '100px',\n                  containLabel: true\n                },\n                xAxis: {\n                  type: 'category',\n                  boundaryGap: false,\n                  data: response.data.timeline\n                },\n                yAxis: {\n                  type: 'value',\n                  name: '充电效率 (%)',\n                  min: 50,\n                  max: 100\n                },\n                series: response.data.stations.map(function (station) {\n                  return {\n                    name: station.name,\n                    type: 'line',\n                    data: station.efficiencyData,\n                    smooth: true\n                  };\n                })\n              };\n              _this4.charts.efficiency.setOption(option);\n\n              // 取消图表的点击事件\n              _this4.charts.efficiency.off('click');\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    },\n    // 能耗分布热力图\n    renderConsumptionChart: function renderConsumptionChart(params) {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response, hours, days, option;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return energyEfficiencyApi.getEnergyConsumptionDistribution(params);\n            case 2:\n              response = _context5.sent;\n              if (!_this5.charts.consumption) {\n                _this5.charts.consumption = echarts.init(_this5.$refs.consumptionChart);\n              }\n              hours = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'];\n              days = response.data.days;\n              option = {\n                title: {\n                  text: '能耗分布热力图'\n                },\n                tooltip: {\n                  position: 'top',\n                  formatter: function formatter(params) {\n                    return \"\".concat(params.data[1], \":00 - \").concat(params.data[1] + 1, \":00<br>\\u65E5\\u671F: \").concat(params.data[0], \"<br>\\u80FD\\u8017: \").concat(params.data[2].toFixed(2), \" kWh\");\n                  }\n                },\n                grid: {\n                  height: '70%',\n                  top: '10%'\n                },\n                xAxis: {\n                  type: 'category',\n                  data: hours,\n                  splitArea: {\n                    show: true\n                  },\n                  axisLabel: {\n                    formatter: '{value}:00'\n                  }\n                },\n                yAxis: {\n                  type: 'category',\n                  data: days,\n                  splitArea: {\n                    show: true\n                  }\n                },\n                visualMap: {\n                  min: 0,\n                  max: response.data.maxValue,\n                  calculable: true,\n                  orient: 'horizontal',\n                  left: 'center',\n                  bottom: '5%',\n                  color: ['#d94e5d', '#eac736', '#50a3ba']\n                },\n                series: [{\n                  name: '能耗 (kWh)',\n                  type: 'heatmap',\n                  data: response.data.data,\n                  label: {\n                    show: false\n                  },\n                  emphasis: {\n                    itemStyle: {\n                      shadowBlur: 10,\n                      shadowColor: 'rgba(0, 0, 0, 0.5)'\n                    }\n                  }\n                }]\n              };\n              _this5.charts.consumption.setOption(option);\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }))();\n    },\n    // 充电站利用率对比\n    renderUtilizationChart: function renderUtilizationChart(params) {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return energyEfficiencyApi.getStationUtilization(params);\n            case 2:\n              response = _context6.sent;\n              if (!_this6.charts.utilization) {\n                _this6.charts.utilization = echarts.init(_this6.$refs.utilizationChart);\n              }\n              option = {\n                title: {\n                  text: '充电站利用率对比'\n                },\n                tooltip: {\n                  trigger: 'axis',\n                  axisPointer: {\n                    type: 'shadow'\n                  }\n                },\n                legend: {\n                  data: ['忙碌时间', '空闲时间', '维护时间', '故障时间']\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  containLabel: true\n                },\n                xAxis: {\n                  type: 'value',\n                  name: '小时',\n                  max: 24\n                },\n                yAxis: {\n                  type: 'category',\n                  data: response.data.map(function (item) {\n                    return item.stationName;\n                  })\n                },\n                series: [{\n                  name: '忙碌时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: response.data.map(function (item) {\n                    return item.busyHours;\n                  })\n                }, {\n                  name: '空闲时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: response.data.map(function (item) {\n                    return item.idleHours;\n                  })\n                }, {\n                  name: '维护时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: response.data.map(function (item) {\n                    return item.maintenanceHours;\n                  })\n                }, {\n                  name: '故障时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: response.data.map(function (item) {\n                    return item.errorHours;\n                  })\n                }]\n              };\n              _this6.charts.utilization.setOption(option);\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }))();\n    },\n    // 机器人充电行为分析\n    renderRobotChart: function renderRobotChart(params) {\n      var _this7 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return energyEfficiencyApi.getRobotChargingBehavior(params);\n            case 2:\n              response = _context7.sent;\n              if (!_this7.charts.robot) {\n                _this7.charts.robot = echarts.init(_this7.$refs.robotChart);\n              }\n              option = {\n                title: {\n                  text: '机器人充电行为分析'\n                },\n                tooltip: {\n                  trigger: 'axis'\n                },\n                legend: {\n                  data: ['充电次数', '平均充电时长', '平均等待时间']\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  containLabel: true\n                },\n                xAxis: [{\n                  type: 'category',\n                  data: response.data.robots.map(function (robot) {\n                    return robot.name;\n                  }),\n                  axisPointer: {\n                    type: 'shadow'\n                  }\n                }],\n                yAxis: [{\n                  type: 'value',\n                  name: '次数',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value}'\n                  }\n                }, {\n                  type: 'value',\n                  name: '时间 (分钟)',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value} min'\n                  }\n                }],\n                series: [{\n                  name: '充电次数',\n                  type: 'bar',\n                  data: response.data.robots.map(function (robot) {\n                    return robot.chargingCount;\n                  })\n                }, {\n                  name: '平均充电时长',\n                  type: 'line',\n                  yAxisIndex: 1,\n                  data: response.data.robots.map(function (robot) {\n                    return robot.avgChargingDuration;\n                  })\n                }, {\n                  name: '平均等待时间',\n                  type: 'line',\n                  yAxisIndex: 1,\n                  data: response.data.robots.map(function (robot) {\n                    return robot.avgWaitingTime;\n                  })\n                }]\n              };\n              _this7.charts.robot.setOption(option);\n            case 6:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }))();\n    },\n    // 充电高峰期分析\n    renderPeakChart: function renderPeakChart(params) {\n      var _this8 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return energyEfficiencyApi.getChargingPeakAnalysis(params);\n            case 2:\n              response = _context8.sent;\n              if (!_this8.charts.peak) {\n                _this8.charts.peak = echarts.init(_this8.$refs.peakChart);\n              }\n              option = {\n                title: {\n                  text: '充电高峰期分析'\n                },\n                tooltip: {\n                  trigger: 'axis',\n                  axisPointer: {\n                    type: 'shadow'\n                  }\n                },\n                legend: {\n                  data: ['充电请求数', '平均等待时间']\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  containLabel: true\n                },\n                xAxis: [{\n                  type: 'category',\n                  data: ['0-2', '2-4', '4-6', '6-8', '8-10', '10-12', '12-14', '14-16', '16-18', '18-20', '20-22', '22-24'],\n                  axisLabel: {\n                    formatter: '{value}时'\n                  }\n                }],\n                yAxis: [{\n                  type: 'value',\n                  name: '请求数',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value}'\n                  }\n                }, {\n                  type: 'value',\n                  name: '等待时间 (分钟)',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value} min'\n                  }\n                }],\n                series: [{\n                  name: '充电请求数',\n                  type: 'bar',\n                  data: response.data.requestCounts\n                }, {\n                  name: '平均等待时间',\n                  type: 'line',\n                  yAxisIndex: 1,\n                  data: response.data.avgWaitingTimes\n                }]\n              };\n              _this8.charts.peak.setOption(option);\n            case 6:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }))();\n    },\n    // 获取筛选参数\n    getFilterParams: function getFilterParams() {\n      return {\n        startDate: this.dateRange[0] ? this.dateRange[0].toISOString() : null,\n        endDate: this.dateRange[1] ? this.dateRange[1].toISOString() : null,\n        stationIds: this.selectedStations.length > 0 ? this.selectedStations : null,\n        robotIds: this.selectedRobots.length > 0 ? this.selectedRobots : null\n      };\n    },\n    // 处理图表切换\n    handleChartChange: function handleChartChange(chartType) {\n      var titles = {\n        efficiency: '充电效率趋势分析',\n        consumption: '能耗分布热力图',\n        utilization: '充电站利用率对比',\n        robot: '机器人充电行为分析',\n        peak: '充电高峰期分析'\n      };\n      this.currentChartTitle = titles[chartType];\n      this.fetchChartData();\n    },\n    // 数据导出\n    exportData: function exportData(type) {\n      var _this9 = this;\n      var params = _objectSpread(_objectSpread({}, this.getFilterParams()), {}, {\n        exportType: type\n      });\n      energyEfficiencyApi.exportData(params).then(function (response) {\n        var url = window.URL.createObjectURL(new Blob([response.data]));\n        var link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', \"\\u80FD\\u6548\\u5206\\u6790_\".concat(new Date().toISOString().split('T')[0], \".\").concat(type));\n        document.body.appendChild(link);\n        link.click();\n      })[\"catch\"](function (error) {\n        console.error('导出数据失败:', error);\n        _this9.$message.error('导出数据失败');\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","energyEfficiencyApi","formatDateTime","calculateDuration","name","data","dateRange","Date","getTime","selectedStations","selectedRobots","stations","robots","currentChart","currentChartTitle","charts","efficiency","consumption","utilization","robot","peak","kpiData","title","value","unit","change","trend","mounted","initData","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","stationsResponse","robotsResponse","wrap","_callee$","_context","prev","next","getStations","sent","getRobots","fetchKpiData","fetchChartData","t0","console","error","$message","stop","handleDateChange","refreshData","handleStationChange","handleRobotChange","_this2","_callee2","params","response","_callee2$","_context2","getFilterParams","getKpiData","avgEfficiency","toFixed","efficiencyChange","totalEnergy","energyChange","utilizationChange","avgWaitTime","waitTimeChange","successRate","successRateChange","totalOrders","ordersChange","_this3","_callee3","_callee3$","_context3","renderEfficiencyChart","abrupt","renderConsumptionChart","renderUtilizationChart","renderRobotChart","renderPeakChart","t1","_this4","_callee4","option","_callee4$","_context4","getEfficiencyTrend","init","$refs","efficiencyChart","text","left","top","tooltip","trigger","legend","map","station","selected","reduce","acc","type","orient","grid","right","bottom","containLabel","xAxis","boundaryGap","timeline","yAxis","min","max","series","efficiencyData","smooth","setOption","off","_this5","_callee5","hours","days","_callee5$","_context5","getEnergyConsumptionDistribution","consumptionChart","position","formatter","concat","height","splitArea","show","axisLabel","visualMap","maxValue","calculable","color","label","emphasis","itemStyle","shadowBlur","shadowColor","_this6","_callee6","_callee6$","_context6","getStationUtilization","utilizationChart","axisPointer","item","stationName","stack","focus","busyHours","idleHours","maintenanceHours","errorHours","_this7","_callee7","_callee7$","_context7","getRobotChargingBehavior","robotChart","chargingCount","yAxisIndex","avgChargingDuration","avgWaitingTime","_this8","_callee8","_callee8$","_context8","getChargingPeakAnalysis","peakChart","requestCounts","avgWaitingTimes","startDate","toISOString","endDate","stationIds","length","robotIds","handleChartChange","chartType","titles","exportData","_this9","_objectSpread","exportType","then","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","split","body","appendChild","click"],"sources":["D:\\software_data\\Project\\Y0527\\CODE_BAK\\frontend\\src\\views\\EnergyEfficiency.vue"],"sourcesContent":["<template>\r\n  <div class=\"energy-efficiency-analysis\">\r\n    <!-- 筛选器部分 -->\r\n    <el-card class=\"filter-container\">\r\n      <div class=\"filter-row\">\r\n        <div class=\"date-picker\">\r\n          <el-date-picker\r\n            v-model=\"dateRange\"\r\n            type=\"daterange\"\r\n            range-separator=\"至\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\"\r\n            @change=\"handleDateChange\"\r\n          />\r\n        </div>\r\n        <div class=\"station-filter\">\r\n          <el-select\r\n            v-model=\"selectedStations\"\r\n            multiple\r\n            placeholder=\"选择充电站\"\r\n            @change=\"handleStationChange\"\r\n          >\r\n            <el-option\r\n              v-for=\"station in stations\"\r\n              :key=\"station.id\"\r\n              :label=\"station.name\"\r\n              :value=\"station.id\"\r\n            />\r\n          </el-select>\r\n        </div>\r\n        <div class=\"robot-filter\">\r\n          <el-select\r\n            v-model=\"selectedRobots\"\r\n            multiple\r\n            placeholder=\"选择机器人\"\r\n            @change=\"handleRobotChange\"\r\n          >\r\n            <el-option\r\n              v-for=\"robot in robots\"\r\n              :key=\"robot.id\"\r\n              :label=\"robot.name\"\r\n              :value=\"robot.id\"\r\n            />\r\n          </el-select>\r\n        </div>\r\n        <div class=\"export-buttons\">\r\n          <el-button type=\"primary\" @click=\"exportData('csv')\">\r\n            导出CSV\r\n          </el-button>\r\n          <el-button type=\"success\" @click=\"exportData('excel')\">\r\n            导出Excel\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- KPI指标卡片 -->\r\n    <el-row :gutter=\"20\" class=\"kpi-container\">\r\n      <el-col :span=\"4\" v-for=\"(kpi, index) in kpiData\" :key=\"index\">\r\n        <el-card class=\"kpi-card\">\r\n          <div class=\"kpi-title\">{{ kpi.title }}</div>\r\n          <div class=\"kpi-value\">{{ kpi.value }}{{ kpi.unit }}</div>\r\n          <div class=\"kpi-change\" :class=\"kpi.trend\">\r\n            <i :class=\"kpi.trend === 'up' ? 'el-icon-top' : 'el-icon-bottom'\"></i>\r\n            {{ kpi.change }}%\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 分析图表区域 -->\r\n    <el-card class=\"chart-container\">\r\n      <div class=\"chart-header\">\r\n        <h3>{{ currentChartTitle }}</h3>\r\n        <el-radio-group v-model=\"currentChart\" @change=\"handleChartChange\">\r\n          <el-radio-button label=\"efficiency\">充电效率趋势</el-radio-button>\r\n          <el-radio-button label=\"consumption\">能耗分布</el-radio-button>\r\n          <el-radio-button label=\"utilization\">充电站利用率</el-radio-button>\r\n          <el-radio-button label=\"robot\">机器人充电分析</el-radio-button>\r\n          <el-radio-button label=\"peak\">充电高峰期</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n      <div class=\"chart-content\">\r\n        <!-- 不同图表的容器 -->\r\n        <div v-show=\"currentChart === 'efficiency'\" class=\"chart-item\">\r\n          <div ref=\"efficiencyChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'consumption'\" class=\"chart-item\">\r\n          <div ref=\"consumptionChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'utilization'\" class=\"chart-item\">\r\n          <div ref=\"utilizationChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'robot'\" class=\"chart-item\">\r\n          <div ref=\"robotChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'peak'\" class=\"chart-item\">\r\n          <div ref=\"peakChart\" class=\"chart\"></div>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport energyEfficiencyApi from '@/api/energyEfficiency';\r\nimport { formatDateTime, calculateDuration } from '@/utils/dateTime';\r\n\r\nexport default {\r\n  name: 'EnergyEfficiencyAnalysis',\r\n  data() {\r\n    return {\r\n      // 筛选条件\r\n      dateRange: [new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000), new Date()],\r\n      selectedStations: [],\r\n      selectedRobots: [],\r\n      \r\n      // 数据列表\r\n      stations: [],\r\n      robots: [],\r\n      \r\n      // 图表相关\r\n      currentChart: 'efficiency',\r\n      currentChartTitle: '充电效率趋势分析',\r\n      charts: {\r\n        efficiency: null,\r\n        consumption: null,\r\n        utilization: null,\r\n        robot: null,\r\n        peak: null\r\n      },\r\n      \r\n      // KPI数据\r\n      kpiData: [\r\n        { title: '平均充电效率', value: 0, unit: '%', change: 0, trend: 'up' },\r\n        { title: '总能耗', value: 0, unit: 'kWh', change: 0, trend: 'up' },\r\n        { title: '充电器利用率', value: 0, unit: '%', change: 0, trend: 'up' },\r\n        { title: '平均等待时间', value: 0, unit: 'min', change: 0, trend: 'down' },\r\n        { title: '充电成功率', value: 0, unit: '%', change: 0, trend: 'up' },\r\n        { title: '总充电次数', value: 0, unit: '次', change: 0, trend: 'up' }\r\n      ]\r\n    };\r\n  },\r\n  \r\n  mounted() {\r\n    this.initData();\r\n  },\r\n  \r\n  methods: {\r\n    async initData() {\r\n      try {\r\n        // 获取充电站列表\r\n        const stationsResponse = await energyEfficiencyApi.getStations();\r\n        this.stations = stationsResponse.data;\r\n        \r\n        // 获取机器人列表\r\n        const robotsResponse = await energyEfficiencyApi.getRobots();\r\n        this.robots = robotsResponse.data;\r\n        \r\n        // 获取初始数据\r\n        this.fetchKpiData();\r\n        this.fetchChartData();\r\n      } catch (error) {\r\n        console.error('初始化数据失败:', error);\r\n        this.$message.error('加载数据失败，请重试');\r\n      }\r\n    },\r\n    \r\n    // 筛选器处理\r\n    handleDateChange() {\r\n      this.refreshData();\r\n    },\r\n    \r\n    handleStationChange() {\r\n      this.refreshData();\r\n    },\r\n    \r\n    handleRobotChange() {\r\n      this.refreshData();\r\n    },\r\n    \r\n    // 刷新所有数据\r\n    refreshData() {\r\n      this.fetchKpiData();\r\n      this.fetchChartData();\r\n    },\r\n    \r\n    // 获取KPI数据\r\n    async fetchKpiData() {\r\n      try {\r\n        const params = this.getFilterParams();\r\n        const response = await energyEfficiencyApi.getKpiData(params);\r\n        \r\n        this.kpiData = [\r\n          { \r\n            title: '平均充电效率', \r\n            value: response.data.avgEfficiency.toFixed(2), \r\n            unit: '%', \r\n            change: response.data.efficiencyChange.toFixed(2), \r\n            trend: response.data.efficiencyChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '总能耗', \r\n            value: response.data.totalEnergy.toFixed(2), \r\n            unit: 'kWh', \r\n            change: response.data.energyChange.toFixed(2), \r\n            trend: response.data.energyChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '充电器利用率', \r\n            value: response.data.utilization.toFixed(2), \r\n            unit: '%', \r\n            change: response.data.utilizationChange.toFixed(2), \r\n            trend: response.data.utilizationChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '平均等待时间', \r\n            value: response.data.avgWaitTime.toFixed(2), \r\n            unit: 'min', \r\n            change: response.data.waitTimeChange.toFixed(2), \r\n            trend: response.data.waitTimeChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '充电成功率', \r\n            value: response.data.successRate.toFixed(2), \r\n            unit: '%', \r\n            change: response.data.successRateChange.toFixed(2), \r\n            trend: response.data.successRateChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '总充电次数', \r\n            value: response.data.totalOrders || 0, \r\n            unit: '次', \r\n            change: response.data.ordersChange || 0, \r\n            trend: (response.data.ordersChange || 0) >= 0 ? 'up' : 'down' \r\n          }\r\n        ];\r\n      } catch (error) {\r\n        console.error('获取KPI数据失败:', error);\r\n        this.$message.error('获取KPI数据失败');\r\n      }\r\n    },\r\n    \r\n    // 获取图表数据并渲染\r\n    async fetchChartData() {\r\n      try {\r\n        const params = this.getFilterParams();\r\n        \r\n        // 根据当前选择的图表类型获取数据\r\n        switch (this.currentChart) {\r\n          case 'efficiency':\r\n            await this.renderEfficiencyChart(params);\r\n            break;\r\n          case 'consumption':\r\n            await this.renderConsumptionChart(params);\r\n            break;\r\n          case 'utilization':\r\n            await this.renderUtilizationChart(params);\r\n            break;\r\n          case 'robot':\r\n            await this.renderRobotChart(params);\r\n            break;\r\n          case 'peak':\r\n            await this.renderPeakChart(params);\r\n            break;\r\n        }\r\n      } catch (error) {\r\n        console.error('获取图表数据失败:', error);\r\n        this.$message.error('获取图表数据失败');\r\n      }\r\n    },\r\n    \r\n    // 充电效率趋势图\r\n    async renderEfficiencyChart(params) {\r\n      const response = await energyEfficiencyApi.getEfficiencyTrend(params);\r\n      \r\n      if (!this.charts.efficiency) {\r\n        this.charts.efficiency = echarts.init(this.$refs.efficiencyChart);\r\n      }\r\n      \r\n      const option = {\r\n        title: {\r\n          text: '充电效率趋势分析',\r\n          left: 'center',\r\n          top: '10px'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: response.data.stations.map(station => station.name),\r\n          selected: response.data.stations.reduce((acc, station) => {\r\n            acc[station.name] = true;\r\n            return acc;\r\n          }, {}),\r\n          top: '40px',\r\n          type: 'scroll',\r\n          orient: 'horizontal'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          top: '100px',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: response.data.timeline\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          name: '充电效率 (%)',\r\n          min: 50,\r\n          max: 100\r\n        },\r\n        series: response.data.stations.map(station => ({\r\n          name: station.name,\r\n          type: 'line',\r\n          data: station.efficiencyData,\r\n          smooth: true\r\n        }))\r\n      };\r\n      \r\n      this.charts.efficiency.setOption(option);\r\n      \r\n      // 取消图表的点击事件\r\n      this.charts.efficiency.off('click');\r\n    },\r\n    \r\n    // 能耗分布热力图\r\n    async renderConsumptionChart(params) {\r\n      const response = await energyEfficiencyApi.getEnergyConsumptionDistribution(params);\r\n      \r\n      if (!this.charts.consumption) {\r\n        this.charts.consumption = echarts.init(this.$refs.consumptionChart);\r\n      }\r\n      \r\n      const hours = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'];\r\n      const days = response.data.days;\r\n      \r\n      const option = {\r\n        title: {\r\n          text: '能耗分布热力图'\r\n        },\r\n        tooltip: {\r\n          position: 'top',\r\n          formatter: function (params) {\r\n            return `${params.data[1]}:00 - ${params.data[1] + 1}:00<br>日期: ${params.data[0]}<br>能耗: ${params.data[2].toFixed(2)} kWh`;\r\n          }\r\n        },\r\n        grid: {\r\n          height: '70%',\r\n          top: '10%'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: hours,\r\n          splitArea: {\r\n            show: true\r\n          },\r\n          axisLabel: {\r\n            formatter: '{value}:00'\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: days,\r\n          splitArea: {\r\n            show: true\r\n          }\r\n        },\r\n        visualMap: {\r\n          min: 0,\r\n          max: response.data.maxValue,\r\n          calculable: true,\r\n          orient: 'horizontal',\r\n          left: 'center',\r\n          bottom: '5%',\r\n          color: ['#d94e5d', '#eac736', '#50a3ba']\r\n        },\r\n        series: [{\r\n          name: '能耗 (kWh)',\r\n          type: 'heatmap',\r\n          data: response.data.data,\r\n          label: {\r\n            show: false\r\n          },\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }]\r\n      };\r\n      \r\n      this.charts.consumption.setOption(option);\r\n    },\r\n    \r\n    // 充电站利用率对比\r\n    async renderUtilizationChart(params) {\r\n      const response = await energyEfficiencyApi.getStationUtilization(params);\r\n      \r\n      if (!this.charts.utilization) {\r\n        this.charts.utilization = echarts.init(this.$refs.utilizationChart);\r\n      }\r\n      \r\n      const option = {\r\n        title: {\r\n          text: '充电站利用率对比'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['忙碌时间', '空闲时间', '维护时间', '故障时间']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value',\r\n          name: '小时',\r\n          max: 24\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: response.data.map(item => item.stationName)\r\n        },\r\n        series: [\r\n          {\r\n            name: '忙碌时间',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: {\r\n              show: true\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: response.data.map(item => item.busyHours)\r\n          },\r\n          {\r\n            name: '空闲时间',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: {\r\n              show: true\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: response.data.map(item => item.idleHours)\r\n          },\r\n          {\r\n            name: '维护时间',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: {\r\n              show: true\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: response.data.map(item => item.maintenanceHours)\r\n          },\r\n          {\r\n            name: '故障时间',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: {\r\n              show: true\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: response.data.map(item => item.errorHours)\r\n          }\r\n        ]\r\n      };\r\n      \r\n      this.charts.utilization.setOption(option);\r\n    },\r\n    \r\n    // 机器人充电行为分析\r\n    async renderRobotChart(params) {\r\n      const response = await energyEfficiencyApi.getRobotChargingBehavior(params);\r\n      \r\n      if (!this.charts.robot) {\r\n        this.charts.robot = echarts.init(this.$refs.robotChart);\r\n      }\r\n      \r\n      const option = {\r\n        title: {\r\n          text: '机器人充电行为分析'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['充电次数', '平均充电时长', '平均等待时间']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            data: response.data.robots.map(robot => robot.name),\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n            name: '次数',\r\n            min: 0,\r\n            axisLabel: {\r\n              formatter: '{value}'\r\n            }\r\n          },\r\n          {\r\n            type: 'value',\r\n            name: '时间 (分钟)',\r\n            min: 0,\r\n            axisLabel: {\r\n              formatter: '{value} min'\r\n            }\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: '充电次数',\r\n            type: 'bar',\r\n            data: response.data.robots.map(robot => robot.chargingCount)\r\n          },\r\n          {\r\n            name: '平均充电时长',\r\n            type: 'line',\r\n            yAxisIndex: 1,\r\n            data: response.data.robots.map(robot => robot.avgChargingDuration)\r\n          },\r\n          {\r\n            name: '平均等待时间',\r\n            type: 'line',\r\n            yAxisIndex: 1,\r\n            data: response.data.robots.map(robot => robot.avgWaitingTime)\r\n          }\r\n        ]\r\n      };\r\n      \r\n      this.charts.robot.setOption(option);\r\n    },\r\n    \r\n    // 充电高峰期分析\r\n    async renderPeakChart(params) {\r\n      const response = await energyEfficiencyApi.getChargingPeakAnalysis(params);\r\n      \r\n      if (!this.charts.peak) {\r\n        this.charts.peak = echarts.init(this.$refs.peakChart);\r\n      }\r\n      \r\n      const option = {\r\n        title: {\r\n          text: '充电高峰期分析'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['充电请求数', '平均等待时间']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            data: ['0-2', '2-4', '4-6', '6-8', '8-10', '10-12', '12-14', '14-16', '16-18', '18-20', '20-22', '22-24'],\r\n            axisLabel: {\r\n              formatter: '{value}时'\r\n            }\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n            name: '请求数',\r\n            min: 0,\r\n            axisLabel: {\r\n              formatter: '{value}'\r\n            }\r\n          },\r\n          {\r\n            type: 'value',\r\n            name: '等待时间 (分钟)',\r\n            min: 0,\r\n            axisLabel: {\r\n              formatter: '{value} min'\r\n            }\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: '充电请求数',\r\n            type: 'bar',\r\n            data: response.data.requestCounts\r\n          },\r\n          {\r\n            name: '平均等待时间',\r\n            type: 'line',\r\n            yAxisIndex: 1,\r\n            data: response.data.avgWaitingTimes\r\n          }\r\n        ]\r\n      };\r\n      \r\n      this.charts.peak.setOption(option);\r\n    },\r\n    \r\n    // 获取筛选参数\r\n    getFilterParams() {\r\n      return {\r\n        startDate: this.dateRange[0] ? this.dateRange[0].toISOString() : null,\r\n        endDate: this.dateRange[1] ? this.dateRange[1].toISOString() : null,\r\n        stationIds: this.selectedStations.length > 0 ? this.selectedStations : null,\r\n        robotIds: this.selectedRobots.length > 0 ? this.selectedRobots : null\r\n      };\r\n    },\r\n    \r\n    // 处理图表切换\r\n    handleChartChange(chartType) {\r\n      const titles = {\r\n        efficiency: '充电效率趋势分析',\r\n        consumption: '能耗分布热力图',\r\n        utilization: '充电站利用率对比',\r\n        robot: '机器人充电行为分析',\r\n        peak: '充电高峰期分析'\r\n      };\r\n      \r\n      this.currentChartTitle = titles[chartType];\r\n      this.fetchChartData();\r\n    },\r\n    \r\n    // 数据导出\r\n    exportData(type) {\r\n      const params = {\r\n        ...this.getFilterParams(),\r\n        exportType: type\r\n      };\r\n      \r\n      energyEfficiencyApi.exportData(params)\r\n        .then(response => {\r\n          const url = window.URL.createObjectURL(new Blob([response.data]));\r\n          const link = document.createElement('a');\r\n          link.href = url;\r\n          link.setAttribute('download', `能效分析_${new Date().toISOString().split('T')[0]}.${type}`);\r\n          document.body.appendChild(link);\r\n          link.click();\r\n        })\r\n        .catch(error => {\r\n          console.error('导出数据失败:', error);\r\n          this.$message.error('导出数据失败');\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.energy-efficiency-analysis {\r\n  padding: 20px;\r\n}\r\n\r\n.filter-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.date-picker, .station-filter, .robot-filter {\r\n  margin-right: 15px;\r\n  min-width: 200px;\r\n}\r\n\r\n.export-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.kpi-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.kpi-card {\r\n  text-align: center;\r\n  padding: 10px;\r\n}\r\n\r\n.kpi-title {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.kpi-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.kpi-change {\r\n  font-size: 12px;\r\n}\r\n\r\n.kpi-change.up {\r\n  color: #67c23a;\r\n}\r\n\r\n.kpi-change.down {\r\n  color: #f56c6c;\r\n}\r\n\r\n.chart-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-content {\r\n  position: relative;\r\n}\r\n\r\n.chart-item {\r\n  position: relative;\r\n}\r\n\r\n.chart {\r\n  height: 400px;\r\n  width: 100%;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}