{"ast":null,"code":"import _createClass from \"C:/Users/jiaronghao/Desktop/Documents/\\u672C\\u79D1\\u8BBA\\u6587\\u7F16\\u5199/5\\u3001\\u8D27\\u4ED3\\u673A\\u5668\\u4EBA\\u6FC0\\u5149\\u5145\\u7535\\u548C\\u80FD\\u6548\\u7BA1\\u7406\\u4E91\\u5E73\\u53F0\\u7684\\u8BBE\\u8BA1\\u4E0E\\u5B9E\\u73B0/Y0527-final/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/jiaronghao/Desktop/Documents/\\u672C\\u79D1\\u8BBA\\u6587\\u7F16\\u5199/5\\u3001\\u8D27\\u4ED3\\u673A\\u5668\\u4EBA\\u6FC0\\u5149\\u5145\\u7535\\u548C\\u80FD\\u6548\\u7BA1\\u7406\\u4E91\\u5E73\\u53F0\\u7684\\u8BBE\\u8BA1\\u4E0E\\u5B9E\\u73B0/Y0527-final/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _objectSpread from \"C:/Users/jiaronghao/Desktop/Documents/\\u672C\\u79D1\\u8BBA\\u6587\\u7F16\\u5199/5\\u3001\\u8D27\\u4ED3\\u673A\\u5668\\u4EBA\\u6FC0\\u5149\\u5145\\u7535\\u548C\\u80FD\\u6548\\u7BA1\\u7406\\u4E91\\u5E73\\u53F0\\u7684\\u8BBE\\u8BA1\\u4E0E\\u5B9E\\u73B0/Y0527-final/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/jiaronghao/Desktop/Documents/\\u672C\\u79D1\\u8BBA\\u6587\\u7F16\\u5199/5\\u3001\\u8D27\\u4ED3\\u673A\\u5668\\u4EBA\\u6FC0\\u5149\\u5145\\u7535\\u548C\\u80FD\\u6548\\u7BA1\\u7406\\u4E91\\u5E73\\u53F0\\u7684\\u8BBE\\u8BA1\\u4E0E\\u5B9E\\u73B0/Y0527-final/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _typeof from \"C:/Users/jiaronghao/Desktop/Documents/\\u672C\\u79D1\\u8BBA\\u6587\\u7F16\\u5199/5\\u3001\\u8D27\\u4ED3\\u673A\\u5668\\u4EBA\\u6FC0\\u5149\\u5145\\u7535\\u548C\\u80FD\\u6548\\u7BA1\\u7406\\u4E91\\u5E73\\u53F0\\u7684\\u8BBE\\u8BA1\\u4E0E\\u5B9E\\u73B0/Y0527-final/frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _asyncToGenerator from \"C:/Users/jiaronghao/Desktop/Documents/\\u672C\\u79D1\\u8BBA\\u6587\\u7F16\\u5199/5\\u3001\\u8D27\\u4ED3\\u673A\\u5668\\u4EBA\\u6FC0\\u5149\\u5145\\u7535\\u548C\\u80FD\\u6548\\u7BA1\\u7406\\u4E91\\u5E73\\u53F0\\u7684\\u8BBE\\u8BA1\\u4E0E\\u5B9E\\u73B0/Y0527-final/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { stationApi } from '@/api';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { robotApi } from '@/api';\nexport default {\n  name: 'Stations',\n  setup: function setup() {\n    var store = useStore();\n    var isAdmin = computed(function () {\n      return store.getters.isAdmin;\n    });\n    return {\n      isAdmin: isAdmin\n    };\n  },\n  data: function data() {\n    return {\n      stations: [],\n      robots: [],\n      loading: false,\n      error: null,\n      dialogVisible: false,\n      dialogTitle: '添加充电站',\n      stationForm: {\n        name: '',\n        location: '',\n        power_rating: 0\n      },\n      isEdit: false,\n      currentId: null,\n      // 分页相关\n      currentPage: 1,\n      pageSize: 10,\n      // 防止表单重复提交\n      isSaving: false\n    };\n  },\n  computed: {\n    totalItems: function totalItems() {\n      return this.stations.length;\n    },\n    paginatedStations: function paginatedStations() {\n      var startIndex = (this.currentPage - 1) * this.pageSize;\n      var endIndex = startIndex + this.pageSize;\n      return this.stations.slice(startIndex, endIndex);\n    }\n  },\n  created: function created() {\n    console.log('Stations组件已创建，准备获取数据');\n    this.fetchStations();\n    this.fetchRobots();\n  },\n  methods: {\n    fetchStations: function fetchStations() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, validStations;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _this.loading = true;\n              _this.error = null;\n              console.log('开始获取充电站数据');\n              _context.prev = 4;\n              _context.next = 7;\n              return stationApi.getAll();\n            case 7:\n              response = _context.sent;\n              // 打印原始响应\n              console.log('获取到充电站数据(原始):', response);\n              console.log('获取到充电站数据:', response.data);\n              console.log('充电站数据类型:', _typeof(response.data), Array.isArray(response.data));\n\n              // 确保数据是数组\n              if (Array.isArray(response.data)) {\n                // 检查每个充电站对象的字段\n                validStations = response.data.filter(function (station) {\n                  var isValid = station && _typeof(station) === 'object' && 'id' in station && 'name' in station && 'location' in station && 'status' in station;\n\n                  // 处理可能的NaN或undefined值\n                  if (isValid) {\n                    // 确保power_rating字段存在且为数字\n                    if (!('power_rating' in station) || station.power_rating === null || isNaN(station.power_rating)) {\n                      station.power_rating = 0;\n                    }\n\n                    // 确保efficiency字段存在且为数字\n                    if (!('efficiency' in station) || station.efficiency === null || isNaN(station.efficiency)) {\n                      station.efficiency = 80; // 默认效率\n                    }\n                  } else {\n                    console.warn('过滤掉无效的充电站数据:', station);\n                  }\n                  return isValid;\n                });\n                console.log('有效的充电站数据:', validStations);\n                _this.stations = validStations;\n                // 重置为第一页\n                _this.currentPage = 1;\n                console.log('成功设置充电站数据，数量:', _this.stations.length);\n              } else {\n                console.error('API返回的充电站数据不是数组:', response.data);\n                _this.stations = []; // 设置为空数组\n                _this.error = '充电站数据格式错误，请联系管理员';\n                ElMessage.error('充电站数据格式错误');\n              }\n              _context.next = 20;\n              break;\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](4);\n              console.error('API调用出错:', _context.t0);\n              _this.stations = []; // 确保错误时也设置为空数组\n              _this.error = \"API\\u8C03\\u7528\\u51FA\\u9519: \".concat(_context.t0.message || '未知错误');\n              ElMessage.error('获取充电站数据失败');\n            case 20:\n              _context.next = 28;\n              break;\n            case 22:\n              _context.prev = 22;\n              _context.t1 = _context[\"catch\"](0);\n              console.error('获取充电站列表失败:', _context.t1);\n              _this.stations = []; // 确保错误时也设置为空数组\n              _this.error = \"\\u83B7\\u53D6\\u6570\\u636E\\u5931\\u8D25: \".concat(_context.t1.message || '未知错误');\n              ElMessage.error('获取充电站列表失败');\n            case 28:\n              _context.prev = 28;\n              _this.loading = false;\n              return _context.finish(28);\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 22, 28, 31], [4, 14]]);\n      }))();\n    },\n    fetchRobots: function fetchRobots() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              console.log('开始获取机器人数据');\n              _context2.next = 4;\n              return robotApi.getAll();\n            case 4:\n              response = _context2.sent;\n              if (Array.isArray(response.data)) {\n                _this2.robots = response.data;\n                console.log('成功获取机器人数据，数量:', _this2.robots.length);\n              } else {\n                console.error('API返回的机器人数据不是数组');\n                _this2.robots = [];\n              }\n              _context2.next = 12;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('获取机器人列表失败:', _context2.t0);\n              _this2.robots = [];\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 8]]);\n      }))();\n    },\n    // 分页相关方法\n    handleCurrentChange: function handleCurrentChange(page) {\n      this.currentPage = page;\n      console.log(\"\\u5F53\\u524D\\u9875: \".concat(this.currentPage));\n    },\n    getStatusType: function getStatusType(status) {\n      var types = {\n        'idle': 'info',\n        'charging': 'primary',\n        'maintenance': 'warning',\n        'error': 'danger'\n      };\n      return types[status] || 'info';\n    },\n    getStatusText: function getStatusText(status) {\n      var texts = {\n        'idle': '空闲',\n        'charging': '充电中',\n        'maintenance': '维护中',\n        'error': '故障'\n      };\n      return texts[status] || status;\n    },\n    showAddDialog: function showAddDialog() {\n      var _this3 = this;\n      this.dialogTitle = '添加充电站';\n      this.isEdit = false;\n      this.stationForm = {\n        name: '',\n        location: '',\n        power_rating: 0\n      };\n      this.isSaving = false;\n      // 使用nextTick确保DOM更新后再显示对话框\n      this.$nextTick(function () {\n        _this3.dialogVisible = true;\n      });\n    },\n    handleEdit: function handleEdit(row) {\n      var _this4 = this;\n      this.dialogTitle = '编辑充电站';\n      this.isEdit = true;\n      this.currentId = row.id;\n      this.stationForm = _objectSpread({}, row);\n      this.isSaving = false;\n      // 使用nextTick确保DOM更新后再显示对话框\n      this.$nextTick(function () {\n        _this4.dialogVisible = true;\n      });\n    },\n    handleDelete: function handleDelete(row) {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var disableResizeObservers, chartElements;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return ElMessageBox.confirm('确定要删除这个充电站吗？', '提示', {\n                type: 'warning'\n              });\n            case 3:\n              // 禁用所有可能的ResizeObserver\n              try {\n                // 尝试临时禁用所有ResizeObserver\n                disableResizeObservers = function disableResizeObservers() {\n                  if (window.ResizeObserver) {\n                    var originalResizeObserver = window.ResizeObserver;\n                    window.ResizeObserver = /*#__PURE__*/_createClass(function DisabledResizeObserver() {\n                      _classCallCheck(this, DisabledResizeObserver);\n                      this.observe = function () {};\n                      this.unobserve = function () {};\n                      this.disconnect = function () {};\n                    });\n                    // 5秒后恢复原始ResizeObserver\n                    setTimeout(function () {\n                      window.ResizeObserver = originalResizeObserver;\n                    }, 5000);\n                  }\n                }; // 只在开发环境执行，避免影响生产环境\n                if (process.env.NODE_ENV === 'development') {\n                  disableResizeObservers();\n                }\n              } catch (e) {\n                console.warn('临时禁用ResizeObserver失败:', e);\n              }\n\n              // 在删除前先通知其他组件准备清理资源\n              try {\n                if (_this5.$root && _this5.$root.$emit) {\n                  _this5.$root.$emit('station-pre-delete', row.id);\n                }\n              } catch (e) {\n                console.error('发送预删除事件失败:', e);\n              }\n\n              // 延迟一小段时间让其他组件有时间做准备\n              _context3.next = 7;\n              return new Promise(function (resolve) {\n                return setTimeout(resolve, 100);\n              });\n            case 7:\n              _context3.next = 9;\n              return stationApi[\"delete\"](row.id);\n            case 9:\n              ElMessage.success('删除成功');\n\n              // 立即清理可能存在的悬空引用\n              try {\n                // 移除所有能效分析相关的图表DOM元素内容\n                chartElements = document.querySelectorAll('.chart');\n                chartElements.forEach(function (el) {\n                  if (el && el.parentNode) {\n                    el.innerHTML = '';\n                  }\n                });\n\n                // 强制执行一次浏览器布局重排\n                if (document.body) {\n                  document.body.offsetHeight;\n                }\n              } catch (e) {\n                console.warn('清理DOM失败:', e);\n              }\n\n              // 延迟刷新数据，让DOM有时间完成清理\n              setTimeout(function () {\n                _this5.fetchStations();\n\n                // 向父组件或全局事件总线发送刷新通知\n                _this5.$emit('station-deleted', row.id);\n\n                // 尝试发送全局事件通知其他组件刷新\n                try {\n                  if (_this5.$root && _this5.$root.$emit) {\n                    _this5.$root.$emit('station-data-changed', {\n                      action: 'delete',\n                      stationId: row.id\n                    });\n                  }\n                } catch (e) {\n                  console.error('发送全局事件失败:', e);\n                }\n\n                // 延迟执行一次全局垃圾回收\n                setTimeout(function () {\n                  try {\n                    if (window.gc) window.gc();\n                  } catch (e) {\n                    // 大多数浏览器不支持直接调用gc，忽略错误\n                  }\n\n                  // 强制刷新所有图表\n                  try {\n                    if (_this5.$root && _this5.$root.$emit) {\n                      _this5.$root.$emit('force-refresh-charts');\n                    }\n                  } catch (e) {\n                    console.warn('强制刷新图表失败:', e);\n                  }\n                }, 1000);\n              }, 300);\n              _context3.next = 17;\n              break;\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](0);\n              if (_context3.t0 !== 'cancel') {\n                ElMessage.error('删除失败');\n                console.error(_context3.t0);\n              }\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 14]]);\n      }))();\n    },\n    handleDialogOpen: function handleDialogOpen() {\n      // 对话框打开时重置表单状态\n      this.isSaving = false;\n      console.log('对话框已打开');\n    },\n    closeDialog: function closeDialog() {\n      var _this6 = this;\n      // 先隐藏内容，延迟关闭对话框，避免ResizeObserver错误\n      var dialogContent = document.querySelector('.dialog-content-wrapper');\n      if (dialogContent) {\n        dialogContent.style.display = 'none';\n      }\n\n      // 使用较长的延时确保DOM完全稳定\n      setTimeout(function () {\n        _this6.dialogVisible = false;\n      }, 300);\n    },\n    handleSave: function handleSave() {\n      var _this7 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var dialogContent, formData, response, _response, _dialogContent;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!_this7.isSaving) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 2:\n              _context4.prev = 2;\n              _this7.isSaving = true;\n\n              // 先隐藏内容，减少DOM重排\n              dialogContent = document.querySelector('.dialog-content-wrapper');\n              if (dialogContent) {\n                dialogContent.style.display = 'none';\n              }\n\n              // 准备提交的数据\n              formData = _objectSpread({}, _this7.stationForm); // 确保功率值是数字\n              if (formData.power_rating !== undefined) {\n                try {\n                  formData.power_rating = parseFloat(formData.power_rating);\n                  if (isNaN(formData.power_rating)) {\n                    formData.power_rating = 0;\n                  }\n                } catch (e) {\n                  formData.power_rating = 0;\n                }\n              } else {\n                formData.power_rating = 0;\n              }\n              console.log('准备提交的充电站数据:', formData);\n\n              // 验证数据\n              if (!(!formData.name || formData.name.trim() === '')) {\n                _context4.next = 11;\n                break;\n              }\n              throw new Error('充电站名称不能为空');\n            case 11:\n              if (!(!formData.location || formData.location.trim() === '')) {\n                _context4.next = 13;\n                break;\n              }\n              throw new Error('充电站位置不能为空');\n            case 13:\n              if (!_this7.isEdit) {\n                _context4.next = 29;\n                break;\n              }\n              console.log(\"\\u66F4\\u65B0\\u5145\\u7535\\u7AD9: ID=\".concat(_this7.currentId));\n              _context4.prev = 15;\n              _context4.next = 18;\n              return stationApi.update(_this7.currentId, formData);\n            case 18:\n              response = _context4.sent;\n              console.log('更新充电站响应:', response);\n              ElMessage.success('更新成功');\n              _context4.next = 27;\n              break;\n            case 23:\n              _context4.prev = 23;\n              _context4.t0 = _context4[\"catch\"](15);\n              console.error('API调用失败:', _context4.t0);\n              throw new Error(\"\\u66F4\\u65B0\\u5931\\u8D25: \".concat(_context4.t0.message || '服务器错误'));\n            case 27:\n              _context4.next = 42;\n              break;\n            case 29:\n              console.log('添加新充电站');\n              _context4.prev = 30;\n              _context4.next = 33;\n              return stationApi.add(formData);\n            case 33:\n              _response = _context4.sent;\n              console.log('添加充电站响应:', _response);\n              ElMessage.success('添加成功');\n              _context4.next = 42;\n              break;\n            case 38:\n              _context4.prev = 38;\n              _context4.t1 = _context4[\"catch\"](30);\n              console.error('API调用失败:', _context4.t1);\n              throw new Error(\"\\u6DFB\\u52A0\\u5931\\u8D25: \".concat(_context4.t1.message || '服务器错误'));\n            case 42:\n              // 延迟关闭对话框，避免ResizeObserver错误\n              setTimeout(function () {\n                _this7.dialogVisible = false;\n                // 重新加载数据，显示最新的充电站列表\n                _this7.fetchStations();\n              }, 300);\n              _context4.next = 52;\n              break;\n            case 45:\n              _context4.prev = 45;\n              _context4.t2 = _context4[\"catch\"](2);\n              // 出错时也恢复显示内容\n              _dialogContent = document.querySelector('.dialog-content-wrapper');\n              if (_dialogContent) {\n                _dialogContent.style.display = 'block';\n              }\n              console.error('保存充电站失败:', _context4.t2);\n              ElMessage.error(_context4.t2.message || (_this7.isEdit ? '更新失败' : '添加失败'));\n              _this7.isSaving = false;\n            case 52:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[2, 45], [15, 23], [30, 38]]);\n      }))();\n    },\n    getAssociatedRobot: function getAssociatedRobot(stationId) {\n      // 查找关联到此充电桩的机器人\n      return this.robots.find(function (robot) {\n        return robot.station_id === stationId;\n      });\n    }\n  }\n};","map":{"version":3,"names":["stationApi","ElMessage","ElMessageBox","computed","useStore","robotApi","name","setup","store","isAdmin","getters","data","stations","robots","loading","error","dialogVisible","dialogTitle","stationForm","location","power_rating","isEdit","currentId","currentPage","pageSize","isSaving","totalItems","length","paginatedStations","startIndex","endIndex","slice","created","console","log","fetchStations","fetchRobots","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","validStations","wrap","_callee$","_context","prev","next","getAll","sent","_typeof","Array","isArray","filter","station","isValid","isNaN","efficiency","warn","t0","concat","message","t1","finish","stop","_this2","_callee2","_callee2$","_context2","handleCurrentChange","page","getStatusType","status","types","getStatusText","texts","showAddDialog","_this3","$nextTick","handleEdit","row","_this4","id","_objectSpread","handleDelete","_this5","_callee3","disableResizeObservers","chartElements","_callee3$","_context3","confirm","type","window","ResizeObserver","originalResizeObserver","_createClass","DisabledResizeObserver","_classCallCheck","observe","unobserve","disconnect","setTimeout","process","env","NODE_ENV","e","$root","$emit","Promise","resolve","success","document","querySelectorAll","forEach","el","parentNode","innerHTML","body","offsetHeight","action","stationId","gc","handleDialogOpen","closeDialog","_this6","dialogContent","querySelector","style","display","handleSave","_this7","_callee4","formData","_response","_dialogContent","_callee4$","_context4","abrupt","undefined","parseFloat","trim","Error","update","add","t2","getAssociatedRobot","find","robot","station_id"],"sources":["C:\\Users\\jiaronghao\\Desktop\\Documents\\本科论文编写\\5、货仓机器人激光充电和能效管理云平台的设计与实现\\Y0527-final\\frontend\\src\\views\\Stations.vue"],"sourcesContent":["<template>\n  <div class=\"stations-container\">\n    <h2>充电站管理</h2>\n    <el-card class=\"box-card\">\n      <div class=\"toolbar\">\n        <el-button v-if=\"isAdmin\" type=\"primary\" @click=\"showAddDialog\">添加充电站</el-button>\n      </div>\n      \n      <div v-if=\"error\" class=\"error-message\">\n        <el-alert\n          title=\"加载数据出错\"\n          type=\"error\"\n          :description=\"error\"\n          show-icon\n        />\n      </div>\n      \n      <el-table \n        v-if=\"stations && stations.length > 0\" \n        :data=\"paginatedStations\" \n        style=\"width: 100%\" \n        v-loading=\"loading\">\n        <el-table-column prop=\"id\" label=\"充电站ID\" width=\"180\" />\n        <el-table-column prop=\"name\" label=\"名称\" width=\"180\" />\n        <el-table-column prop=\"location\" label=\"位置\" />\n        <el-table-column prop=\"status\" label=\"状态\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.status)\">\n              {{ getStatusText(scope.row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"power_rating\" label=\"输出功率\" />\n        <el-table-column prop=\"efficiency\" label=\"充电效率\">\n          <template #default=\"scope\">\n            <el-progress :percentage=\"scope.row.efficiency\" />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"关联机器人\">\n          <template #default=\"scope\">\n            <div v-if=\"getAssociatedRobot(scope.row.id)\">\n              <el-tag type=\"primary\">\n                {{ getAssociatedRobot(scope.row.id).name }}\n                <span v-if=\"getAssociatedRobot(scope.row.id).status === 'charging'\"> (充电中)</span>\n              </el-tag>\n            </div>\n            <span v-else class=\"no-robot\">无关联机器人</span>\n          </template>\n        </el-table-column>\n        <el-table-column v-if=\"isAdmin\" label=\"操作\" width=\"200\">\n          <template #default=\"scope\">\n            <el-button size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button size=\"small\" type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <div v-else-if=\"!loading\" class=\"no-data\">\n        <el-empty description=\"暂无数据\" />\n      </div>\n      \n      <!-- 分页控件 -->\n      <div class=\"pagination-container\" v-if=\"stations && stations.length > 0\">\n        <el-pagination\n          v-model:current-page=\"currentPage\"\n          :page-size=\"pageSize\"\n          :total=\"totalItems\"\n          layout=\"total, prev, pager, next, jumper\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n\n    <!-- 添加/编辑对话框 -->\n    <el-dialog \n      :title=\"dialogTitle\" \n      v-model=\"dialogVisible\"\n      :close-on-click-modal=\"false\"\n      :destroy-on-close=\"true\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      width=\"500px\"\n      :lock-scroll=\"false\"\n      @open=\"handleDialogOpen\">\n      <div class=\"dialog-content-wrapper\">\n        <el-form \n          :model=\"stationForm\" \n          label-width=\"120px\" \n          ref=\"stationFormRef\" \n          :key=\"`station-form-${dialogVisible}`\">\n          <el-form-item label=\"充电站名称\">\n            <el-input v-model=\"stationForm.name\" />\n          </el-form-item>\n          <el-form-item label=\"位置\">\n            <el-input v-model=\"stationForm.location\" />\n          </el-form-item>\n          <el-form-item label=\"输出功率\">\n            <el-input-number v-model=\"stationForm.power_rating\" :min=\"0\" :controls=\"false\" />\n          </el-form-item>\n        </el-form>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"closeDialog\">取消</el-button>\n          <el-button type=\"primary\" @click=\"handleSave\">确定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { stationApi } from '@/api'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { robotApi } from '@/api'\n\nexport default {\n  name: 'Stations',\n  setup() {\n    const store = useStore()\n    const isAdmin = computed(() => store.getters.isAdmin)\n    \n    return {\n      isAdmin\n    }\n  },\n  data() {\n    return {\n      stations: [],\n      robots: [],\n      loading: false,\n      error: null,\n      dialogVisible: false,\n      dialogTitle: '添加充电站',\n      stationForm: {\n        name: '',\n        location: '',\n        power_rating: 0\n      },\n      isEdit: false,\n      currentId: null,\n      // 分页相关\n      currentPage: 1,\n      pageSize: 10,\n      // 防止表单重复提交\n      isSaving: false\n    }\n  },\n  computed: {\n    totalItems() {\n      return this.stations.length\n    },\n    paginatedStations() {\n      const startIndex = (this.currentPage - 1) * this.pageSize\n      const endIndex = startIndex + this.pageSize\n      return this.stations.slice(startIndex, endIndex)\n    }\n  },\n  created() {\n    console.log('Stations组件已创建，准备获取数据')\n    this.fetchStations()\n    this.fetchRobots()\n  },\n  methods: {\n    async fetchStations() {\n      try {\n        this.loading = true\n        this.error = null\n        console.log('开始获取充电站数据')\n        \n        try {\n          const response = await stationApi.getAll()\n          // 打印原始响应\n          console.log('获取到充电站数据(原始):', response)\n          console.log('获取到充电站数据:', response.data)\n          console.log('充电站数据类型:', typeof response.data, Array.isArray(response.data))\n          \n          // 确保数据是数组\n          if (Array.isArray(response.data)) {\n            // 检查每个充电站对象的字段\n            const validStations = response.data.filter(station => {\n              const isValid = station && \n                            typeof station === 'object' && \n                            'id' in station && \n                            'name' in station && \n                            'location' in station && \n                            'status' in station;\n              \n              // 处理可能的NaN或undefined值\n              if (isValid) {\n                // 确保power_rating字段存在且为数字\n                if (!('power_rating' in station) || station.power_rating === null || isNaN(station.power_rating)) {\n                  station.power_rating = 0;\n                }\n                \n                // 确保efficiency字段存在且为数字\n                if (!('efficiency' in station) || station.efficiency === null || isNaN(station.efficiency)) {\n                  station.efficiency = 80; // 默认效率\n                }\n              } else {\n                console.warn('过滤掉无效的充电站数据:', station);\n              }\n              return isValid;\n            });\n            \n            console.log('有效的充电站数据:', validStations);\n            this.stations = validStations;\n            // 重置为第一页\n            this.currentPage = 1;\n            console.log('成功设置充电站数据，数量:', this.stations.length)\n          } else {\n            console.error('API返回的充电站数据不是数组:', response.data)\n            this.stations = [] // 设置为空数组\n            this.error = '充电站数据格式错误，请联系管理员'\n            ElMessage.error('充电站数据格式错误')\n          }\n        } catch (apiError) {\n          console.error('API调用出错:', apiError)\n          this.stations = [] // 确保错误时也设置为空数组\n          this.error = `API调用出错: ${apiError.message || '未知错误'}`\n          ElMessage.error('获取充电站数据失败')\n        }\n      } catch (error) {\n        console.error('获取充电站列表失败:', error)\n        this.stations = [] // 确保错误时也设置为空数组\n        this.error = `获取数据失败: ${error.message || '未知错误'}`\n        ElMessage.error('获取充电站列表失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    async fetchRobots() {\n      try {\n        console.log('开始获取机器人数据')\n        const response = await robotApi.getAll()\n        \n        if (Array.isArray(response.data)) {\n          this.robots = response.data\n          console.log('成功获取机器人数据，数量:', this.robots.length)\n        } else {\n          console.error('API返回的机器人数据不是数组')\n          this.robots = []\n        }\n      } catch (error) {\n        console.error('获取机器人列表失败:', error)\n        this.robots = []\n      }\n    },\n    // 分页相关方法\n    handleCurrentChange(page) {\n      this.currentPage = page\n      console.log(`当前页: ${this.currentPage}`)\n    },\n    getStatusType(status) {\n      const types = {\n        'idle': 'info',\n        'charging': 'primary',\n        'maintenance': 'warning',\n        'error': 'danger'\n      }\n      return types[status] || 'info'\n    },\n    getStatusText(status) {\n      const texts = {\n        'idle': '空闲',\n        'charging': '充电中',\n        'maintenance': '维护中',\n        'error': '故障'\n      }\n      return texts[status] || status\n    },\n    showAddDialog() {\n      this.dialogTitle = '添加充电站'\n      this.isEdit = false\n      this.stationForm = {\n        name: '',\n        location: '',\n        power_rating: 0\n      }\n      this.isSaving = false\n      // 使用nextTick确保DOM更新后再显示对话框\n      this.$nextTick(() => {\n        this.dialogVisible = true\n      })\n    },\n    handleEdit(row) {\n      this.dialogTitle = '编辑充电站'\n      this.isEdit = true\n      this.currentId = row.id\n      this.stationForm = { ...row }\n      this.isSaving = false\n      // 使用nextTick确保DOM更新后再显示对话框\n      this.$nextTick(() => {\n        this.dialogVisible = true\n      })\n    },\n    async handleDelete(row) {\n      try {\n        await ElMessageBox.confirm('确定要删除这个充电站吗？', '提示', {\n          type: 'warning'\n        })\n        \n        // 禁用所有可能的ResizeObserver\n        try {\n          // 尝试临时禁用所有ResizeObserver\n          const disableResizeObservers = () => {\n            if (window.ResizeObserver) {\n              const originalResizeObserver = window.ResizeObserver;\n              window.ResizeObserver = class DisabledResizeObserver {\n                constructor() {\n                  this.observe = () => {};\n                  this.unobserve = () => {};\n                  this.disconnect = () => {};\n                }\n              };\n              // 5秒后恢复原始ResizeObserver\n              setTimeout(() => {\n                window.ResizeObserver = originalResizeObserver;\n              }, 5000);\n            }\n          };\n          \n          // 只在开发环境执行，避免影响生产环境\n          if (process.env.NODE_ENV === 'development') {\n            disableResizeObservers();\n          }\n        } catch (e) {\n          console.warn('临时禁用ResizeObserver失败:', e);\n        }\n        \n        // 在删除前先通知其他组件准备清理资源\n        try {\n          if (this.$root && this.$root.$emit) {\n            this.$root.$emit('station-pre-delete', row.id);\n          }\n        } catch (e) {\n          console.error('发送预删除事件失败:', e);\n        }\n        \n        // 延迟一小段时间让其他组件有时间做准备\n        await new Promise(resolve => setTimeout(resolve, 100));\n        \n        // 执行删除操作\n        await stationApi.delete(row.id);\n        ElMessage.success('删除成功');\n        \n        // 立即清理可能存在的悬空引用\n        try {\n          // 移除所有能效分析相关的图表DOM元素内容\n          const chartElements = document.querySelectorAll('.chart');\n          chartElements.forEach(el => {\n            if (el && el.parentNode) {\n              el.innerHTML = '';\n            }\n          });\n          \n          // 强制执行一次浏览器布局重排\n          if (document.body) {\n            document.body.offsetHeight;\n          }\n        } catch (e) {\n          console.warn('清理DOM失败:', e);\n        }\n        \n        // 延迟刷新数据，让DOM有时间完成清理\n        setTimeout(() => {\n          this.fetchStations();\n          \n          // 向父组件或全局事件总线发送刷新通知\n          this.$emit('station-deleted', row.id);\n          \n          // 尝试发送全局事件通知其他组件刷新\n          try {\n            if (this.$root && this.$root.$emit) {\n              this.$root.$emit('station-data-changed', {\n                action: 'delete',\n                stationId: row.id\n              });\n            }\n          } catch (e) {\n            console.error('发送全局事件失败:', e);\n          }\n          \n          // 延迟执行一次全局垃圾回收\n          setTimeout(() => {\n            try {\n              if (window.gc) window.gc();\n            } catch (e) {\n              // 大多数浏览器不支持直接调用gc，忽略错误\n            }\n            \n            // 强制刷新所有图表\n            try {\n              if (this.$root && this.$root.$emit) {\n                this.$root.$emit('force-refresh-charts');\n              }\n            } catch (e) {\n              console.warn('强制刷新图表失败:', e);\n            }\n          }, 1000);\n        }, 300);\n      } catch (error) {\n        if (error !== 'cancel') {\n          ElMessage.error('删除失败');\n          console.error(error);\n        }\n      }\n    },\n    handleDialogOpen() {\n      // 对话框打开时重置表单状态\n      this.isSaving = false\n      console.log('对话框已打开')\n    },\n    closeDialog() {\n      // 先隐藏内容，延迟关闭对话框，避免ResizeObserver错误\n      const dialogContent = document.querySelector('.dialog-content-wrapper');\n      if (dialogContent) {\n        dialogContent.style.display = 'none';\n      }\n      \n      // 使用较长的延时确保DOM完全稳定\n      setTimeout(() => {\n        this.dialogVisible = false\n      }, 300)\n    },\n    async handleSave() {\n      // 防止重复提交\n      if (this.isSaving) return\n      \n      try {\n        this.isSaving = true\n        \n        // 先隐藏内容，减少DOM重排\n        const dialogContent = document.querySelector('.dialog-content-wrapper');\n        if (dialogContent) {\n          dialogContent.style.display = 'none';\n        }\n        \n        // 准备提交的数据\n        const formData = { ...this.stationForm };\n        \n        // 确保功率值是数字\n        if (formData.power_rating !== undefined) {\n          try {\n            formData.power_rating = parseFloat(formData.power_rating);\n            if (isNaN(formData.power_rating)) {\n              formData.power_rating = 0;\n            }\n          } catch (e) {\n            formData.power_rating = 0;\n          }\n        } else {\n          formData.power_rating = 0;\n        }\n        \n        console.log('准备提交的充电站数据:', formData);\n        \n        // 验证数据\n        if (!formData.name || formData.name.trim() === '') {\n          throw new Error('充电站名称不能为空');\n        }\n        \n        if (!formData.location || formData.location.trim() === '') {\n          throw new Error('充电站位置不能为空');\n        }\n        \n        if (this.isEdit) {\n          console.log(`更新充电站: ID=${this.currentId}`);\n          try {\n            const response = await stationApi.update(this.currentId, formData);\n            console.log('更新充电站响应:', response);\n            ElMessage.success('更新成功');\n          } catch (apiError) {\n            console.error('API调用失败:', apiError);\n            throw new Error(`更新失败: ${apiError.message || '服务器错误'}`);\n          }\n        } else {\n          console.log('添加新充电站');\n          try {\n            const response = await stationApi.add(formData);\n            console.log('添加充电站响应:', response);\n            ElMessage.success('添加成功');\n          } catch (apiError) {\n            console.error('API调用失败:', apiError);\n            throw new Error(`添加失败: ${apiError.message || '服务器错误'}`);\n          }\n        }\n        \n        // 延迟关闭对话框，避免ResizeObserver错误\n        setTimeout(() => {\n          this.dialogVisible = false;\n          // 重新加载数据，显示最新的充电站列表\n          this.fetchStations();\n        }, 300);\n      } catch (error) {\n        // 出错时也恢复显示内容\n        const dialogContent = document.querySelector('.dialog-content-wrapper');\n        if (dialogContent) {\n          dialogContent.style.display = 'block';\n        }\n        \n        console.error('保存充电站失败:', error);\n        ElMessage.error(error.message || (this.isEdit ? '更新失败' : '添加失败'));\n        this.isSaving = false;\n      }\n    },\n    getAssociatedRobot(stationId) {\n      // 查找关联到此充电桩的机器人\n      return this.robots.find(robot => robot.station_id === stationId);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.stations-container {\n  padding: 20px;\n}\n.toolbar {\n  margin-bottom: 20px;\n}\n.error-message {\n  margin-bottom: 20px;\n}\n.no-data {\n  padding: 20px 0;\n}\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n\n/* 添加以下样式以解决对话框调整大小问题 */\n:deep(.el-dialog) {\n  overflow: hidden;\n  max-width: 500px;\n  min-width: 400px;\n  margin: 0 auto !important;\n  display: flex;\n  flex-direction: column;\n  border-radius: 4px;\n  height: auto !important;\n  \n  /* 禁用对话框的大多数动画和过渡效果 */\n  transition: none !important;\n  animation: none !important;\n  transform: none !important;\n}\n\n:deep(.el-dialog__body) {\n  padding: 20px;\n  overflow: hidden; /* 防止内容溢出导致resize事件 */\n  position: relative;\n  flex: 1;\n  height: auto !important;\n}\n\n:deep(.el-input-number) {\n  width: 100%;\n}\n\n/* 在移动设备上的样式调整 */\n@media screen and (max-width: 768px) {\n  :deep(.el-dialog) {\n    width: 90% !important;\n    min-width: 300px;\n  }\n}\n\n:deep(.el-dialog__headerbtn) {\n  transition: none !important;\n}\n\n:deep(.el-dialog__wrapper) {\n  overflow: hidden !important;\n  display: flex !important;\n  align-items: center;\n  justify-content: center;\n}\n\n/* 包装对话框内容，便于隐藏处理 */\n.dialog-content-wrapper {\n  width: 100%;\n  overflow: hidden;\n}\n\n/* 全局禁用部分可能导致resize循环的动画 */\n:deep(.el-dialog),\n:deep(.el-form-item),\n:deep(.el-input),\n:deep(.el-input-number),\n:deep(.el-form) {\n  animation: none !important;\n}\n\n.no-robot {\n  color: #909399;\n  font-style: italic;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}