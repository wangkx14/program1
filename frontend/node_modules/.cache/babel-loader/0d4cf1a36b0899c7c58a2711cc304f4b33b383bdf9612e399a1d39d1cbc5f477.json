{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"user-center\"\n};\nvar _hoisted_2 = {\n  \"class\": \"user-profile\"\n};\nvar _hoisted_3 = {\n  \"class\": \"user-avatar\"\n};\nvar _hoisted_4 = {\n  \"class\": \"user-details\"\n};\nvar _hoisted_5 = {\n  \"class\": \"action-buttons\"\n};\nvar _hoisted_6 = {\n  \"class\": \"change-password\"\n};\nvar _hoisted_7 = {\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_avatar = _resolveComponent(\"el-avatar\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n  var _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n  var _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_tabs = _resolveComponent(\"el-tabs\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[16] || (_cache[16] = _createElementVNode(\"h1\", {\n    \"class\": \"page-title\"\n  }, \"个人中心\", -1 /* HOISTED */)), _createVNode(_component_el_card, {\n    \"class\": \"user-info-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_tabs, {\n        modelValue: $setup.activeTab,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n          return $setup.activeTab = $event;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_tab_pane, {\n            label: \"基本信息\",\n            name: \"info\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_avatar, {\n                size: 100,\n                src: $setup.userInfo.avatar || $setup.defaultAvatar\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($setup.userInfo.name ? $setup.userInfo.name.charAt(0).toUpperCase() : 'U'), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"src\"]), _createVNode(_component_el_button, {\n                \"class\": \"upload-btn\",\n                size: \"small\",\n                onClick: $setup.handleAvatarClick\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[10] || (_cache[10] = [_createTextVNode(\" 更换头像 \")]);\n                }),\n                _: 1 /* STABLE */,\n                __: [10]\n              }, 8 /* PROPS */, [\"onClick\"]), _createElementVNode(\"input\", {\n                ref: \"avatarInput\",\n                type: \"file\",\n                accept: \"image/*\",\n                style: {\n                  \"display\": \"none\"\n                },\n                onChange: _cache[0] || (_cache[0] = function () {\n                  return $setup.uploadAvatar && $setup.uploadAvatar.apply($setup, arguments);\n                })\n              }, null, 544 /* NEED_HYDRATION, NEED_PATCH */)]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_descriptions, {\n                column: 2,\n                border: \"\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_descriptions_item, {\n                    label: \"用户名\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createTextVNode(_toDisplayString($setup.userInfo.username), 1 /* TEXT */)];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_descriptions_item, {\n                    label: \"姓名\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createTextVNode(_toDisplayString($setup.userInfo.name), 1 /* TEXT */)];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_descriptions_item, {\n                    label: \"邮箱\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createTextVNode(_toDisplayString($setup.userInfo.email), 1 /* TEXT */)];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_descriptions_item, {\n                    label: \"手机\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createTextVNode(_toDisplayString($setup.userInfo.phone || '未设置'), 1 /* TEXT */)];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_descriptions_item, {\n                    label: \"角色\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createTextVNode(_toDisplayString($setup.getRoleName($setup.userInfo.role)), 1 /* TEXT */)];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_descriptions_item, {\n                    label: \"最后登录\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createTextVNode(_toDisplayString($setup.formatDateTime($setup.userInfo.lastLogin)), 1 /* TEXT */)];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.showEditInfoDialog\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[11] || (_cache[11] = [_createTextVNode(\" 编辑个人信息 \")]);\n                }),\n                _: 1 /* STABLE */,\n                __: [11]\n              }, 8 /* PROPS */, [\"onClick\"])])])])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"修改密码\",\n            name: \"password\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_form, {\n                ref: \"passwordForm\",\n                model: $setup.passwordForm,\n                rules: $setup.passwordRules,\n                \"label-width\": \"100px\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"当前密码\",\n                    prop: \"oldPassword\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input, {\n                        modelValue: $setup.passwordForm.oldPassword,\n                        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                          return $setup.passwordForm.oldPassword = $event;\n                        }),\n                        type: \"password\",\n                        \"show-password\": \"\",\n                        placeholder: \"请输入当前密码\"\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_form_item, {\n                    label: \"新密码\",\n                    prop: \"newPassword\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input, {\n                        modelValue: $setup.passwordForm.newPassword,\n                        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                          return $setup.passwordForm.newPassword = $event;\n                        }),\n                        type: \"password\",\n                        \"show-password\": \"\",\n                        placeholder: \"请输入新密码\"\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_form_item, {\n                    label: \"确认密码\",\n                    prop: \"confirmPassword\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input, {\n                        modelValue: $setup.passwordForm.confirmPassword,\n                        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                          return $setup.passwordForm.confirmPassword = $event;\n                        }),\n                        type: \"password\",\n                        \"show-password\": \"\",\n                        placeholder: \"请再次输入新密码\"\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_form_item, null, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_button, {\n                        type: \"primary\",\n                        loading: $setup.passwordLoading,\n                        onClick: $setup.changePassword\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return _cache[12] || (_cache[12] = [_createTextVNode(\" 修改密码 \")]);\n                        }),\n                        _: 1 /* STABLE */,\n                        __: [12]\n                      }, 8 /* PROPS */, [\"loading\", \"onClick\"]), _createVNode(_component_el_button, {\n                        onClick: $setup.resetPasswordForm\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return _cache[13] || (_cache[13] = [_createTextVNode(\"重置\")]);\n                        }),\n                        _: 1 /* STABLE */,\n                        __: [13]\n                      }, 8 /* PROPS */, [\"onClick\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"model\", \"rules\"])])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 编辑个人信息对话框 \"), _createVNode(_component_el_dialog, {\n    modelValue: $setup.editInfoDialogVisible,\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = function ($event) {\n      return $setup.editInfoDialogVisible = $event;\n    }),\n    title: \"编辑个人信息\",\n    width: \"500px\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_7, [_createVNode(_component_el_button, {\n        onClick: _cache[8] || (_cache[8] = function ($event) {\n          return $setup.editInfoDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[14] || (_cache[14] = [_createTextVNode(\"取消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [14]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        loading: $setup.infoLoading,\n        onClick: $setup.updateUserInfo\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[15] || (_cache[15] = [_createTextVNode(\" 保存 \")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [15]\n      }, 8 /* PROPS */, [\"loading\", \"onClick\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"userForm\",\n        model: $setup.userForm,\n        rules: $setup.userRules,\n        \"label-width\": \"80px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"姓名\",\n            prop: \"name\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.name,\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n                  return $setup.userForm.name = $event;\n                }),\n                placeholder: \"请输入姓名\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"邮箱\",\n            prop: \"email\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.email,\n                \"onUpdate:modelValue\": _cache[6] || (_cache[6] = function ($event) {\n                  return $setup.userForm.email = $event;\n                }),\n                placeholder: \"请输入邮箱\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"手机\",\n            prop: \"phone\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.phone,\n                \"onUpdate:modelValue\": _cache[7] || (_cache[7] = function ($event) {\n                  return $setup.userForm.phone = $event;\n                }),\n                placeholder: \"请输入手机号码\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_card","_withCtx","_component_el_tabs","modelValue","$setup","activeTab","_cache","$event","_component_el_tab_pane","label","name","_hoisted_2","_hoisted_3","_component_el_avatar","size","src","userInfo","avatar","defaultAvatar","_createTextVNode","_toDisplayString","charAt","toUpperCase","_","_component_el_button","onClick","handleAvatarClick","__","ref","type","accept","style","onChange","uploadAvatar","apply","arguments","_hoisted_4","_component_el_descriptions","column","border","_component_el_descriptions_item","username","email","phone","getRoleName","role","formatDateTime","lastLogin","_hoisted_5","showEditInfoDialog","_hoisted_6","_component_el_form","model","passwordForm","rules","passwordRules","_component_el_form_item","prop","_component_el_input","oldPassword","placeholder","newPassword","confirmPassword","loading","passwordLoading","changePassword","resetPasswordForm","_createCommentVNode","_component_el_dialog","editInfoDialogVisible","title","width","footer","_hoisted_7","infoLoading","updateUserInfo","userForm","userRules"],"sources":["D:\\software_data\\Project\\Y0527\\CODE_BAK\\frontend\\src\\views\\User.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-center\">\r\n    <h1 class=\"page-title\">个人中心</h1>\r\n    \r\n    <el-card class=\"user-info-card\">\r\n      <el-tabs v-model=\"activeTab\">\r\n        <el-tab-pane label=\"基本信息\" name=\"info\">\r\n          <div class=\"user-profile\">\r\n            <div class=\"user-avatar\">\r\n              <el-avatar :size=\"100\" :src=\"userInfo.avatar || defaultAvatar\">\r\n                {{ userInfo.name ? userInfo.name.charAt(0).toUpperCase() : 'U' }}\r\n              </el-avatar>\r\n              <el-button class=\"upload-btn\" size=\"small\" @click=\"handleAvatarClick\">\r\n                更换头像\r\n              </el-button>\r\n              <input\r\n                ref=\"avatarInput\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                style=\"display: none\"\r\n                @change=\"uploadAvatar\"\r\n              />\r\n            </div>\r\n            \r\n            <div class=\"user-details\">\r\n              <el-descriptions :column=\"2\" border>\r\n                <el-descriptions-item label=\"用户名\">{{ userInfo.username }}</el-descriptions-item>\r\n                <el-descriptions-item label=\"姓名\">{{ userInfo.name }}</el-descriptions-item>\r\n                <el-descriptions-item label=\"邮箱\">{{ userInfo.email }}</el-descriptions-item>\r\n                <el-descriptions-item label=\"手机\">{{ userInfo.phone || '未设置' }}</el-descriptions-item>\r\n                <el-descriptions-item label=\"角色\">{{ getRoleName(userInfo.role) }}</el-descriptions-item>\r\n                <el-descriptions-item label=\"最后登录\">{{ formatDateTime(userInfo.lastLogin) }}</el-descriptions-item>\r\n              </el-descriptions>\r\n              \r\n              <div class=\"action-buttons\">\r\n                <el-button type=\"primary\" @click=\"showEditInfoDialog\">\r\n                  编辑个人信息\r\n                </el-button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-tab-pane>\r\n        \r\n        <el-tab-pane label=\"修改密码\" name=\"password\">\r\n          <div class=\"change-password\">\r\n            <el-form\r\n              ref=\"passwordForm\"\r\n              :model=\"passwordForm\"\r\n              :rules=\"passwordRules\"\r\n              label-width=\"100px\"\r\n            >\r\n              <el-form-item label=\"当前密码\" prop=\"oldPassword\">\r\n                <el-input\r\n                  v-model=\"passwordForm.oldPassword\"\r\n                  type=\"password\"\r\n                  show-password\r\n                  placeholder=\"请输入当前密码\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n                <el-input\r\n                  v-model=\"passwordForm.newPassword\"\r\n                  type=\"password\"\r\n                  show-password\r\n                  placeholder=\"请输入新密码\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n                <el-input\r\n                  v-model=\"passwordForm.confirmPassword\"\r\n                  type=\"password\"\r\n                  show-password\r\n                  placeholder=\"请再次输入新密码\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item>\r\n                <el-button type=\"primary\" :loading=\"passwordLoading\" @click=\"changePassword\">\r\n                  修改密码\r\n                </el-button>\r\n                <el-button @click=\"resetPasswordForm\">重置</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n          </div>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n    \r\n    <!-- 编辑个人信息对话框 -->\r\n    <el-dialog v-model=\"editInfoDialogVisible\" title=\"编辑个人信息\" width=\"500px\">\r\n      <el-form\r\n        ref=\"userForm\"\r\n        :model=\"userForm\"\r\n        :rules=\"userRules\"\r\n        label-width=\"80px\"\r\n      >\r\n        <el-form-item label=\"姓名\" prop=\"name\">\r\n          <el-input v-model=\"userForm.name\" placeholder=\"请输入姓名\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"userForm.email\" placeholder=\"请输入邮箱\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"手机\" prop=\"phone\">\r\n          <el-input v-model=\"userForm.phone\" placeholder=\"请输入手机号码\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"editInfoDialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" :loading=\"infoLoading\" @click=\"updateUserInfo\">\r\n            保存\r\n          </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { ElMessage } from 'element-plus';\r\nimport dayjs from 'dayjs';\r\nimport { changePassword as apiChangePassword } from '@/api/auth';\r\n\r\n// 默认头像\r\nconst defaultAvatar = 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png';\r\n\r\nexport default {\r\n  name: 'User',\r\n  setup() {\r\n    const store = useStore();\r\n    const activeTab = ref('info');\r\n    const editInfoDialogVisible = ref(false);\r\n    const passwordLoading = ref(false);\r\n    const infoLoading = ref(false);\r\n    const avatarInput = ref(null);\r\n    \r\n    // 用户信息\r\n    const userInfo = computed(() => store.getters['user/userInfo']);\r\n    \r\n    // 用户表单\r\n    const userForm = ref({\r\n      name: '',\r\n      email: '',\r\n      phone: ''\r\n    });\r\n    \r\n    // 密码表单\r\n    const passwordForm = ref({\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: ''\r\n    });\r\n    \r\n    // 表单引用\r\n    const userFormRef = ref(null);\r\n    const passwordFormRef = ref(null);\r\n    \r\n    // 表单验证规则\r\n    const userRules = {\r\n      name: [\r\n        { required: true, message: '请输入姓名', trigger: 'blur' },\r\n        { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\r\n      ],\r\n      email: [\r\n        { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n        { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\r\n      ],\r\n      phone: [\r\n        { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\r\n      ]\r\n    };\r\n    \r\n    const passwordRules = {\r\n      oldPassword: [\r\n        { required: true, message: '请输入当前密码', trigger: 'blur' },\r\n        { min: 6, message: '密码长度不能少于6个字符', trigger: 'blur' }\r\n      ],\r\n      newPassword: [\r\n        { required: true, message: '请输入新密码', trigger: 'blur' },\r\n        { min: 6, message: '密码长度不能少于6个字符', trigger: 'blur' }\r\n      ],\r\n      confirmPassword: [\r\n        { required: true, message: '请再次输入新密码', trigger: 'blur' },\r\n        {\r\n          validator: (rule, value, callback) => {\r\n            if (value !== passwordForm.value.newPassword) {\r\n              callback(new Error('两次输入的密码不一致'));\r\n            } else {\r\n              callback();\r\n            }\r\n          },\r\n          trigger: 'blur'\r\n        }\r\n      ]\r\n    };\r\n    \r\n    // 显示编辑信息对话框\r\n    const showEditInfoDialog = () => {\r\n      userForm.value = {\r\n        name: userInfo.value.name,\r\n        email: userInfo.value.email,\r\n        phone: userInfo.value.phone || ''\r\n      };\r\n      editInfoDialogVisible.value = true;\r\n    };\r\n    \r\n    // 更新用户信息\r\n    const updateUserInfo = () => {\r\n      userFormRef.value.validate(async (valid) => {\r\n        if (!valid) return;\r\n        \r\n        infoLoading.value = true;\r\n        \r\n        try {\r\n          // 模拟API调用\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n          \r\n          // 更新用户信息\r\n          const updatedInfo = {\r\n            ...userInfo.value,\r\n            ...userForm.value\r\n          };\r\n          \r\n          // 更新Vuex中的用户信息\r\n          store.commit('user/SET_USER_INFO', updatedInfo);\r\n          \r\n          ElMessage.success('个人信息更新成功');\r\n          editInfoDialogVisible.value = false;\r\n        } catch (error) {\r\n          console.error('更新个人信息失败:', error);\r\n          ElMessage.error('更新个人信息失败，请重试');\r\n        } finally {\r\n          infoLoading.value = false;\r\n        }\r\n      });\r\n    };\r\n    \r\n    // 修改密码\r\n    const changePassword = () => {\r\n      passwordFormRef.value.validate(async (valid) => {\r\n        if (!valid) return;\r\n        \r\n        passwordLoading.value = true;\r\n        \r\n        try {\r\n          // 调用修改密码API\r\n          await apiChangePassword({\r\n            oldPassword: passwordForm.value.oldPassword,\r\n            newPassword: passwordForm.value.newPassword\r\n          });\r\n          \r\n          ElMessage.success('密码修改成功，请重新登录');\r\n          resetPasswordForm();\r\n          \r\n          // 退出登录\r\n          setTimeout(() => {\r\n            store.dispatch('user/logout');\r\n          }, 1500);\r\n        } catch (error) {\r\n          console.error('修改密码失败:', error);\r\n          ElMessage.error(error.message || '修改密码失败，请重试');\r\n        } finally {\r\n          passwordLoading.value = false;\r\n        }\r\n      });\r\n    };\r\n    \r\n    // 重置密码表单\r\n    const resetPasswordForm = () => {\r\n      passwordForm.value = {\r\n        oldPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      };\r\n      passwordFormRef.value.resetFields();\r\n    };\r\n    \r\n    // 处理头像点击\r\n    const handleAvatarClick = () => {\r\n      avatarInput.value.click();\r\n    };\r\n    \r\n    // 上传头像\r\n    const uploadAvatar = (e) => {\r\n      const file = e.target.files[0];\r\n      if (!file) return;\r\n      \r\n      // 检查文件类型\r\n      const isImage = /^image\\//.test(file.type);\r\n      if (!isImage) {\r\n        ElMessage.error('请上传图片文件');\r\n        return;\r\n      }\r\n      \r\n      // 检查文件大小\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n      if (!isLt2M) {\r\n        ElMessage.error('图片大小不能超过2MB');\r\n        return;\r\n      }\r\n      \r\n      // 模拟上传\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        // 更新用户头像\r\n        const updatedInfo = {\r\n          ...userInfo.value,\r\n          avatar: reader.result\r\n        };\r\n        \r\n        // 更新Vuex中的用户信息\r\n        store.commit('user/SET_USER_INFO', updatedInfo);\r\n        ElMessage.success('头像更新成功');\r\n      };\r\n    };\r\n    \r\n    // 获取角色名称\r\n    const getRoleName = (role) => {\r\n      const roles = {\r\n        admin: '管理员',\r\n        operator: '操作员',\r\n        viewer: '查看者'\r\n      };\r\n      return roles[role] || '未知';\r\n    };\r\n    \r\n    // 格式化日期时间\r\n    const formatDateTime = (dateTime) => {\r\n      if (!dateTime) return '未登录';\r\n      return dayjs(dateTime).format('YYYY-MM-DD HH:mm:ss');\r\n    };\r\n    \r\n    onMounted(() => {\r\n      // 如果用户信息不存在，获取用户信息\r\n      if (!userInfo.value || !userInfo.value.id) {\r\n        store.dispatch('user/getUserInfo');\r\n      }\r\n    });\r\n    \r\n    return {\r\n      activeTab,\r\n      userInfo,\r\n      defaultAvatar,\r\n      editInfoDialogVisible,\r\n      userForm,\r\n      userFormRef,\r\n      userRules,\r\n      passwordForm,\r\n      passwordFormRef,\r\n      passwordRules,\r\n      passwordLoading,\r\n      infoLoading,\r\n      avatarInput,\r\n      showEditInfoDialog,\r\n      updateUserInfo,\r\n      changePassword,\r\n      resetPasswordForm,\r\n      handleAvatarClick,\r\n      uploadAvatar,\r\n      getRoleName,\r\n      formatDateTime\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-center {\r\n  padding: 20px;\r\n}\r\n\r\n.page-title {\r\n  margin-bottom: 20px;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n.user-info-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.user-profile {\r\n  display: flex;\r\n  gap: 30px;\r\n  margin: 20px 0;\r\n}\r\n\r\n.user-avatar {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.upload-btn {\r\n  width: 100px;\r\n}\r\n\r\n.user-details {\r\n  flex: 1;\r\n}\r\n\r\n.action-buttons {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.change-password {\r\n  max-width: 500px;\r\n  margin: 20px auto;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}