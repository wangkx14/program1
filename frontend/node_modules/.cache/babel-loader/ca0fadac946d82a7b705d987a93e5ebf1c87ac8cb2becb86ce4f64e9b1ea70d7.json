{"ast":null,"code":"import _regeneratorRuntime from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport * as echarts from 'echarts';\nimport energyEfficiencyApi from '@/api/energyEfficiency';\nimport { formatDateTime, calculateDuration } from '@/utils/dateTime';\nimport { ArrowUp, ArrowDown } from '@element-plus/icons-vue';\nexport default {\n  name: 'EnergyEfficiencyAnalysis',\n  components: {\n    ArrowUp: ArrowUp,\n    ArrowDown: ArrowDown\n  },\n  data: function data() {\n    return {\n      // 固定的默认筛选条件（不再显示在UI上）\n      dateRange: [new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000), new Date()],\n      selectedStations: [],\n      selectedRobots: [],\n      // 数据列表\n      stations: [],\n      robots: [],\n      // 图表相关\n      currentChart: 'efficiency',\n      currentChartTitle: '充电效率趋势分析',\n      charts: {\n        efficiency: null,\n        consumption: null,\n        utilization: null,\n        robot: null,\n        peak: null\n      },\n      // KPI数据\n      kpiData: [{\n        title: '平均充电效率',\n        value: 0,\n        unit: '%',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '总能耗',\n        value: 0,\n        unit: 'kWh',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '充电器利用率',\n        value: 0,\n        unit: '%',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '平均等待时间',\n        value: 0,\n        unit: 'min',\n        change: 0,\n        trend: 'down'\n      }, {\n        title: '充电成功率',\n        value: 0,\n        unit: '%',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '总充电次数',\n        value: 0,\n        unit: '次',\n        change: 0,\n        trend: 'up'\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    initData: function initData() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var stationsResponse, robotsResponse;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return energyEfficiencyApi.getStations();\n            case 3:\n              stationsResponse = _context.sent;\n              _this.stations = stationsResponse.data;\n\n              // 获取机器人列表\n              _context.next = 7;\n              return energyEfficiencyApi.getRobots();\n            case 7:\n              robotsResponse = _context.sent;\n              _this.robots = robotsResponse.data;\n\n              // 获取初始数据\n              _this.fetchKpiData();\n              _this.fetchChartData();\n              _context.next = 17;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('初始化数据失败:', _context.t0);\n              _this.$message.error('加载数据失败，请重试');\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 13]]);\n      }))();\n    },\n    // 刷新所有数据\n    refreshData: function refreshData() {\n      this.fetchKpiData();\n      this.fetchChartData();\n    },\n    // 获取KPI数据\n    fetchKpiData: function fetchKpiData() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var params, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              params = _this2.getFilterParams();\n              _context2.next = 4;\n              return energyEfficiencyApi.getKpiData(params);\n            case 4:\n              response = _context2.sent;\n              _this2.kpiData = [{\n                title: '平均充电效率',\n                value: response.data.avgEfficiency.toFixed(2),\n                unit: '%',\n                change: response.data.efficiencyChange.toFixed(2),\n                trend: response.data.efficiencyChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '总能耗',\n                value: response.data.totalEnergy.toFixed(2),\n                unit: 'kWh',\n                change: response.data.energyChange.toFixed(2),\n                trend: response.data.energyChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '充电器利用率',\n                value: response.data.utilization.toFixed(2),\n                unit: '%',\n                change: response.data.utilizationChange.toFixed(2),\n                trend: response.data.utilizationChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '平均等待时间',\n                value: response.data.avgWaitTime.toFixed(2),\n                unit: 'min',\n                change: response.data.waitTimeChange.toFixed(2),\n                trend: response.data.waitTimeChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '充电成功率',\n                value: response.data.successRate.toFixed(2),\n                unit: '%',\n                change: response.data.successRateChange.toFixed(2),\n                trend: response.data.successRateChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '总充电次数',\n                value: response.data.totalOrders || 0,\n                unit: '次',\n                change: response.data.ordersChange || 0,\n                trend: (response.data.ordersChange || 0) >= 0 ? 'up' : 'down'\n              }];\n              _context2.next = 12;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('获取KPI数据失败:', _context2.t0);\n              _this2.$message.error('获取KPI数据失败');\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 8]]);\n      }))();\n    },\n    // 获取图表数据并渲染\n    fetchChartData: function fetchChartData() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var params, chartKey;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              params = _this3.getFilterParams(); // 根据当前选择的图表类型获取数据\n              _context3.t0 = _this3.currentChart;\n              _context3.next = _context3.t0 === 'efficiency' ? 5 : _context3.t0 === 'consumption' ? 8 : _context3.t0 === 'utilization' ? 11 : _context3.t0 === 'robot' ? 14 : _context3.t0 === 'peak' ? 17 : 20;\n              break;\n            case 5:\n              _context3.next = 7;\n              return _this3.renderEfficiencyChart(params);\n            case 7:\n              return _context3.abrupt(\"break\", 20);\n            case 8:\n              _context3.next = 10;\n              return _this3.renderConsumptionChart(params);\n            case 10:\n              return _context3.abrupt(\"break\", 20);\n            case 11:\n              _context3.next = 13;\n              return _this3.renderUtilizationChart(params);\n            case 13:\n              return _context3.abrupt(\"break\", 20);\n            case 14:\n              _context3.next = 16;\n              return _this3.renderRobotChart(params);\n            case 16:\n              return _context3.abrupt(\"break\", 20);\n            case 17:\n              _context3.next = 19;\n              return _this3.renderPeakChart(params);\n            case 19:\n              return _context3.abrupt(\"break\", 20);\n            case 20:\n              _context3.next = 28;\n              break;\n            case 22:\n              _context3.prev = 22;\n              _context3.t1 = _context3[\"catch\"](0);\n              console.error('获取图表数据失败:', _context3.t1);\n              _this3.$message.error('获取图表数据失败');\n\n              // 清理错误的图表实例\n              chartKey = _this3.currentChart;\n              if (_this3.charts[chartKey]) {\n                try {\n                  _this3.charts[chartKey].dispose();\n                  _this3.charts[chartKey] = null;\n                } catch (cleanupError) {\n                  console.error(\"\\u6E05\\u7406\\u56FE\\u8868\\u5931\\u8D25: \".concat(cleanupError));\n                }\n              }\n            case 28:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 22]]);\n      }))();\n    },\n    // 充电效率趋势图\n    renderEfficiencyChart: function renderEfficiencyChart(params) {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return energyEfficiencyApi.getEfficiencyTrend(params);\n            case 2:\n              response = _context4.sent;\n              if (!_this4.charts.efficiency) {\n                _this4.charts.efficiency = echarts.init(_this4.$refs.efficiencyChart);\n              }\n              option = {\n                title: {\n                  text: '充电效率趋势分析',\n                  left: 'center',\n                  top: '10px'\n                },\n                tooltip: {\n                  trigger: 'axis'\n                },\n                legend: {\n                  data: response.data.stations.map(function (station) {\n                    return station.name;\n                  }),\n                  selected: response.data.stations.reduce(function (acc, station) {\n                    acc[station.name] = true;\n                    return acc;\n                  }, {}),\n                  top: '40px',\n                  type: 'scroll',\n                  orient: 'horizontal',\n                  selectedMode: false\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  top: '100px',\n                  containLabel: true\n                },\n                xAxis: {\n                  type: 'category',\n                  boundaryGap: false,\n                  data: response.data.timeline\n                },\n                yAxis: {\n                  type: 'value',\n                  name: '充电效率 (%)',\n                  min: 50,\n                  max: 100\n                },\n                series: response.data.stations.map(function (station) {\n                  return {\n                    name: station.name,\n                    type: 'line',\n                    data: station.efficiencyData,\n                    smooth: true\n                  };\n                })\n              };\n              _this4.charts.efficiency.setOption(option);\n\n              // 取消图表的点击事件\n              _this4.charts.efficiency.off('click');\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    },\n    // 能耗分布热力图\n    renderConsumptionChart: function renderConsumptionChart(params) {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response, days, hours, i, formattedData, minValue, maxValue, dayIndex, hour, visualMaxValue, pieces, stepCount, step, _i, startValue, endValue, option;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              console.log('获取能耗分布数据，参数:', params);\n              _context5.next = 4;\n              return energyEfficiencyApi.getEnergyConsumptionDistribution(params);\n            case 4:\n              response = _context5.sent;\n              console.log('能耗分布数据响应:', response.data);\n\n              // 确保DOM元素存在\n              if (_this5.$refs.consumptionChart) {\n                _context5.next = 9;\n                break;\n              }\n              console.error('热力图DOM元素不存在');\n              return _context5.abrupt(\"return\");\n            case 9:\n              if (!(!response.data || !response.data.days || !response.data.data || response.data.days.length === 0)) {\n                _context5.next = 12;\n                break;\n              }\n              console.error('能耗分布数据异常:', response.data);\n              return _context5.abrupt(\"return\");\n            case 12:\n              console.log('能耗分布数据:', response.data.data);\n\n              // 销毁旧的图表实例\n              if (_this5.charts.consumption) {\n                _this5.charts.consumption.dispose();\n                _this5.charts.consumption = null;\n              }\n\n              // 设置明确的宽高\n              _this5.$refs.consumptionChart.style.width = '100%';\n              _this5.$refs.consumptionChart.style.height = '500px';\n\n              // 重新创建图表实例\n              _this5.charts.consumption = echarts.init(_this5.$refs.consumptionChart);\n\n              // 直接使用后端返回的日期作为Y轴\n              days = response.data.days; // 提取所有小时作为X轴（0-23）\n              hours = [];\n              for (i = 0; i < 24; i++) {\n                hours.push(i.toString());\n              }\n\n              // 将API返回的数据转换为ECharts需要的格式 [x索引, y索引, 值]\n              formattedData = []; // 找出数据中的最小值和最大值，用于设置图例刻度\n              minValue = Infinity;\n              maxValue = 0;\n              if (Array.isArray(response.data.data)) {\n                response.data.data.forEach(function (item) {\n                  if (Array.isArray(item) && item.length === 3) {\n                    var day = item[0];\n                    var hour = parseInt(item[1]);\n                    var value = parseFloat(item[2] || 0);\n\n                    // 更新最小值和最大值\n                    if (!isNaN(value)) {\n                      minValue = Math.min(minValue, value);\n                      maxValue = Math.max(maxValue, value);\n                    }\n\n                    // 确保值是有效的数字\n                    if (!isNaN(value) && hour >= 0 && hour < 24) {\n                      // 找到日期在Y轴中的索引\n                      var dayIndex = days.indexOf(day);\n\n                      // 只有当日期在Y轴中存在时才添加数据点\n                      if (dayIndex !== -1) {\n                        formattedData.push([hour, dayIndex, value]);\n                      }\n                    }\n                  }\n                });\n              } else {\n                console.error('能耗数据不是数组格式');\n                // 创建默认数据以避免图表崩溃\n                for (dayIndex = 0; dayIndex < days.length; dayIndex++) {\n                  for (hour = 0; hour < 24; hour++) {\n                    formattedData.push([hour, dayIndex, 0]);\n                  }\n                }\n              }\n              console.log('格式化后的数据点数:', formattedData.length);\n              console.log('数据范围:', minValue, '至', maxValue);\n\n              // 如果没有有效数据，设置默认值避免图表错误\n              if (formattedData.length === 0 || minValue === Infinity) {\n                minValue = 0;\n                maxValue = 100;\n              }\n\n              // 使用后端返回的最大值或计算得到的最大值\n              visualMaxValue = response.data.maxValue || Math.ceil(maxValue) || 100; // 创建均匀分布的刻度值数组\n              pieces = [];\n              stepCount = 10; // 分成10个刻度\n              step = visualMaxValue / stepCount;\n              for (_i = 0; _i < stepCount; _i++) {\n                startValue = _i * step;\n                endValue = (_i + 1) * step;\n                pieces.push({\n                  min: startValue,\n                  max: endValue,\n                  label: \"\".concat(startValue.toFixed(0), \"-\").concat(endValue.toFixed(0))\n                });\n              }\n\n              // 使用简单的配置\n              option = {\n                title: {\n                  text: '能耗分布热力图',\n                  left: 'center'\n                },\n                tooltip: {\n                  position: 'top',\n                  formatter: function formatter(params) {\n                    var hour = params.data[0];\n                    var day = days[params.data[1]];\n                    var value = params.data[2];\n                    return \"\".concat(hour, \":00 - \").concat((parseInt(hour) + 1) % 24, \":00<br>\\u65E5\\u671F: \").concat(day, \"<br>\\u80FD\\u8017: \").concat(value.toFixed(2), \" kWh\");\n                  }\n                },\n                grid: {\n                  height: '70%',\n                  top: '60px',\n                  left: '80px',\n                  right: '30px',\n                  containLabel: true\n                },\n                xAxis: {\n                  type: 'category',\n                  data: hours,\n                  axisLabel: {\n                    formatter: '{value}:00',\n                    interval: function interval(index, value) {\n                      // 每2小时显示一个标签\n                      return index % 2 === 0;\n                    }\n                  }\n                },\n                yAxis: {\n                  type: 'category',\n                  data: days,\n                  axisLabel: {\n                    formatter: function formatter(value) {\n                      var parts = value.split('-');\n                      return parts[1] + '-' + parts[2]; // 只显示月-日\n                    }\n                  }\n                },\n                visualMap: {\n                  type: 'continuous',\n                  min: 0,\n                  max: visualMaxValue,\n                  precision: 0,\n                  calculable: true,\n                  orient: 'horizontal',\n                  left: 'center',\n                  bottom: '5%',\n                  inRange: {\n                    color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\n                  },\n                  // 添加具体的数字刻度\n                  splitNumber: 10,\n                  // 分割段数\n                  formatter: function formatter(value) {\n                    return value.toFixed(0) + ' kWh';\n                  },\n                  textStyle: {\n                    color: '#333'\n                  }\n                },\n                series: [{\n                  name: '能耗 (kWh)',\n                  type: 'heatmap',\n                  data: formattedData,\n                  emphasis: {\n                    itemStyle: {\n                      shadowBlur: 10,\n                      shadowColor: 'rgba(0, 0, 0, 0.5)'\n                    }\n                  }\n                }]\n              }; // 应用配置并渲染\n              _this5.charts.consumption.setOption(option);\n              console.log('热力图渲染成功');\n\n              // 确保图表正确渲染\n              window.addEventListener('resize', function () {\n                if (_this5.charts.consumption) {\n                  _this5.charts.consumption.resize();\n                }\n              });\n              _context5.next = 42;\n              break;\n            case 38:\n              _context5.prev = 38;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('渲染能耗分布热力图失败:', _context5.t0);\n\n              // 尝试显示错误信息\n              if (_this5.$refs.consumptionChart && _this5.charts.consumption) {\n                _this5.charts.consumption.dispose();\n                _this5.charts.consumption = echarts.init(_this5.$refs.consumptionChart);\n                _this5.charts.consumption.setOption({\n                  title: {\n                    text: '能耗分布热力图 (加载失败)',\n                    textStyle: {\n                      color: '#ff0000'\n                    },\n                    left: 'center'\n                  }\n                });\n              }\n            case 42:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[0, 38]]);\n      }))();\n    },\n    // 充电站利用率对比\n    renderUtilizationChart: function renderUtilizationChart(params) {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var response, processedData, option;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return energyEfficiencyApi.getStationUtilization(params);\n            case 3:\n              response = _context6.sent;\n              if (_this6.$refs.utilizationChart) {\n                _context6.next = 7;\n                break;\n              }\n              console.error('利用率图表DOM元素不存在');\n              return _context6.abrupt(\"return\");\n            case 7:\n              if (!(!response.data || !Array.isArray(response.data) || response.data.length === 0)) {\n                _context6.next = 13;\n                break;\n              }\n              console.error('充电站利用率数据异常:', response.data);\n              // 创建没有数据的图表以避免错误\n              if (_this6.charts.utilization) {\n                _this6.charts.utilization.dispose();\n              }\n              _this6.charts.utilization = echarts.init(_this6.$refs.utilizationChart);\n              _this6.charts.utilization.setOption({\n                title: {\n                  text: '充电站利用率对比 (暂无数据)',\n                  left: 'center'\n                }\n              });\n              return _context6.abrupt(\"return\");\n            case 13:\n              // 销毁旧图表实例\n              if (_this6.charts.utilization) {\n                _this6.charts.utilization.dispose();\n                _this6.charts.utilization = null;\n              }\n\n              // 重新创建图表实例\n              _this6.charts.utilization = echarts.init(_this6.$refs.utilizationChart);\n\n              // 数据处理：确保所有数据都是正数，且单位一致\n              processedData = response.data.map(function (item) {\n                return {\n                  stationName: item.stationName || '未知充电站',\n                  busyHours: Math.abs(parseFloat(item.busyHours || 0)),\n                  idleHours: Math.abs(parseFloat(item.idleHours || 0)),\n                  maintenanceHours: Math.abs(parseFloat(item.maintenanceHours || 0)),\n                  errorHours: Math.abs(parseFloat(item.errorHours || 0))\n                };\n              }); // 验证数据总和是否合理，如果总和异常大，则进行归一化处理\n              processedData.forEach(function (item) {\n                var total = item.busyHours + item.idleHours + item.maintenanceHours + item.errorHours;\n                // 如果总时间超过48小时（允许一定误差），则认为数据异常，需要归一化\n                if (total > 48) {\n                  var factor = 24 / total;\n                  item.busyHours *= factor;\n                  item.idleHours *= factor;\n                  item.maintenanceHours *= factor;\n                  item.errorHours *= factor;\n                }\n              });\n              console.log('处理后的充电站利用率数据:', processedData);\n              option = {\n                title: {\n                  text: '充电站利用率对比',\n                  left: 'center'\n                },\n                tooltip: {\n                  trigger: 'axis',\n                  axisPointer: {\n                    type: 'shadow'\n                  },\n                  formatter: function formatter(params) {\n                    var tooltip = params[0].name + '<br/>';\n                    var total = 0;\n                    params.forEach(function (param) {\n                      tooltip += param.seriesName + ': ' + param.value.toFixed(2) + ' 小时<br/>';\n                      total += param.value;\n                    });\n                    tooltip += '<br/>总计: ' + total.toFixed(2) + ' 小时';\n                    return tooltip;\n                  }\n                },\n                legend: {\n                  data: ['忙碌时间', '空闲时间', '维护时间', '故障时间'],\n                  selectedMode: false,\n                  top: '30px'\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  top: '80px',\n                  containLabel: true\n                },\n                xAxis: {\n                  type: 'value',\n                  name: '小时',\n                  min: 0,\n                  max: 24,\n                  axisLabel: {\n                    formatter: '{value} h'\n                  }\n                },\n                yAxis: {\n                  type: 'category',\n                  data: processedData.map(function (item) {\n                    return item.stationName;\n                  })\n                },\n                series: [{\n                  name: '忙碌时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true,\n                    formatter: '{c} h'\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: processedData.map(function (item) {\n                    return parseFloat(item.busyHours.toFixed(2));\n                  })\n                }, {\n                  name: '空闲时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true,\n                    formatter: '{c} h'\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: processedData.map(function (item) {\n                    return parseFloat(item.idleHours.toFixed(2));\n                  })\n                }, {\n                  name: '维护时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true,\n                    formatter: '{c} h'\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: processedData.map(function (item) {\n                    return parseFloat(item.maintenanceHours.toFixed(2));\n                  })\n                }, {\n                  name: '故障时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true,\n                    formatter: '{c} h'\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: processedData.map(function (item) {\n                    return parseFloat(item.errorHours.toFixed(2));\n                  })\n                }]\n              };\n              _this6.charts.utilization.setOption(option);\n\n              // 取消图表的点击事件\n              _this6.charts.utilization.off('click');\n\n              // 确保图表正确渲染\n              window.addEventListener('resize', function () {\n                if (_this6.charts.utilization) {\n                  _this6.charts.utilization.resize();\n                }\n              });\n              _context6.next = 28;\n              break;\n            case 24:\n              _context6.prev = 24;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.error('渲染充电站利用率图表失败:', _context6.t0);\n\n              // 错误情况下，显示错误信息\n              if (_this6.$refs.utilizationChart) {\n                if (_this6.charts.utilization) {\n                  _this6.charts.utilization.dispose();\n                }\n                _this6.charts.utilization = echarts.init(_this6.$refs.utilizationChart);\n                _this6.charts.utilization.setOption({\n                  title: {\n                    text: '充电站利用率对比 (加载失败)',\n                    textStyle: {\n                      color: '#ff0000'\n                    },\n                    left: 'center'\n                  }\n                });\n              }\n            case 28:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[0, 24]]);\n      }))();\n    },\n    // 机器人充电行为分析\n    renderRobotChart: function renderRobotChart(params) {\n      var _this7 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return energyEfficiencyApi.getRobotChargingBehavior(params);\n            case 2:\n              response = _context7.sent;\n              if (!_this7.charts.robot) {\n                _this7.charts.robot = echarts.init(_this7.$refs.robotChart);\n              }\n              option = {\n                title: {\n                  text: '机器人充电行为分析'\n                },\n                tooltip: {\n                  trigger: 'axis'\n                },\n                legend: {\n                  data: ['充电次数', '平均充电时长', '平均等待时间'],\n                  selectedMode: false\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  containLabel: true\n                },\n                xAxis: [{\n                  type: 'category',\n                  data: response.data.robots.map(function (robot) {\n                    return robot.name;\n                  }),\n                  axisPointer: {\n                    type: 'shadow'\n                  }\n                }],\n                yAxis: [{\n                  type: 'value',\n                  name: '次数',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value}'\n                  }\n                }, {\n                  type: 'value',\n                  name: '时间 (分钟)',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value} min'\n                  }\n                }],\n                series: [{\n                  name: '充电次数',\n                  type: 'bar',\n                  data: response.data.robots.map(function (robot) {\n                    return robot.chargingCount;\n                  })\n                }, {\n                  name: '平均充电时长',\n                  type: 'line',\n                  yAxisIndex: 1,\n                  data: response.data.robots.map(function (robot) {\n                    return robot.avgChargingDuration;\n                  })\n                }, {\n                  name: '平均等待时间',\n                  type: 'line',\n                  yAxisIndex: 1,\n                  data: response.data.robots.map(function (robot) {\n                    return robot.avgWaitingTime;\n                  })\n                }]\n              };\n              _this7.charts.robot.setOption(option);\n\n              // 取消图表的点击事件\n              _this7.charts.robot.off('click');\n            case 7:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }))();\n    },\n    // 充电高峰期分析\n    renderPeakChart: function renderPeakChart(params) {\n      var _this8 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return energyEfficiencyApi.getChargingPeakAnalysis(params);\n            case 2:\n              response = _context8.sent;\n              if (!_this8.charts.peak) {\n                _this8.charts.peak = echarts.init(_this8.$refs.peakChart);\n              }\n              option = {\n                title: {\n                  text: '充电高峰期分析'\n                },\n                tooltip: {\n                  trigger: 'axis',\n                  axisPointer: {\n                    type: 'shadow'\n                  }\n                },\n                legend: {\n                  data: ['充电请求数', '平均等待时间'],\n                  selectedMode: false\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  containLabel: true\n                },\n                xAxis: [{\n                  type: 'category',\n                  data: ['0-2', '2-4', '4-6', '6-8', '8-10', '10-12', '12-14', '14-16', '16-18', '18-20', '20-22', '22-24'],\n                  axisLabel: {\n                    formatter: '{value}时'\n                  }\n                }],\n                yAxis: [{\n                  type: 'value',\n                  name: '请求数',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value}'\n                  }\n                }, {\n                  type: 'value',\n                  name: '等待时间 (分钟)',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value} min'\n                  }\n                }],\n                series: [{\n                  name: '充电请求数',\n                  type: 'bar',\n                  data: response.data.requestCounts\n                }, {\n                  name: '平均等待时间',\n                  type: 'line',\n                  yAxisIndex: 1,\n                  data: response.data.avgWaitingTimes\n                }]\n              };\n              _this8.charts.peak.setOption(option);\n\n              // 取消图表的点击事件\n              _this8.charts.peak.off('click');\n            case 7:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }))();\n    },\n    // 获取筛选参数\n    getFilterParams: function getFilterParams() {\n      return {\n        startDate: this.dateRange[0] ? this.dateRange[0].toISOString() : null,\n        endDate: this.dateRange[1] ? this.dateRange[1].toISOString() : null,\n        stationIds: this.selectedStations.length > 0 ? this.selectedStations : null,\n        robotIds: this.selectedRobots.length > 0 ? this.selectedRobots : null\n      };\n    },\n    // 处理图表切换\n    handleChartChange: function handleChartChange(chartType) {\n      var titles = {\n        efficiency: '充电效率趋势分析',\n        consumption: '能耗分布热力图',\n        utilization: '充电站利用率对比',\n        robot: '机器人充电行为分析',\n        peak: '充电高峰期分析'\n      };\n      this.currentChartTitle = titles[chartType];\n\n      // 在切换图表前先清理旧图表实例，避免内存泄漏和DOM冲突\n      if (this.charts[this.currentChart]) {\n        try {\n          this.charts[this.currentChart].dispose();\n          this.charts[this.currentChart] = null;\n        } catch (error) {\n          console.error(\"\\u6E05\\u7406\\u56FE\\u8868\\u5931\\u8D25: \".concat(error));\n        }\n      }\n      this.fetchChartData();\n    }\n  }\n};","map":{"version":3,"names":["echarts","energyEfficiencyApi","formatDateTime","calculateDuration","ArrowUp","ArrowDown","name","components","data","dateRange","Date","getTime","selectedStations","selectedRobots","stations","robots","currentChart","currentChartTitle","charts","efficiency","consumption","utilization","robot","peak","kpiData","title","value","unit","change","trend","mounted","initData","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","stationsResponse","robotsResponse","wrap","_callee$","_context","prev","next","getStations","sent","getRobots","fetchKpiData","fetchChartData","t0","console","error","$message","stop","refreshData","_this2","_callee2","params","response","_callee2$","_context2","getFilterParams","getKpiData","avgEfficiency","toFixed","efficiencyChange","totalEnergy","energyChange","utilizationChange","avgWaitTime","waitTimeChange","successRate","successRateChange","totalOrders","ordersChange","_this3","_callee3","chartKey","_callee3$","_context3","renderEfficiencyChart","abrupt","renderConsumptionChart","renderUtilizationChart","renderRobotChart","renderPeakChart","t1","dispose","cleanupError","concat","_this4","_callee4","option","_callee4$","_context4","getEfficiencyTrend","init","$refs","efficiencyChart","text","left","top","tooltip","trigger","legend","map","station","selected","reduce","acc","type","orient","selectedMode","grid","right","bottom","containLabel","xAxis","boundaryGap","timeline","yAxis","min","max","series","efficiencyData","smooth","setOption","off","_this5","_callee5","days","hours","i","formattedData","minValue","maxValue","dayIndex","hour","visualMaxValue","pieces","stepCount","step","_i","startValue","endValue","_callee5$","_context5","log","getEnergyConsumptionDistribution","consumptionChart","length","style","width","height","push","toString","Infinity","Array","isArray","forEach","item","day","parseInt","parseFloat","isNaN","Math","indexOf","ceil","label","position","formatter","axisLabel","interval","index","parts","split","visualMap","precision","calculable","inRange","color","splitNumber","textStyle","emphasis","itemStyle","shadowBlur","shadowColor","window","addEventListener","resize","_this6","_callee6","processedData","_callee6$","_context6","getStationUtilization","utilizationChart","stationName","busyHours","abs","idleHours","maintenanceHours","errorHours","total","factor","axisPointer","param","seriesName","stack","show","focus","_this7","_callee7","_callee7$","_context7","getRobotChargingBehavior","robotChart","chargingCount","yAxisIndex","avgChargingDuration","avgWaitingTime","_this8","_callee8","_callee8$","_context8","getChargingPeakAnalysis","peakChart","requestCounts","avgWaitingTimes","startDate","toISOString","endDate","stationIds","robotIds","handleChartChange","chartType","titles"],"sources":["D:\\software_data\\Project\\Y0527\\CODE_BAK\\frontend\\src\\views\\EnergyEfficiency.vue"],"sourcesContent":["<template>\r\n  <div class=\"energy-efficiency-analysis\">\r\n    <!-- KPI指标卡片 -->\r\n    <el-row :gutter=\"20\" class=\"kpi-container\">\r\n      <el-col :span=\"4\" v-for=\"(kpi, index) in kpiData\" :key=\"index\">\r\n        <el-card class=\"kpi-card\">\r\n          <div class=\"kpi-title\">{{ kpi.title }}</div>\r\n          <div class=\"kpi-value\">{{ kpi.value }}{{ kpi.unit }}</div>\r\n          <div class=\"kpi-change\" :class=\"kpi.trend\">\r\n            <el-icon v-if=\"kpi.trend === 'up'\"><ArrowUp /></el-icon>\r\n            <el-icon v-else><ArrowDown /></el-icon>\r\n            {{ kpi.change }}%\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 分析图表区域 -->\r\n    <el-card class=\"chart-container\">\r\n      <div class=\"chart-header\">\r\n        <h3>{{ currentChartTitle }}</h3>\r\n        <el-radio-group v-model=\"currentChart\" @change=\"handleChartChange\">\r\n          <el-radio-button :value=\"'efficiency'\">充电效率趋势</el-radio-button>\r\n          <el-radio-button :value=\"'consumption'\">能耗分布</el-radio-button>\r\n          <el-radio-button :value=\"'utilization'\">充电站利用率</el-radio-button>\r\n          <el-radio-button :value=\"'robot'\">机器人充电分析</el-radio-button>\r\n          <el-radio-button :value=\"'peak'\">充电高峰期</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n      <div class=\"chart-content\">\r\n        <!-- 不同图表的容器 -->\r\n        <div v-show=\"currentChart === 'efficiency'\" class=\"chart-item\">\r\n          <div ref=\"efficiencyChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'consumption'\" class=\"chart-item\">\r\n          <div ref=\"consumptionChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'utilization'\" class=\"chart-item\">\r\n          <div ref=\"utilizationChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'robot'\" class=\"chart-item\">\r\n          <div ref=\"robotChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'peak'\" class=\"chart-item\">\r\n          <div ref=\"peakChart\" class=\"chart\"></div>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport energyEfficiencyApi from '@/api/energyEfficiency';\r\nimport { formatDateTime, calculateDuration } from '@/utils/dateTime';\r\nimport { ArrowUp, ArrowDown } from '@element-plus/icons-vue';\r\n\r\nexport default {\r\n  name: 'EnergyEfficiencyAnalysis',\r\n  components: {\r\n    ArrowUp,\r\n    ArrowDown\r\n  },\r\n  data() {\r\n    return {\r\n      // 固定的默认筛选条件（不再显示在UI上）\r\n      dateRange: [new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000), new Date()],\r\n      selectedStations: [],\r\n      selectedRobots: [],\r\n      \r\n      // 数据列表\r\n      stations: [],\r\n      robots: [],\r\n      \r\n      // 图表相关\r\n      currentChart: 'efficiency',\r\n      currentChartTitle: '充电效率趋势分析',\r\n      charts: {\r\n        efficiency: null,\r\n        consumption: null,\r\n        utilization: null,\r\n        robot: null,\r\n        peak: null\r\n      },\r\n      \r\n      // KPI数据\r\n      kpiData: [\r\n        { title: '平均充电效率', value: 0, unit: '%', change: 0, trend: 'up' },\r\n        { title: '总能耗', value: 0, unit: 'kWh', change: 0, trend: 'up' },\r\n        { title: '充电器利用率', value: 0, unit: '%', change: 0, trend: 'up' },\r\n        { title: '平均等待时间', value: 0, unit: 'min', change: 0, trend: 'down' },\r\n        { title: '充电成功率', value: 0, unit: '%', change: 0, trend: 'up' },\r\n        { title: '总充电次数', value: 0, unit: '次', change: 0, trend: 'up' }\r\n      ]\r\n    };\r\n  },\r\n  \r\n  mounted() {\r\n    this.initData();\r\n  },\r\n  \r\n  methods: {\r\n    async initData() {\r\n      try {\r\n        // 获取充电站列表\r\n        const stationsResponse = await energyEfficiencyApi.getStations();\r\n        this.stations = stationsResponse.data;\r\n        \r\n        // 获取机器人列表\r\n        const robotsResponse = await energyEfficiencyApi.getRobots();\r\n        this.robots = robotsResponse.data;\r\n        \r\n        // 获取初始数据\r\n        this.fetchKpiData();\r\n        this.fetchChartData();\r\n      } catch (error) {\r\n        console.error('初始化数据失败:', error);\r\n        this.$message.error('加载数据失败，请重试');\r\n      }\r\n    },\r\n    \r\n    // 刷新所有数据\r\n    refreshData() {\r\n      this.fetchKpiData();\r\n      this.fetchChartData();\r\n    },\r\n    \r\n    // 获取KPI数据\r\n    async fetchKpiData() {\r\n      try {\r\n        const params = this.getFilterParams();\r\n        const response = await energyEfficiencyApi.getKpiData(params);\r\n        \r\n        this.kpiData = [\r\n          { \r\n            title: '平均充电效率', \r\n            value: response.data.avgEfficiency.toFixed(2), \r\n            unit: '%', \r\n            change: response.data.efficiencyChange.toFixed(2), \r\n            trend: response.data.efficiencyChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '总能耗', \r\n            value: response.data.totalEnergy.toFixed(2), \r\n            unit: 'kWh', \r\n            change: response.data.energyChange.toFixed(2), \r\n            trend: response.data.energyChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '充电器利用率', \r\n            value: response.data.utilization.toFixed(2), \r\n            unit: '%', \r\n            change: response.data.utilizationChange.toFixed(2), \r\n            trend: response.data.utilizationChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '平均等待时间', \r\n            value: response.data.avgWaitTime.toFixed(2), \r\n            unit: 'min', \r\n            change: response.data.waitTimeChange.toFixed(2), \r\n            trend: response.data.waitTimeChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '充电成功率', \r\n            value: response.data.successRate.toFixed(2), \r\n            unit: '%', \r\n            change: response.data.successRateChange.toFixed(2), \r\n            trend: response.data.successRateChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '总充电次数', \r\n            value: response.data.totalOrders || 0, \r\n            unit: '次', \r\n            change: response.data.ordersChange || 0, \r\n            trend: (response.data.ordersChange || 0) >= 0 ? 'up' : 'down' \r\n          }\r\n        ];\r\n      } catch (error) {\r\n        console.error('获取KPI数据失败:', error);\r\n        this.$message.error('获取KPI数据失败');\r\n      }\r\n    },\r\n    \r\n    // 获取图表数据并渲染\r\n    async fetchChartData() {\r\n      try {\r\n        const params = this.getFilterParams();\r\n        \r\n        // 根据当前选择的图表类型获取数据\r\n        switch (this.currentChart) {\r\n          case 'efficiency':\r\n            await this.renderEfficiencyChart(params);\r\n            break;\r\n          case 'consumption':\r\n            await this.renderConsumptionChart(params);\r\n            break;\r\n          case 'utilization':\r\n            await this.renderUtilizationChart(params);\r\n            break;\r\n          case 'robot':\r\n            await this.renderRobotChart(params);\r\n            break;\r\n          case 'peak':\r\n            await this.renderPeakChart(params);\r\n            break;\r\n        }\r\n      } catch (error) {\r\n        console.error('获取图表数据失败:', error);\r\n        this.$message.error('获取图表数据失败');\r\n        \r\n        // 清理错误的图表实例\r\n        const chartKey = this.currentChart;\r\n        if (this.charts[chartKey]) {\r\n          try {\r\n            this.charts[chartKey].dispose();\r\n            this.charts[chartKey] = null;\r\n          } catch (cleanupError) {\r\n            console.error(`清理图表失败: ${cleanupError}`);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 充电效率趋势图\r\n    async renderEfficiencyChart(params) {\r\n      const response = await energyEfficiencyApi.getEfficiencyTrend(params);\r\n      \r\n      if (!this.charts.efficiency) {\r\n        this.charts.efficiency = echarts.init(this.$refs.efficiencyChart);\r\n      }\r\n      \r\n      const option = {\r\n        title: {\r\n          text: '充电效率趋势分析',\r\n          left: 'center',\r\n          top: '10px'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: response.data.stations.map(station => station.name),\r\n          selected: response.data.stations.reduce((acc, station) => {\r\n            acc[station.name] = true;\r\n            return acc;\r\n          }, {}),\r\n          top: '40px',\r\n          type: 'scroll',\r\n          orient: 'horizontal',\r\n          selectedMode: false\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          top: '100px',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: response.data.timeline\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          name: '充电效率 (%)',\r\n          min: 50,\r\n          max: 100\r\n        },\r\n        series: response.data.stations.map(station => ({\r\n          name: station.name,\r\n          type: 'line',\r\n          data: station.efficiencyData,\r\n          smooth: true\r\n        }))\r\n      };\r\n      \r\n      this.charts.efficiency.setOption(option);\r\n      \r\n      // 取消图表的点击事件\r\n      this.charts.efficiency.off('click');\r\n    },\r\n    \r\n    // 能耗分布热力图\r\n    async renderConsumptionChart(params) {\r\n      try {\r\n        console.log('获取能耗分布数据，参数:', params);\r\n        const response = await energyEfficiencyApi.getEnergyConsumptionDistribution(params);\r\n        console.log('能耗分布数据响应:', response.data);\r\n        \r\n        // 确保DOM元素存在\r\n        if (!this.$refs.consumptionChart) {\r\n          console.error('热力图DOM元素不存在');\r\n          return;\r\n        }\r\n        \r\n        // 检查返回的数据\r\n        if (!response.data || !response.data.days || !response.data.data || response.data.days.length === 0) {\r\n          console.error('能耗分布数据异常:', response.data);\r\n          return;\r\n        }\r\n        \r\n        console.log('能耗分布数据:', response.data.data);\r\n        \r\n        // 销毁旧的图表实例\r\n        if (this.charts.consumption) {\r\n          this.charts.consumption.dispose();\r\n          this.charts.consumption = null;\r\n        }\r\n        \r\n        // 设置明确的宽高\r\n        this.$refs.consumptionChart.style.width = '100%';\r\n        this.$refs.consumptionChart.style.height = '500px';\r\n        \r\n        // 重新创建图表实例\r\n        this.charts.consumption = echarts.init(this.$refs.consumptionChart);\r\n        \r\n        // 直接使用后端返回的日期作为Y轴\r\n        const days = response.data.days;\r\n        \r\n        // 提取所有小时作为X轴（0-23）\r\n        const hours = [];\r\n        for (let i = 0; i < 24; i++) {\r\n          hours.push(i.toString());\r\n        }\r\n        \r\n        // 将API返回的数据转换为ECharts需要的格式 [x索引, y索引, 值]\r\n        const formattedData = [];\r\n        \r\n        // 找出数据中的最小值和最大值，用于设置图例刻度\r\n        let minValue = Infinity;\r\n        let maxValue = 0;\r\n        \r\n        if (Array.isArray(response.data.data)) {\r\n          response.data.data.forEach(item => {\r\n            if (Array.isArray(item) && item.length === 3) {\r\n              const day = item[0];\r\n              const hour = parseInt(item[1]);\r\n              const value = parseFloat(item[2] || 0);\r\n              \r\n              // 更新最小值和最大值\r\n              if (!isNaN(value)) {\r\n                minValue = Math.min(minValue, value);\r\n                maxValue = Math.max(maxValue, value);\r\n              }\r\n              \r\n              // 确保值是有效的数字\r\n              if (!isNaN(value) && hour >= 0 && hour < 24) {\r\n                // 找到日期在Y轴中的索引\r\n                const dayIndex = days.indexOf(day);\r\n                \r\n                // 只有当日期在Y轴中存在时才添加数据点\r\n                if (dayIndex !== -1) {\r\n                  formattedData.push([hour, dayIndex, value]);\r\n                }\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          console.error('能耗数据不是数组格式');\r\n          // 创建默认数据以避免图表崩溃\r\n          for (let dayIndex = 0; dayIndex < days.length; dayIndex++) {\r\n            for (let hour = 0; hour < 24; hour++) {\r\n              formattedData.push([hour, dayIndex, 0]);\r\n            }\r\n          }\r\n        }\r\n        \r\n        console.log('格式化后的数据点数:', formattedData.length);\r\n        console.log('数据范围:', minValue, '至', maxValue);\r\n        \r\n        // 如果没有有效数据，设置默认值避免图表错误\r\n        if (formattedData.length === 0 || minValue === Infinity) {\r\n          minValue = 0;\r\n          maxValue = 100;\r\n        }\r\n        \r\n        // 使用后端返回的最大值或计算得到的最大值\r\n        const visualMaxValue = response.data.maxValue || Math.ceil(maxValue) || 100;\r\n        \r\n        // 创建均匀分布的刻度值数组\r\n        const pieces = [];\r\n        const stepCount = 10; // 分成10个刻度\r\n        const step = visualMaxValue / stepCount;\r\n        \r\n        for (let i = 0; i < stepCount; i++) {\r\n          const startValue = i * step;\r\n          const endValue = (i + 1) * step;\r\n          pieces.push({\r\n            min: startValue,\r\n            max: endValue,\r\n            label: `${startValue.toFixed(0)}-${endValue.toFixed(0)}`\r\n          });\r\n        }\r\n        \r\n        // 使用简单的配置\r\n        const option = {\r\n          title: {\r\n            text: '能耗分布热力图',\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            position: 'top',\r\n            formatter: function (params) {\r\n              const hour = params.data[0];\r\n              const day = days[params.data[1]];\r\n              const value = params.data[2];\r\n              return `${hour}:00 - ${(parseInt(hour) + 1) % 24}:00<br>日期: ${day}<br>能耗: ${value.toFixed(2)} kWh`;\r\n            }\r\n          },\r\n          grid: {\r\n            height: '70%',\r\n            top: '60px',\r\n            left: '80px',\r\n            right: '30px',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: hours,\r\n            axisLabel: {\r\n              formatter: '{value}:00',\r\n              interval: function (index, value) {\r\n                // 每2小时显示一个标签\r\n                return index % 2 === 0;\r\n              }\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            data: days,\r\n            axisLabel: {\r\n              formatter: function (value) {\r\n                const parts = value.split('-');\r\n                return parts[1] + '-' + parts[2]; // 只显示月-日\r\n              }\r\n            }\r\n          },\r\n          visualMap: {\r\n            type: 'continuous',\r\n            min: 0,\r\n            max: visualMaxValue,\r\n            precision: 0,\r\n            calculable: true,\r\n            orient: 'horizontal',\r\n            left: 'center',\r\n            bottom: '5%',\r\n            inRange: {\r\n              color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\r\n            },\r\n            // 添加具体的数字刻度\r\n            splitNumber: 10, // 分割段数\r\n            formatter: function (value) {\r\n              return value.toFixed(0) + ' kWh';\r\n            },\r\n            textStyle: {\r\n              color: '#333'\r\n            }\r\n          },\r\n          series: [\r\n            {\r\n              name: '能耗 (kWh)',\r\n              type: 'heatmap',\r\n              data: formattedData,\r\n              emphasis: {\r\n                itemStyle: {\r\n                  shadowBlur: 10,\r\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        };\r\n        \r\n        // 应用配置并渲染\r\n        this.charts.consumption.setOption(option);\r\n        console.log('热力图渲染成功');\r\n        \r\n        // 确保图表正确渲染\r\n        window.addEventListener('resize', () => {\r\n          if (this.charts.consumption) {\r\n            this.charts.consumption.resize();\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('渲染能耗分布热力图失败:', error);\r\n        \r\n        // 尝试显示错误信息\r\n        if (this.$refs.consumptionChart && this.charts.consumption) {\r\n          this.charts.consumption.dispose();\r\n          this.charts.consumption = echarts.init(this.$refs.consumptionChart);\r\n          this.charts.consumption.setOption({\r\n            title: {\r\n              text: '能耗分布热力图 (加载失败)',\r\n              textStyle: { color: '#ff0000' },\r\n              left: 'center'\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 充电站利用率对比\r\n    async renderUtilizationChart(params) {\r\n      try {\r\n        const response = await energyEfficiencyApi.getStationUtilization(params);\r\n        \r\n        // 确保DOM元素存在\r\n        if (!this.$refs.utilizationChart) {\r\n          console.error('利用率图表DOM元素不存在');\r\n          return;\r\n        }\r\n        \r\n        // 检查返回数据\r\n        if (!response.data || !Array.isArray(response.data) || response.data.length === 0) {\r\n          console.error('充电站利用率数据异常:', response.data);\r\n          // 创建没有数据的图表以避免错误\r\n          if (this.charts.utilization) {\r\n            this.charts.utilization.dispose();\r\n          }\r\n          this.charts.utilization = echarts.init(this.$refs.utilizationChart);\r\n          this.charts.utilization.setOption({\r\n            title: {\r\n              text: '充电站利用率对比 (暂无数据)',\r\n              left: 'center'\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        \r\n        // 销毁旧图表实例\r\n        if (this.charts.utilization) {\r\n          this.charts.utilization.dispose();\r\n          this.charts.utilization = null;\r\n        }\r\n        \r\n        // 重新创建图表实例\r\n        this.charts.utilization = echarts.init(this.$refs.utilizationChart);\r\n        \r\n        // 数据处理：确保所有数据都是正数，且单位一致\r\n        const processedData = response.data.map(item => {\r\n          return {\r\n            stationName: item.stationName || '未知充电站',\r\n            busyHours: Math.abs(parseFloat(item.busyHours || 0)),\r\n            idleHours: Math.abs(parseFloat(item.idleHours || 0)),\r\n            maintenanceHours: Math.abs(parseFloat(item.maintenanceHours || 0)),\r\n            errorHours: Math.abs(parseFloat(item.errorHours || 0))\r\n          };\r\n        });\r\n        \r\n        // 验证数据总和是否合理，如果总和异常大，则进行归一化处理\r\n        processedData.forEach(item => {\r\n          const total = item.busyHours + item.idleHours + item.maintenanceHours + item.errorHours;\r\n          // 如果总时间超过48小时（允许一定误差），则认为数据异常，需要归一化\r\n          if (total > 48) {\r\n            const factor = 24 / total;\r\n            item.busyHours *= factor;\r\n            item.idleHours *= factor;\r\n            item.maintenanceHours *= factor;\r\n            item.errorHours *= factor;\r\n          }\r\n        });\r\n        \r\n        console.log('处理后的充电站利用率数据:', processedData);\r\n        \r\n        const option = {\r\n          title: {\r\n            text: '充电站利用率对比',\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            },\r\n            formatter: function(params) {\r\n              let tooltip = params[0].name + '<br/>';\r\n              let total = 0;\r\n              \r\n              params.forEach(param => {\r\n                tooltip += param.seriesName + ': ' + param.value.toFixed(2) + ' 小时<br/>';\r\n                total += param.value;\r\n              });\r\n              \r\n              tooltip += '<br/>总计: ' + total.toFixed(2) + ' 小时';\r\n              return tooltip;\r\n            }\r\n          },\r\n          legend: {\r\n            data: ['忙碌时间', '空闲时间', '维护时间', '故障时间'],\r\n            selectedMode: false,\r\n            top: '30px'\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            top: '80px',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'value',\r\n            name: '小时',\r\n            min: 0,\r\n            max: 24,\r\n            axisLabel: {\r\n              formatter: '{value} h'\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            data: processedData.map(item => item.stationName)\r\n          },\r\n          series: [\r\n            {\r\n              name: '忙碌时间',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              label: {\r\n                show: true,\r\n                formatter: '{c} h'\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: processedData.map(item => parseFloat(item.busyHours.toFixed(2)))\r\n            },\r\n            {\r\n              name: '空闲时间',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              label: {\r\n                show: true,\r\n                formatter: '{c} h'\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: processedData.map(item => parseFloat(item.idleHours.toFixed(2)))\r\n            },\r\n            {\r\n              name: '维护时间',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              label: {\r\n                show: true,\r\n                formatter: '{c} h'\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: processedData.map(item => parseFloat(item.maintenanceHours.toFixed(2)))\r\n            },\r\n            {\r\n              name: '故障时间',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              label: {\r\n                show: true,\r\n                formatter: '{c} h'\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: processedData.map(item => parseFloat(item.errorHours.toFixed(2)))\r\n            }\r\n          ]\r\n        };\r\n        \r\n        this.charts.utilization.setOption(option);\r\n        \r\n        // 取消图表的点击事件\r\n        this.charts.utilization.off('click');\r\n        \r\n        // 确保图表正确渲染\r\n        window.addEventListener('resize', () => {\r\n          if (this.charts.utilization) {\r\n            this.charts.utilization.resize();\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('渲染充电站利用率图表失败:', error);\r\n        \r\n        // 错误情况下，显示错误信息\r\n        if (this.$refs.utilizationChart) {\r\n          if (this.charts.utilization) {\r\n            this.charts.utilization.dispose();\r\n          }\r\n          this.charts.utilization = echarts.init(this.$refs.utilizationChart);\r\n          this.charts.utilization.setOption({\r\n            title: {\r\n              text: '充电站利用率对比 (加载失败)',\r\n              textStyle: { color: '#ff0000' },\r\n              left: 'center'\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 机器人充电行为分析\r\n    async renderRobotChart(params) {\r\n      const response = await energyEfficiencyApi.getRobotChargingBehavior(params);\r\n      \r\n      if (!this.charts.robot) {\r\n        this.charts.robot = echarts.init(this.$refs.robotChart);\r\n      }\r\n      \r\n      const option = {\r\n        title: {\r\n          text: '机器人充电行为分析'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['充电次数', '平均充电时长', '平均等待时间'],\r\n          selectedMode: false\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            data: response.data.robots.map(robot => robot.name),\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n            name: '次数',\r\n            min: 0,\r\n            axisLabel: {\r\n              formatter: '{value}'\r\n            }\r\n          },\r\n          {\r\n            type: 'value',\r\n            name: '时间 (分钟)',\r\n            min: 0,\r\n            axisLabel: {\r\n              formatter: '{value} min'\r\n            }\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: '充电次数',\r\n            type: 'bar',\r\n            data: response.data.robots.map(robot => robot.chargingCount)\r\n          },\r\n          {\r\n            name: '平均充电时长',\r\n            type: 'line',\r\n            yAxisIndex: 1,\r\n            data: response.data.robots.map(robot => robot.avgChargingDuration)\r\n          },\r\n          {\r\n            name: '平均等待时间',\r\n            type: 'line',\r\n            yAxisIndex: 1,\r\n            data: response.data.robots.map(robot => robot.avgWaitingTime)\r\n          }\r\n        ]\r\n      };\r\n      \r\n      this.charts.robot.setOption(option);\r\n      \r\n      // 取消图表的点击事件\r\n      this.charts.robot.off('click');\r\n    },\r\n    \r\n    // 充电高峰期分析\r\n    async renderPeakChart(params) {\r\n      const response = await energyEfficiencyApi.getChargingPeakAnalysis(params);\r\n      \r\n      if (!this.charts.peak) {\r\n        this.charts.peak = echarts.init(this.$refs.peakChart);\r\n      }\r\n      \r\n      const option = {\r\n        title: {\r\n          text: '充电高峰期分析'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['充电请求数', '平均等待时间'],\r\n          selectedMode: false\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            data: ['0-2', '2-4', '4-6', '6-8', '8-10', '10-12', '12-14', '14-16', '16-18', '18-20', '20-22', '22-24'],\r\n            axisLabel: {\r\n              formatter: '{value}时'\r\n            }\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n            name: '请求数',\r\n            min: 0,\r\n            axisLabel: {\r\n              formatter: '{value}'\r\n            }\r\n          },\r\n          {\r\n            type: 'value',\r\n            name: '等待时间 (分钟)',\r\n            min: 0,\r\n            axisLabel: {\r\n              formatter: '{value} min'\r\n            }\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: '充电请求数',\r\n            type: 'bar',\r\n            data: response.data.requestCounts\r\n          },\r\n          {\r\n            name: '平均等待时间',\r\n            type: 'line',\r\n            yAxisIndex: 1,\r\n            data: response.data.avgWaitingTimes\r\n          }\r\n        ]\r\n      };\r\n      \r\n      this.charts.peak.setOption(option);\r\n      \r\n      // 取消图表的点击事件\r\n      this.charts.peak.off('click');\r\n    },\r\n    \r\n    // 获取筛选参数\r\n    getFilterParams() {\r\n      return {\r\n        startDate: this.dateRange[0] ? this.dateRange[0].toISOString() : null,\r\n        endDate: this.dateRange[1] ? this.dateRange[1].toISOString() : null,\r\n        stationIds: this.selectedStations.length > 0 ? this.selectedStations : null,\r\n        robotIds: this.selectedRobots.length > 0 ? this.selectedRobots : null\r\n      };\r\n    },\r\n    \r\n    // 处理图表切换\r\n    handleChartChange(chartType) {\r\n      const titles = {\r\n        efficiency: '充电效率趋势分析',\r\n        consumption: '能耗分布热力图',\r\n        utilization: '充电站利用率对比',\r\n        robot: '机器人充电行为分析',\r\n        peak: '充电高峰期分析'\r\n      };\r\n      \r\n      this.currentChartTitle = titles[chartType];\r\n      \r\n      // 在切换图表前先清理旧图表实例，避免内存泄漏和DOM冲突\r\n      if (this.charts[this.currentChart]) {\r\n        try {\r\n          this.charts[this.currentChart].dispose();\r\n          this.charts[this.currentChart] = null;\r\n        } catch (error) {\r\n          console.error(`清理图表失败: ${error}`);\r\n        }\r\n      }\r\n      \r\n      this.fetchChartData();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.energy-efficiency-analysis {\r\n  padding: 20px;\r\n}\r\n\r\n.kpi-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.kpi-card {\r\n  text-align: center;\r\n  padding: 10px;\r\n}\r\n\r\n.kpi-title {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.kpi-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.kpi-change {\r\n  font-size: 12px;\r\n}\r\n\r\n.kpi-change.up {\r\n  color: #67c23a;\r\n}\r\n\r\n.kpi-change.down {\r\n  color: #f56c6c;\r\n}\r\n\r\n.chart-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-content {\r\n  position: relative;\r\n}\r\n\r\n.chart-item {\r\n  position: relative;\r\n}\r\n\r\n.chart {\r\n  height: 400px;\r\n  width: 100%;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}