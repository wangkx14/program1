{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/jiaronghao/Desktop/Documents/\\u672C\\u79D1\\u8BBA\\u6587\\u7F16\\u5199/5\\u3001\\u8D27\\u4ED3\\u673A\\u5668\\u4EBA\\u6FC0\\u5149\\u5145\\u7535\\u548C\\u80FD\\u6548\\u7BA1\\u7406\\u4E91\\u5E73\\u53F0\\u7684\\u8BBE\\u8BA1\\u4E0E\\u5B9E\\u73B0/Y0527-final/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/jiaronghao/Desktop/Documents/\\u672C\\u79D1\\u8BBA\\u6587\\u7F16\\u5199/5\\u3001\\u8D27\\u4ED3\\u673A\\u5668\\u4EBA\\u6FC0\\u5149\\u5145\\u7535\\u548C\\u80FD\\u6548\\u7BA1\\u7406\\u4E91\\u5E73\\u53F0\\u7684\\u8BBE\\u8BA1\\u4E0E\\u5B9E\\u73B0/Y0527-final/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/web.timers.js\";\nimport * as echarts from 'echarts';\nimport dashboardApi from '@/api/dashboard';\nexport default {\n  name: 'ChargingEfficiencyChart',\n  data: function data() {\n    return {\n      loading: false,\n      chart: null,\n      efficiencyData: []\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    this.initChart();\n    this.fetchData();\n\n    // 设置自动刷新（每60秒刷新一次）\n    this.refreshInterval = setInterval(function () {\n      _this.fetchData();\n    }, 60000);\n  },\n  beforeUnmount: function beforeUnmount() {\n    // 组件销毁前清除定时器和图表实例\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval);\n    }\n    if (this.chart) {\n      this.chart.dispose();\n      this.chart = null;\n    }\n  },\n  methods: {\n    initChart: function initChart() {\n      // 确保DOM元素已渲染\n      if (!this.$refs.chartRef) return;\n\n      // 初始化图表\n      this.chart = echarts.init(this.$refs.chartRef);\n\n      // 设置基础配置\n      var option = {\n        title: {\n          text: '充电效率趋势',\n          left: 'center',\n          textStyle: {\n            fontSize: 14\n          }\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: '{b}: {c}%'\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: [],\n          axisLabel: {\n            interval: 0,\n            rotate: 30\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: '充电效率 (%)',\n          min: 50,\n          max: 100\n        },\n        series: [{\n          type: 'bar',\n          data: [],\n          itemStyle: {\n            color: function color(params) {\n              // 根据效率值设置不同颜色\n              var value = params.value;\n              if (value >= 90) return '#67C23A'; // 高效率 - 绿色\n              if (value >= 80) return '#E6A23C'; // 中等效率 - 黄色\n              return '#F56C6C'; // 低效率 - 红色\n            }\n          },\n          label: {\n            show: true,\n            position: 'top',\n            formatter: '{c}%'\n          }\n        }]\n      };\n      this.chart.setOption(option);\n\n      // 添加窗口大小变化时自动调整图表大小的监听器\n      window.addEventListener('resize', this.resizeChart);\n    },\n    resizeChart: function resizeChart() {\n      if (this.chart) {\n        this.chart.resize();\n      }\n    },\n    fetchData: function fetchData() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this2.loading = true;\n              _context.prev = 1;\n              _context.next = 4;\n              return dashboardApi.getChargingEfficiency();\n            case 4:\n              response = _context.sent;\n              _this2.efficiencyData = response.data;\n              _this2.updateChart();\n              _context.next = 13;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('获取充电效率数据失败:', _context.t0);\n              _this2.$message.error('获取充电效率数据失败');\n            case 13:\n              _context.prev = 13;\n              _this2.loading = false;\n              return _context.finish(13);\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 9, 13, 16]]);\n      }))();\n    },\n    updateChart: function updateChart() {\n      if (!this.chart || !this.efficiencyData.length) return;\n\n      // 提取充电站名称和效率数据\n      var stationNames = this.efficiencyData.map(function (item) {\n        return item.name;\n      });\n      var efficiencyValues = this.efficiencyData.map(function (item) {\n        return parseFloat(item.efficiency).toFixed(2);\n      });\n\n      // 更新图表数据\n      this.chart.setOption({\n        xAxis: {\n          data: stationNames\n        },\n        series: [{\n          data: efficiencyValues\n        }]\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","dashboardApi","name","data","loading","chart","efficiencyData","mounted","_this","initChart","fetchData","refreshInterval","setInterval","beforeUnmount","clearInterval","dispose","methods","$refs","chartRef","init","option","title","text","left","textStyle","fontSize","tooltip","trigger","formatter","grid","right","bottom","containLabel","xAxis","type","axisLabel","interval","rotate","yAxis","min","max","series","itemStyle","color","params","value","label","show","position","setOption","window","addEventListener","resizeChart","resize","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","getChargingEfficiency","sent","updateChart","t0","console","error","$message","finish","stop","length","stationNames","map","item","efficiencyValues","parseFloat","efficiency","toFixed"],"sources":["C:\\Users\\jiaronghao\\Desktop\\Documents\\本科论文编写\\5、货仓机器人激光充电和能效管理云平台的设计与实现\\Y0527-final\\frontend\\src\\components\\ChargingEfficiencyChart.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-container\" v-loading=\"loading\">\r\n    <div ref=\"chartRef\" class=\"chart\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport dashboardApi from '@/api/dashboard';\r\n\r\nexport default {\r\n  name: 'ChargingEfficiencyChart',\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      chart: null,\r\n      efficiencyData: []\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initChart();\r\n    this.fetchData();\r\n    \r\n    // 设置自动刷新（每60秒刷新一次）\r\n    this.refreshInterval = setInterval(() => {\r\n      this.fetchData();\r\n    }, 60000);\r\n  },\r\n  beforeUnmount() {\r\n    // 组件销毁前清除定时器和图表实例\r\n    if (this.refreshInterval) {\r\n      clearInterval(this.refreshInterval);\r\n    }\r\n    if (this.chart) {\r\n      this.chart.dispose();\r\n      this.chart = null;\r\n    }\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      // 确保DOM元素已渲染\r\n      if (!this.$refs.chartRef) return;\r\n      \r\n      // 初始化图表\r\n      this.chart = echarts.init(this.$refs.chartRef);\r\n      \r\n      // 设置基础配置\r\n      const option = {\r\n        title: {\r\n          text: '充电效率趋势',\r\n          left: 'center',\r\n          textStyle: {\r\n            fontSize: 14\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          formatter: '{b}: {c}%'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: [],\r\n          axisLabel: {\r\n            interval: 0,\r\n            rotate: 30\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          name: '充电效率 (%)',\r\n          min: 50,\r\n          max: 100\r\n        },\r\n        series: [\r\n          {\r\n            type: 'bar',\r\n            data: [],\r\n            itemStyle: {\r\n              color: function(params) {\r\n                // 根据效率值设置不同颜色\r\n                const value = params.value;\r\n                if (value >= 90) return '#67C23A'; // 高效率 - 绿色\r\n                if (value >= 80) return '#E6A23C'; // 中等效率 - 黄色\r\n                return '#F56C6C'; // 低效率 - 红色\r\n              }\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: 'top',\r\n              formatter: '{c}%'\r\n            }\r\n          }\r\n        ]\r\n      };\r\n      \r\n      this.chart.setOption(option);\r\n      \r\n      // 添加窗口大小变化时自动调整图表大小的监听器\r\n      window.addEventListener('resize', this.resizeChart);\r\n    },\r\n    resizeChart() {\r\n      if (this.chart) {\r\n        this.chart.resize();\r\n      }\r\n    },\r\n    async fetchData() {\r\n      this.loading = true;\r\n      try {\r\n        const response = await dashboardApi.getChargingEfficiency();\r\n        this.efficiencyData = response.data;\r\n        this.updateChart();\r\n      } catch (error) {\r\n        console.error('获取充电效率数据失败:', error);\r\n        this.$message.error('获取充电效率数据失败');\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    updateChart() {\r\n      if (!this.chart || !this.efficiencyData.length) return;\r\n      \r\n      // 提取充电站名称和效率数据\r\n      const stationNames = this.efficiencyData.map(item => item.name);\r\n      const efficiencyValues = this.efficiencyData.map(item => parseFloat(item.efficiency).toFixed(2));\r\n      \r\n      // 更新图表数据\r\n      this.chart.setOption({\r\n        xAxis: {\r\n          data: stationNames\r\n        },\r\n        series: [\r\n          {\r\n            data: efficiencyValues\r\n          }\r\n        ]\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chart-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 300px;\r\n}\r\n\r\n.chart {\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 300px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}