{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    user: null,\n    token: localStorage.getItem('token') || null\n  },\n  mutations: {\n    setUser: function setUser(state, user) {\n      state.user = user;\n    },\n    setToken: function setToken(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n    },\n    clearUser: function clearUser(state) {\n      state.user = null;\n      state.token = null;\n      localStorage.removeItem('token');\n    }\n  },\n  actions: {\n    login: function login(_ref, _ref2) {\n      var commit = _ref.commit;\n      var username = _ref2.username,\n        password = _ref2.password;\n      // TODO: 实现登录逻辑\n      return new Promise(function (resolve) {\n        // 模拟登录成功\n        var user = {\n          id: 1,\n          username: username,\n          role: 'admin'\n        };\n        var token = 'dummy-token';\n        commit('setUser', user);\n        commit('setToken', token);\n        resolve(user);\n      });\n    },\n    logout: function logout(_ref3) {\n      var commit = _ref3.commit;\n      commit('clearUser');\n    }\n  },\n  getters: {\n    isAuthenticated: function isAuthenticated(state) {\n      return !!state.token;\n    },\n    currentUser: function currentUser(state) {\n      return state.user;\n    }\n  }\n});","map":{"version":3,"names":["createStore","state","user","token","localStorage","getItem","mutations","setUser","setToken","setItem","clearUser","removeItem","actions","login","_ref","_ref2","commit","username","password","Promise","resolve","id","role","logout","_ref3","getters","isAuthenticated","currentUser"],"sources":["C:/Users/Lenovo/Desktop/充电桩/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\r\n\r\nexport default createStore({\r\n  state: {\r\n    user: null,\r\n    token: localStorage.getItem('token') || null\r\n  },\r\n  mutations: {\r\n    setUser(state, user) {\r\n      state.user = user\r\n    },\r\n    setToken(state, token) {\r\n      state.token = token\r\n      localStorage.setItem('token', token)\r\n    },\r\n    clearUser(state) {\r\n      state.user = null\r\n      state.token = null\r\n      localStorage.removeItem('token')\r\n    }\r\n  },\r\n  actions: {\r\n    login({ commit }, { username, password }) {\r\n      // TODO: 实现登录逻辑\r\n      return new Promise((resolve) => {\r\n        // 模拟登录成功\r\n        const user = { id: 1, username, role: 'admin' }\r\n        const token = 'dummy-token'\r\n        commit('setUser', user)\r\n        commit('setToken', token)\r\n        resolve(user)\r\n      })\r\n    },\r\n    logout({ commit }) {\r\n      commit('clearUser')\r\n    }\r\n  },\r\n  getters: {\r\n    isAuthenticated: state => !!state.token,\r\n    currentUser: state => state.user\r\n  }\r\n}) "],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI;EAC1C,CAAC;EACDC,SAAS,EAAE;IACTC,OAAO,WAAPA,OAAOA,CAACN,KAAK,EAAEC,IAAI,EAAE;MACnBD,KAAK,CAACC,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDM,QAAQ,WAARA,QAAQA,CAACP,KAAK,EAAEE,KAAK,EAAE;MACrBF,KAAK,CAACE,KAAK,GAAGA,KAAK;MACnBC,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEN,KAAK,CAAC;IACtC,CAAC;IACDO,SAAS,WAATA,SAASA,CAACT,KAAK,EAAE;MACfA,KAAK,CAACC,IAAI,GAAG,IAAI;MACjBD,KAAK,CAACE,KAAK,GAAG,IAAI;MAClBC,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAClC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,KAAK,WAALA,KAAKA,CAAAC,IAAA,EAAAC,KAAA,EAAqC;MAAA,IAAlCC,MAAM,GAAAF,IAAA,CAANE,MAAM;MAAA,IAAMC,QAAQ,GAAAF,KAAA,CAARE,QAAQ;QAAEC,QAAQ,GAAAH,KAAA,CAARG,QAAQ;MACpC;MACA,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAK;QAC9B;QACA,IAAMlB,IAAI,GAAG;UAAEmB,EAAE,EAAE,CAAC;UAAEJ,QAAQ,EAARA,QAAQ;UAAEK,IAAI,EAAE;QAAQ,CAAC;QAC/C,IAAMnB,KAAK,GAAG,aAAa;QAC3Ba,MAAM,CAAC,SAAS,EAAEd,IAAI,CAAC;QACvBc,MAAM,CAAC,UAAU,EAAEb,KAAK,CAAC;QACzBiB,OAAO,CAAClB,IAAI,CAAC;MACf,CAAC,CAAC;IACJ,CAAC;IACDqB,MAAM,WAANA,MAAMA,CAAAC,KAAA,EAAa;MAAA,IAAVR,MAAM,GAAAQ,KAAA,CAANR,MAAM;MACbA,MAAM,CAAC,WAAW,CAAC;IACrB;EACF,CAAC;EACDS,OAAO,EAAE;IACPC,eAAe,EAAE,SAAjBA,eAAeA,CAAEzB,KAAK;MAAA,OAAI,CAAC,CAACA,KAAK,CAACE,KAAK;IAAA;IACvCwB,WAAW,EAAE,SAAbA,WAAWA,CAAE1B,KAAK;MAAA,OAAIA,KAAK,CAACC,IAAI;IAAA;EAClC;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}