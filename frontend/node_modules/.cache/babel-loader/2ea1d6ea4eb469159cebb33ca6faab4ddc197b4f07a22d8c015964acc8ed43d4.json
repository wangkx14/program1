{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"stations-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"toolbar\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"error-message\"\n};\nvar _hoisted_4 = {\n  key: 0\n};\nvar _hoisted_5 = {\n  key: 0\n};\nvar _hoisted_6 = {\n  key: 1,\n  \"class\": \"no-robot\"\n};\nvar _hoisted_7 = {\n  key: 2,\n  \"class\": \"no-data\"\n};\nvar _hoisted_8 = {\n  key: 3,\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_9 = {\n  \"class\": \"dialog-content-wrapper\"\n};\nvar _hoisted_10 = {\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_alert = _resolveComponent(\"el-alert\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_progress = _resolveComponent(\"el-progress\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_empty = _resolveComponent(\"el-empty\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_input_number = _resolveComponent(\"el-input-number\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  var _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"充电站管理\", -1 /* HOISTED */)), _createVNode(_component_el_card, {\n    \"class\": \"box-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [$setup.isAdmin ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        type: \"primary\",\n        onClick: $options.showAddDialog\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[5] || (_cache[5] = [_createTextVNode(\"添加充电站\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [5]\n      }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_alert, {\n        title: \"加载数据出错\",\n        type: \"error\",\n        description: $data.error,\n        \"show-icon\": \"\"\n      }, null, 8 /* PROPS */, [\"description\"])])) : _createCommentVNode(\"v-if\", true), $data.stations && $data.stations.length > 0 ? _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n        key: 1,\n        data: $options.paginatedStations,\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_table_column, {\n            prop: \"id\",\n            label: \"充电站ID\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"名称\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"location\",\n            label: \"位置\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"status\",\n            label: \"状态\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_tag, {\n                type: $options.getStatusType(scope.row.status)\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($options.getStatusText(scope.row.status)), 1 /* TEXT */)];\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"power_rating\",\n            label: \"输出功率\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"efficiency\",\n            label: \"充电效率\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_progress, {\n                percentage: scope.row.efficiency\n              }, null, 8 /* PROPS */, [\"percentage\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            label: \"关联机器人\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [$options.getAssociatedRobot(scope.row.id) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_tag, {\n                type: \"primary\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($options.getAssociatedRobot(scope.row.id).name) + \" \", 1 /* TEXT */), $options.getAssociatedRobot(scope.row.id).status === 'charging' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \" (充电中)\")) : _createCommentVNode(\"v-if\", true)];\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"无关联机器人\"))];\n            }),\n            _: 1 /* STABLE */\n          }), $setup.isAdmin ? (_openBlock(), _createBlock(_component_el_table_column, {\n            key: 0,\n            label: \"操作\",\n            width: \"200\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_button, {\n                size: \"small\",\n                onClick: function onClick($event) {\n                  return $options.handleEdit(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[6] || (_cache[6] = [_createTextVNode(\"编辑\")]);\n                }),\n                _: 2 /* DYNAMIC */,\n                __: [6]\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                size: \"small\",\n                type: \"danger\",\n                onClick: function onClick($event) {\n                  return $options.handleDelete(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[7] || (_cache[7] = [_createTextVNode(\"删除\")]);\n                }),\n                _: 2 /* DYNAMIC */,\n                __: [7]\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])];\n            }),\n            _: 1 /* STABLE */\n          })) : _createCommentVNode(\"v-if\", true)];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $data.loading]]) : !$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createVNode(_component_el_empty, {\n        description: \"暂无数据\"\n      })])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 分页控件 \"), $data.stations && $data.stations.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createVNode(_component_el_pagination, {\n        \"current-page\": $data.currentPage,\n        \"onUpdate:currentPage\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.currentPage = $event;\n        }),\n        \"page-size\": $data.pageSize,\n        total: $options.totalItems,\n        layout: \"total, prev, pager, next, jumper\",\n        onCurrentChange: $options.handleCurrentChange\n      }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\", \"onCurrentChange\"])])) : _createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 添加/编辑对话框 \"), _createVNode(_component_el_dialog, {\n    title: $data.dialogTitle,\n    modelValue: $data.dialogVisible,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n      return $data.dialogVisible = $event;\n    }),\n    \"close-on-click-modal\": false,\n    \"destroy-on-close\": true,\n    \"append-to-body\": \"\",\n    \"modal-append-to-body\": false,\n    width: \"500px\",\n    \"lock-scroll\": false,\n    onOpen: $options.handleDialogOpen\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_10, [_createVNode(_component_el_button, {\n        onClick: $options.closeDialog\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[8] || (_cache[8] = [_createTextVNode(\"取消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [8]\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.handleSave\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[9] || (_cache[9] = [_createTextVNode(\"确定\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [9]\n      }, 8 /* PROPS */, [\"onClick\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_9, [(_openBlock(), _createBlock(_component_el_form, {\n        model: $data.stationForm,\n        \"label-width\": \"120px\",\n        ref: \"stationFormRef\",\n        key: \"station-form-\".concat($data.dialogVisible)\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"充电站名称\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $data.stationForm.name,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $data.stationForm.name = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"位置\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $data.stationForm.location,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $data.stationForm.location = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"输出功率\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input_number, {\n                modelValue: $data.stationForm.power_rating,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                  return $data.stationForm.power_rating = $event;\n                }),\n                min: 0,\n                controls: false\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"]))])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\", \"onOpen\"])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_card","_withCtx","_hoisted_2","$setup","isAdmin","_createBlock","_component_el_button","type","onClick","$options","showAddDialog","_cache","_createTextVNode","_","__","_createCommentVNode","$data","error","_hoisted_3","_component_el_alert","title","description","stations","length","_component_el_table","data","paginatedStations","style","_component_el_table_column","prop","label","width","scope","_component_el_tag","getStatusType","row","status","_toDisplayString","getStatusText","_component_el_progress","percentage","efficiency","getAssociatedRobot","id","_hoisted_4","name","_hoisted_5","_hoisted_6","size","$event","handleEdit","handleDelete","loading","_hoisted_7","_component_el_empty","_hoisted_8","_component_el_pagination","currentPage","pageSize","total","totalItems","layout","onCurrentChange","handleCurrentChange","_component_el_dialog","dialogTitle","modelValue","dialogVisible","onOpen","handleDialogOpen","footer","_hoisted_10","closeDialog","handleSave","_hoisted_9","_component_el_form","model","stationForm","ref","concat","_component_el_form_item","_component_el_input","location","_component_el_input_number","power_rating","min","controls"],"sources":["C:\\Users\\jiaronghao\\Desktop\\Documents\\本科论文编写\\5、货仓机器人激光充电和能效管理云平台的设计与实现\\Y0527-final\\frontend\\src\\views\\Stations.vue"],"sourcesContent":["<template>\n  <div class=\"stations-container\">\n    <h2>充电站管理</h2>\n    <el-card class=\"box-card\">\n      <div class=\"toolbar\">\n        <el-button v-if=\"isAdmin\" type=\"primary\" @click=\"showAddDialog\">添加充电站</el-button>\n      </div>\n      \n      <div v-if=\"error\" class=\"error-message\">\n        <el-alert\n          title=\"加载数据出错\"\n          type=\"error\"\n          :description=\"error\"\n          show-icon\n        />\n      </div>\n      \n      <el-table \n        v-if=\"stations && stations.length > 0\" \n        :data=\"paginatedStations\" \n        style=\"width: 100%\" \n        v-loading=\"loading\">\n        <el-table-column prop=\"id\" label=\"充电站ID\" width=\"180\" />\n        <el-table-column prop=\"name\" label=\"名称\" width=\"180\" />\n        <el-table-column prop=\"location\" label=\"位置\" />\n        <el-table-column prop=\"status\" label=\"状态\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.status)\">\n              {{ getStatusText(scope.row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"power_rating\" label=\"输出功率\" />\n        <el-table-column prop=\"efficiency\" label=\"充电效率\">\n          <template #default=\"scope\">\n            <el-progress :percentage=\"scope.row.efficiency\" />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"关联机器人\">\n          <template #default=\"scope\">\n            <div v-if=\"getAssociatedRobot(scope.row.id)\">\n              <el-tag type=\"primary\">\n                {{ getAssociatedRobot(scope.row.id).name }}\n                <span v-if=\"getAssociatedRobot(scope.row.id).status === 'charging'\"> (充电中)</span>\n              </el-tag>\n            </div>\n            <span v-else class=\"no-robot\">无关联机器人</span>\n          </template>\n        </el-table-column>\n        <el-table-column v-if=\"isAdmin\" label=\"操作\" width=\"200\">\n          <template #default=\"scope\">\n            <el-button size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button size=\"small\" type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <div v-else-if=\"!loading\" class=\"no-data\">\n        <el-empty description=\"暂无数据\" />\n      </div>\n      \n      <!-- 分页控件 -->\n      <div class=\"pagination-container\" v-if=\"stations && stations.length > 0\">\n        <el-pagination\n          v-model:current-page=\"currentPage\"\n          :page-size=\"pageSize\"\n          :total=\"totalItems\"\n          layout=\"total, prev, pager, next, jumper\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n\n    <!-- 添加/编辑对话框 -->\n    <el-dialog \n      :title=\"dialogTitle\" \n      v-model=\"dialogVisible\"\n      :close-on-click-modal=\"false\"\n      :destroy-on-close=\"true\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      width=\"500px\"\n      :lock-scroll=\"false\"\n      @open=\"handleDialogOpen\">\n      <div class=\"dialog-content-wrapper\">\n        <el-form \n          :model=\"stationForm\" \n          label-width=\"120px\" \n          ref=\"stationFormRef\" \n          :key=\"`station-form-${dialogVisible}`\">\n          <el-form-item label=\"充电站名称\">\n            <el-input v-model=\"stationForm.name\" />\n          </el-form-item>\n          <el-form-item label=\"位置\">\n            <el-input v-model=\"stationForm.location\" />\n          </el-form-item>\n          <el-form-item label=\"输出功率\">\n            <el-input-number v-model=\"stationForm.power_rating\" :min=\"0\" :controls=\"false\" />\n          </el-form-item>\n        </el-form>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"closeDialog\">取消</el-button>\n          <el-button type=\"primary\" @click=\"handleSave\">确定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { stationApi } from '@/api'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { robotApi } from '@/api'\n\nexport default {\n  name: 'Stations',\n  setup() {\n    const store = useStore()\n    const isAdmin = computed(() => store.getters.isAdmin)\n    \n    return {\n      isAdmin\n    }\n  },\n  data() {\n    return {\n      stations: [],\n      robots: [],\n      loading: false,\n      error: null,\n      dialogVisible: false,\n      dialogTitle: '添加充电站',\n      stationForm: {\n        name: '',\n        location: '',\n        power_rating: 0\n      },\n      isEdit: false,\n      currentId: null,\n      // 分页相关\n      currentPage: 1,\n      pageSize: 10,\n      // 防止表单重复提交\n      isSaving: false\n    }\n  },\n  computed: {\n    totalItems() {\n      return this.stations.length\n    },\n    paginatedStations() {\n      const startIndex = (this.currentPage - 1) * this.pageSize\n      const endIndex = startIndex + this.pageSize\n      return this.stations.slice(startIndex, endIndex)\n    }\n  },\n  created() {\n    console.log('Stations组件已创建，准备获取数据')\n    this.fetchStations()\n    this.fetchRobots()\n  },\n  methods: {\n    async fetchStations() {\n      try {\n        this.loading = true\n        this.error = null\n        console.log('开始获取充电站数据')\n        \n        try {\n          const response = await stationApi.getAll()\n          // 打印原始响应\n          console.log('获取到充电站数据(原始):', response)\n          console.log('获取到充电站数据:', response.data)\n          console.log('充电站数据类型:', typeof response.data, Array.isArray(response.data))\n          \n          // 确保数据是数组\n          if (Array.isArray(response.data)) {\n            // 检查每个充电站对象的字段\n            const validStations = response.data.filter(station => {\n              const isValid = station && \n                            typeof station === 'object' && \n                            'id' in station && \n                            'name' in station && \n                            'location' in station && \n                            'status' in station;\n              \n              // 处理可能的NaN或undefined值\n              if (isValid) {\n                // 确保power_rating字段存在且为数字\n                if (!('power_rating' in station) || station.power_rating === null || isNaN(station.power_rating)) {\n                  station.power_rating = 0;\n                }\n                \n                // 确保efficiency字段存在且为数字\n                if (!('efficiency' in station) || station.efficiency === null || isNaN(station.efficiency)) {\n                  station.efficiency = 80; // 默认效率\n                }\n              } else {\n                console.warn('过滤掉无效的充电站数据:', station);\n              }\n              return isValid;\n            });\n            \n            console.log('有效的充电站数据:', validStations);\n            this.stations = validStations;\n            // 重置为第一页\n            this.currentPage = 1;\n            console.log('成功设置充电站数据，数量:', this.stations.length)\n          } else {\n            console.error('API返回的充电站数据不是数组:', response.data)\n            this.stations = [] // 设置为空数组\n            this.error = '充电站数据格式错误，请联系管理员'\n            ElMessage.error('充电站数据格式错误')\n          }\n        } catch (apiError) {\n          console.error('API调用出错:', apiError)\n          this.stations = [] // 确保错误时也设置为空数组\n          this.error = `API调用出错: ${apiError.message || '未知错误'}`\n          ElMessage.error('获取充电站数据失败')\n        }\n      } catch (error) {\n        console.error('获取充电站列表失败:', error)\n        this.stations = [] // 确保错误时也设置为空数组\n        this.error = `获取数据失败: ${error.message || '未知错误'}`\n        ElMessage.error('获取充电站列表失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    async fetchRobots() {\n      try {\n        console.log('开始获取机器人数据')\n        const response = await robotApi.getAll()\n        \n        if (Array.isArray(response.data)) {\n          this.robots = response.data\n          console.log('成功获取机器人数据，数量:', this.robots.length)\n        } else {\n          console.error('API返回的机器人数据不是数组')\n          this.robots = []\n        }\n      } catch (error) {\n        console.error('获取机器人列表失败:', error)\n        this.robots = []\n      }\n    },\n    // 分页相关方法\n    handleCurrentChange(page) {\n      this.currentPage = page\n      console.log(`当前页: ${this.currentPage}`)\n    },\n    getStatusType(status) {\n      const types = {\n        'idle': 'info',\n        'charging': 'primary',\n        'maintenance': 'warning',\n        'error': 'danger'\n      }\n      return types[status] || 'info'\n    },\n    getStatusText(status) {\n      const texts = {\n        'idle': '空闲',\n        'charging': '充电中',\n        'maintenance': '维护中',\n        'error': '故障'\n      }\n      return texts[status] || status\n    },\n    showAddDialog() {\n      this.dialogTitle = '添加充电站'\n      this.isEdit = false\n      this.stationForm = {\n        name: '',\n        location: '',\n        power_rating: 0\n      }\n      this.isSaving = false\n      // 使用nextTick确保DOM更新后再显示对话框\n      this.$nextTick(() => {\n        this.dialogVisible = true\n      })\n    },\n    handleEdit(row) {\n      this.dialogTitle = '编辑充电站'\n      this.isEdit = true\n      this.currentId = row.id\n      this.stationForm = { ...row }\n      this.isSaving = false\n      // 使用nextTick确保DOM更新后再显示对话框\n      this.$nextTick(() => {\n        this.dialogVisible = true\n      })\n    },\n    async handleDelete(row) {\n      try {\n        await ElMessageBox.confirm('确定要删除这个充电站吗？', '提示', {\n          type: 'warning'\n        })\n        \n        // 禁用所有可能的ResizeObserver\n        try {\n          // 尝试临时禁用所有ResizeObserver\n          const disableResizeObservers = () => {\n            if (window.ResizeObserver) {\n              const originalResizeObserver = window.ResizeObserver;\n              window.ResizeObserver = class DisabledResizeObserver {\n                constructor() {\n                  this.observe = () => {};\n                  this.unobserve = () => {};\n                  this.disconnect = () => {};\n                }\n              };\n              // 5秒后恢复原始ResizeObserver\n              setTimeout(() => {\n                window.ResizeObserver = originalResizeObserver;\n              }, 5000);\n            }\n          };\n          \n          // 只在开发环境执行，避免影响生产环境\n          if (process.env.NODE_ENV === 'development') {\n            disableResizeObservers();\n          }\n        } catch (e) {\n          console.warn('临时禁用ResizeObserver失败:', e);\n        }\n        \n        // 在删除前先通知其他组件准备清理资源\n        try {\n          if (this.$root && this.$root.$emit) {\n            this.$root.$emit('station-pre-delete', row.id);\n          }\n        } catch (e) {\n          console.error('发送预删除事件失败:', e);\n        }\n        \n        // 延迟一小段时间让其他组件有时间做准备\n        await new Promise(resolve => setTimeout(resolve, 100));\n        \n        // 执行删除操作\n        await stationApi.delete(row.id);\n        ElMessage.success('删除成功');\n        \n        // 立即清理可能存在的悬空引用\n        try {\n          // 移除所有能效分析相关的图表DOM元素内容\n          const chartElements = document.querySelectorAll('.chart');\n          chartElements.forEach(el => {\n            if (el && el.parentNode) {\n              el.innerHTML = '';\n            }\n          });\n          \n          // 强制执行一次浏览器布局重排\n          if (document.body) {\n            document.body.offsetHeight;\n          }\n        } catch (e) {\n          console.warn('清理DOM失败:', e);\n        }\n        \n        // 延迟刷新数据，让DOM有时间完成清理\n        setTimeout(() => {\n          this.fetchStations();\n          \n          // 向父组件或全局事件总线发送刷新通知\n          this.$emit('station-deleted', row.id);\n          \n          // 尝试发送全局事件通知其他组件刷新\n          try {\n            if (this.$root && this.$root.$emit) {\n              this.$root.$emit('station-data-changed', {\n                action: 'delete',\n                stationId: row.id\n              });\n            }\n          } catch (e) {\n            console.error('发送全局事件失败:', e);\n          }\n          \n          // 延迟执行一次全局垃圾回收\n          setTimeout(() => {\n            try {\n              if (window.gc) window.gc();\n            } catch (e) {\n              // 大多数浏览器不支持直接调用gc，忽略错误\n            }\n            \n            // 强制刷新所有图表\n            try {\n              if (this.$root && this.$root.$emit) {\n                this.$root.$emit('force-refresh-charts');\n              }\n            } catch (e) {\n              console.warn('强制刷新图表失败:', e);\n            }\n          }, 1000);\n        }, 300);\n      } catch (error) {\n        if (error !== 'cancel') {\n          ElMessage.error('删除失败');\n          console.error(error);\n        }\n      }\n    },\n    handleDialogOpen() {\n      // 对话框打开时重置表单状态\n      this.isSaving = false\n      console.log('对话框已打开')\n    },\n    closeDialog() {\n      // 先隐藏内容，延迟关闭对话框，避免ResizeObserver错误\n      const dialogContent = document.querySelector('.dialog-content-wrapper');\n      if (dialogContent) {\n        dialogContent.style.display = 'none';\n      }\n      \n      // 使用较长的延时确保DOM完全稳定\n      setTimeout(() => {\n        this.dialogVisible = false\n      }, 300)\n    },\n    async handleSave() {\n      // 防止重复提交\n      if (this.isSaving) return\n      \n      try {\n        this.isSaving = true\n        \n        // 先隐藏内容，减少DOM重排\n        const dialogContent = document.querySelector('.dialog-content-wrapper');\n        if (dialogContent) {\n          dialogContent.style.display = 'none';\n        }\n        \n        // 准备提交的数据\n        const formData = { ...this.stationForm };\n        \n        // 确保功率值是数字\n        if (formData.power_rating !== undefined) {\n          try {\n            formData.power_rating = parseFloat(formData.power_rating);\n            if (isNaN(formData.power_rating)) {\n              formData.power_rating = 0;\n            }\n          } catch (e) {\n            formData.power_rating = 0;\n          }\n        } else {\n          formData.power_rating = 0;\n        }\n        \n        console.log('准备提交的充电站数据:', formData);\n        \n        // 验证数据\n        if (!formData.name || formData.name.trim() === '') {\n          throw new Error('充电站名称不能为空');\n        }\n        \n        if (!formData.location || formData.location.trim() === '') {\n          throw new Error('充电站位置不能为空');\n        }\n        \n        if (this.isEdit) {\n          console.log(`更新充电站: ID=${this.currentId}`);\n          try {\n            const response = await stationApi.update(this.currentId, formData);\n            console.log('更新充电站响应:', response);\n            ElMessage.success('更新成功');\n          } catch (apiError) {\n            console.error('API调用失败:', apiError);\n            throw new Error(`更新失败: ${apiError.message || '服务器错误'}`);\n          }\n        } else {\n          console.log('添加新充电站');\n          try {\n            const response = await stationApi.add(formData);\n            console.log('添加充电站响应:', response);\n            ElMessage.success('添加成功');\n          } catch (apiError) {\n            console.error('API调用失败:', apiError);\n            throw new Error(`添加失败: ${apiError.message || '服务器错误'}`);\n          }\n        }\n        \n        // 延迟关闭对话框，避免ResizeObserver错误\n        setTimeout(() => {\n          this.dialogVisible = false;\n          // 重新加载数据，显示最新的充电站列表\n          this.fetchStations();\n        }, 300);\n      } catch (error) {\n        // 出错时也恢复显示内容\n        const dialogContent = document.querySelector('.dialog-content-wrapper');\n        if (dialogContent) {\n          dialogContent.style.display = 'block';\n        }\n        \n        console.error('保存充电站失败:', error);\n        ElMessage.error(error.message || (this.isEdit ? '更新失败' : '添加失败'));\n        this.isSaving = false;\n      }\n    },\n    getAssociatedRobot(stationId) {\n      // 查找关联到此充电桩的机器人\n      return this.robots.find(robot => robot.station_id === stationId);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.stations-container {\n  padding: 20px;\n}\n.toolbar {\n  margin-bottom: 20px;\n}\n.error-message {\n  margin-bottom: 20px;\n}\n.no-data {\n  padding: 20px 0;\n}\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n\n/* 添加以下样式以解决对话框调整大小问题 */\n:deep(.el-dialog) {\n  overflow: hidden;\n  max-width: 500px;\n  min-width: 400px;\n  margin: 0 auto !important;\n  display: flex;\n  flex-direction: column;\n  border-radius: 4px;\n  height: auto !important;\n  \n  /* 禁用对话框的大多数动画和过渡效果 */\n  transition: none !important;\n  animation: none !important;\n  transform: none !important;\n}\n\n:deep(.el-dialog__body) {\n  padding: 20px;\n  overflow: hidden; /* 防止内容溢出导致resize事件 */\n  position: relative;\n  flex: 1;\n  height: auto !important;\n}\n\n:deep(.el-input-number) {\n  width: 100%;\n}\n\n/* 在移动设备上的样式调整 */\n@media screen and (max-width: 768px) {\n  :deep(.el-dialog) {\n    width: 90% !important;\n    min-width: 300px;\n  }\n}\n\n:deep(.el-dialog__headerbtn) {\n  transition: none !important;\n}\n\n:deep(.el-dialog__wrapper) {\n  overflow: hidden !important;\n  display: flex !important;\n  align-items: center;\n  justify-content: center;\n}\n\n/* 包装对话框内容，便于隐藏处理 */\n.dialog-content-wrapper {\n  width: 100%;\n  overflow: hidden;\n}\n\n/* 全局禁用部分可能导致resize循环的动画 */\n:deep(.el-dialog),\n:deep(.el-form-item),\n:deep(.el-input),\n:deep(.el-input-number),\n:deep(.el-form) {\n  animation: none !important;\n}\n\n.no-robot {\n  color: #909399;\n  font-style: italic;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}