{"ast":null,"code":"import _regeneratorRuntime from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport * as echarts from 'echarts';\nimport energyEfficiencyApi from '@/api/energyEfficiency';\nimport { formatDateTime, calculateDuration } from '@/utils/dateTime';\nimport { ArrowUp, ArrowDown } from '@element-plus/icons-vue';\nexport default {\n  name: 'EnergyEfficiencyAnalysis',\n  components: {\n    ArrowUp: ArrowUp,\n    ArrowDown: ArrowDown\n  },\n  data: function data() {\n    return {\n      // 固定的默认筛选条件（不再显示在UI上）\n      dateRange: [new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000), new Date()],\n      selectedStations: [],\n      selectedRobots: [],\n      // 数据列表\n      stations: [],\n      robots: [],\n      // 图表相关\n      currentChart: 'efficiency',\n      currentChartTitle: '充电效率趋势分析',\n      charts: {\n        efficiency: null,\n        consumption: null,\n        utilization: null,\n        robot: null,\n        peak: null\n      },\n      // KPI数据\n      kpiData: [{\n        title: '平均充电效率',\n        value: 0,\n        unit: '%',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '总能耗',\n        value: 0,\n        unit: 'kWh',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '充电器利用率',\n        value: 0,\n        unit: '%',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '平均等待时间',\n        value: 0,\n        unit: 'min',\n        change: 0,\n        trend: 'down'\n      }, {\n        title: '充电成功率',\n        value: 0,\n        unit: '%',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '总充电次数',\n        value: 0,\n        unit: '次',\n        change: 0,\n        trend: 'up'\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.initData();\n\n    // 添加窗口resize监听器，确保图表大小适应窗口变化\n    window.addEventListener('resize', this.handleResize);\n\n    // 监听充电站数据变化事件\n    try {\n      if (this.$root && this.$root.$on) {\n        this.$root.$on('station-data-changed', this.handleStationDataChanged);\n        // 监听充电站即将删除的事件，提前清理资源\n        this.$root.$on('station-pre-delete', this.handleStationPreDelete);\n        // 监听强制刷新图表的事件\n        this.$root.$on('force-refresh-charts', this.forceRefreshCharts);\n      }\n    } catch (e) {\n      console.error('注册全局事件监听失败:', e);\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    // 先清理所有图表资源\n    this.disposeAllCharts();\n\n    // 清空所有DOM引用\n    try {\n      if (this.$refs.efficiencyChart) this.$refs.efficiencyChart.innerHTML = '';\n      if (this.$refs.consumptionChart) this.$refs.consumptionChart.innerHTML = '';\n      if (this.$refs.utilizationChart) this.$refs.utilizationChart.innerHTML = '';\n      if (this.$refs.robotChart) this.$refs.robotChart.innerHTML = '';\n      if (this.$refs.peakChart) this.$refs.peakChart.innerHTML = '';\n    } catch (error) {\n      console.error('清理图表DOM引用失败:', error);\n    }\n\n    // 移除resize监听器\n    window.removeEventListener('resize', this.handleResize);\n\n    // 移除充电站数据变化事件监听\n    try {\n      if (this.$root && this.$root.$off) {\n        this.$root.$off('station-data-changed', this.handleStationDataChanged);\n        this.$root.$off('station-pre-delete', this.handleStationPreDelete);\n        this.$root.$off('force-refresh-charts', this.forceRefreshCharts);\n      }\n    } catch (e) {\n      console.error('移除全局事件监听失败:', e);\n    }\n  },\n  methods: {\n    // 强制刷新所有图表\n    forceRefreshCharts: function forceRefreshCharts() {\n      var _this = this;\n      console.log('接收到强制刷新图表的请求');\n      // 先清理所有现有图表\n      this.disposeAllCharts();\n\n      // 清空DOM内容\n      try {\n        if (this.$refs.efficiencyChart) this.$refs.efficiencyChart.innerHTML = '';\n        if (this.$refs.consumptionChart) this.$refs.consumptionChart.innerHTML = '';\n        if (this.$refs.utilizationChart) this.$refs.utilizationChart.innerHTML = '';\n        if (this.$refs.robotChart) this.$refs.robotChart.innerHTML = '';\n        if (this.$refs.peakChart) this.$refs.peakChart.innerHTML = '';\n      } catch (error) {\n        console.error('清理图表DOM引用失败:', error);\n      }\n\n      // 等待DOM更新后重新初始化\n      this.$nextTick(function () {\n        // 重新获取数据并渲染当前选中的图表\n        _this.fetchChartData();\n      });\n    },\n    // 处理充电站即将删除的事件\n    handleStationPreDelete: function handleStationPreDelete(stationId) {\n      console.log(\"\\u5145\\u7535\\u7AD9 \".concat(stationId, \" \\u5373\\u5C06\\u88AB\\u5220\\u9664\\uFF0C\\u63D0\\u524D\\u6E05\\u7406\\u8D44\\u6E90\"));\n      // 立即清理所有图表实例\n      this.disposeAllCharts();\n\n      // 清空DOM内容，确保没有悬挂的观察者\n      try {\n        if (this.$refs.efficiencyChart) this.$refs.efficiencyChart.innerHTML = '';\n        if (this.$refs.consumptionChart) this.$refs.consumptionChart.innerHTML = '';\n        if (this.$refs.utilizationChart) this.$refs.utilizationChart.innerHTML = '';\n        if (this.$refs.robotChart) this.$refs.robotChart.innerHTML = '';\n        if (this.$refs.peakChart) this.$refs.peakChart.innerHTML = '';\n      } catch (error) {\n        console.error('清理图表DOM引用失败:', error);\n      }\n    },\n    // 处理充电站数据变化事件\n    handleStationDataChanged: function handleStationDataChanged() {\n      var _this2 = this;\n      console.log('检测到充电站数据变化，刷新图表');\n      // 先清理所有图表实例\n      this.disposeAllCharts();\n      // 然后重新获取数据并渲染\n      this.$nextTick(function () {\n        _this2.initData();\n      });\n    },\n    // 处理窗口调整大小事件\n    handleResize: function handleResize() {\n      var _this3 = this;\n      // 调整所有已创建的图表\n      Object.keys(this.charts).forEach(function (key) {\n        if (_this3.charts[key]) {\n          try {\n            _this3.charts[key].resize();\n          } catch (error) {\n            console.error(\"\\u8C03\\u6574\\u56FE\\u8868 \".concat(key, \" \\u5927\\u5C0F\\u5931\\u8D25:\"), error);\n            // 如果调整大小失败，尝试销毁图表以避免进一步的错误\n            try {\n              _this3.charts[key].dispose();\n              _this3.charts[key] = null;\n            } catch (disposeError) {\n              console.error(\"\\u9500\\u6BC1\\u56FE\\u8868 \".concat(key, \" \\u5931\\u8D25:\"), disposeError);\n            }\n          }\n        }\n      });\n    },\n    // 销毁所有图表实例\n    disposeAllCharts: function disposeAllCharts() {\n      var _this4 = this;\n      Object.keys(this.charts).forEach(function (key) {\n        if (_this4.charts[key]) {\n          try {\n            // 移除所有事件监听器\n            _this4.charts[key].off('click');\n            _this4.charts[key].off('resize');\n            // 销毁图表实例\n            _this4.charts[key].dispose();\n            _this4.charts[key] = null;\n          } catch (error) {\n            console.error(\"\\u9500\\u6BC1\\u56FE\\u8868 \".concat(key, \" \\u5931\\u8D25:\"), error);\n          }\n        }\n      });\n\n      // 清理所有的DOM引用\n      try {\n        // 如果引用存在，则清空相关DOM元素内容\n        if (this.$refs.efficiencyChart) this.$refs.efficiencyChart.innerHTML = '';\n        if (this.$refs.consumptionChart) this.$refs.consumptionChart.innerHTML = '';\n        if (this.$refs.utilizationChart) this.$refs.utilizationChart.innerHTML = '';\n        if (this.$refs.robotChart) this.$refs.robotChart.innerHTML = '';\n        if (this.$refs.peakChart) this.$refs.peakChart.innerHTML = '';\n      } catch (error) {\n        console.error('清理图表DOM引用失败:', error);\n      }\n\n      // 强制执行一次垃圾回收\n      try {\n        if (window.gc) window.gc();\n      } catch (e) {\n        // 大多数浏览器不支持直接调用gc，忽略错误\n      }\n    },\n    initData: function initData() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var stationsResponse, robotsResponse;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return energyEfficiencyApi.getStations();\n            case 3:\n              stationsResponse = _context.sent;\n              _this5.stations = stationsResponse.data;\n\n              // 获取机器人列表\n              _context.next = 7;\n              return energyEfficiencyApi.getRobots();\n            case 7:\n              robotsResponse = _context.sent;\n              _this5.robots = robotsResponse.data;\n\n              // 获取初始数据\n              _this5.fetchKpiData();\n              _this5.fetchChartData();\n              _context.next = 17;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('初始化数据失败:', _context.t0);\n              _this5.$message.error('加载数据失败，请重试');\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 13]]);\n      }))();\n    },\n    // 刷新所有数据\n    refreshData: function refreshData() {\n      this.fetchKpiData();\n      this.fetchChartData();\n    },\n    // 获取KPI数据\n    fetchKpiData: function fetchKpiData() {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var params, response, formatEnergy, formatTime, formatCount, formatChangeRate, energyData, waitTimeData, ordersData;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              params = _this6.getFilterParams();\n              _context2.next = 4;\n              return energyEfficiencyApi.getKpiData(params);\n            case 4:\n              response = _context2.sent;\n              // 格式化能耗值，根据大小选择合适的单位\n              formatEnergy = function formatEnergy(value) {\n                if (value < 1) {\n                  return {\n                    value: (value * 1000).toFixed(0),\n                    unit: 'Wh'\n                  };\n                } else if (value >= 1 && value < 1000) {\n                  return {\n                    value: value.toFixed(2),\n                    unit: 'kWh'\n                  };\n                } else {\n                  return {\n                    value: (value / 1000).toFixed(2),\n                    unit: 'MWh'\n                  };\n                }\n              }; // 格式化时间，大于60分钟转为小时和分钟\n              formatTime = function formatTime(minutes) {\n                if (minutes < 60) {\n                  return {\n                    value: minutes.toFixed(0),\n                    unit: 'min'\n                  };\n                } else {\n                  var hours = Math.floor(minutes / 60);\n                  var mins = Math.round(minutes % 60);\n                  return {\n                    value: \"\".concat(hours, \"h \").concat(mins),\n                    unit: 'min'\n                  };\n                }\n              }; // 格式化次数，大于1000次使用k单位\n              formatCount = function formatCount(count) {\n                if (count < 1000) {\n                  return {\n                    value: count,\n                    unit: '次'\n                  };\n                } else {\n                  return {\n                    value: (count / 1000).toFixed(1),\n                    unit: 'k次'\n                  };\n                }\n              }; // 格式化变化率，统一显示格式\n              formatChangeRate = function formatChangeRate(rate) {\n                // 对极端值进行处理\n                if (!rate && rate !== 0) return \"0.00\";\n                if (!isFinite(rate)) return \"0.00\";\n\n                // 对变化率进行合理限制，避免极端值\n                var limitedRate = rate;\n                if (Math.abs(limitedRate) > 1000) {\n                  limitedRate = limitedRate > 0 ? 999.99 : -999.99;\n                }\n\n                // 统一保留2位小数\n                return limitedRate.toFixed(2);\n              }; // 获取能耗值和单位\n              energyData = formatEnergy(response.data.totalEnergy); // 获取等待时间值和单位\n              waitTimeData = formatTime(response.data.avgWaitTime); // 获取充电次数值和单位\n              ordersData = formatCount(response.data.totalOrders || 0);\n              _this6.kpiData = [{\n                title: '平均充电效率',\n                value: response.data.avgEfficiency.toFixed(2),\n                unit: '%',\n                change: formatChangeRate(response.data.efficiencyChange),\n                trend: response.data.efficiencyChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '总能耗',\n                value: energyData.value,\n                unit: energyData.unit,\n                change: formatChangeRate(response.data.energyChange),\n                trend: response.data.energyChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '充电器利用率',\n                value: response.data.utilization.toFixed(2),\n                unit: '%',\n                change: formatChangeRate(response.data.utilizationChange),\n                trend: response.data.utilizationChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '平均等待时间',\n                value: waitTimeData.value,\n                unit: waitTimeData.unit,\n                change: formatChangeRate(response.data.waitTimeChange),\n                trend: response.data.waitTimeChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '充电成功率',\n                value: response.data.successRate.toFixed(2),\n                unit: '%',\n                change: formatChangeRate(response.data.successRateChange),\n                trend: response.data.successRateChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '总充电次数',\n                value: ordersData.value,\n                unit: ordersData.unit,\n                change: formatChangeRate(response.data.ordersChange || 0),\n                trend: (response.data.ordersChange || 0) >= 0 ? 'up' : 'down'\n              }];\n              _context2.next = 19;\n              break;\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('获取KPI数据失败:', _context2.t0);\n              _this6.$message.error('获取KPI数据失败');\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 15]]);\n      }))();\n    },\n    // 获取图表数据并渲染\n    fetchChartData: function fetchChartData() {\n      var _this7 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var params, chartKey;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              params = _this7.getFilterParams(); // 根据当前选择的图表类型获取数据\n              _context3.t0 = _this7.currentChart;\n              _context3.next = _context3.t0 === 'efficiency' ? 5 : _context3.t0 === 'consumption' ? 8 : _context3.t0 === 'utilization' ? 11 : _context3.t0 === 'robot' ? 14 : _context3.t0 === 'peak' ? 17 : 20;\n              break;\n            case 5:\n              _context3.next = 7;\n              return _this7.renderEfficiencyChart(params);\n            case 7:\n              return _context3.abrupt(\"break\", 20);\n            case 8:\n              _context3.next = 10;\n              return _this7.renderConsumptionChart(params);\n            case 10:\n              return _context3.abrupt(\"break\", 20);\n            case 11:\n              _context3.next = 13;\n              return _this7.renderUtilizationChart(params);\n            case 13:\n              return _context3.abrupt(\"break\", 20);\n            case 14:\n              _context3.next = 16;\n              return _this7.renderRobotChart(params);\n            case 16:\n              return _context3.abrupt(\"break\", 20);\n            case 17:\n              _context3.next = 19;\n              return _this7.renderPeakChart(params);\n            case 19:\n              return _context3.abrupt(\"break\", 20);\n            case 20:\n              _context3.next = 28;\n              break;\n            case 22:\n              _context3.prev = 22;\n              _context3.t1 = _context3[\"catch\"](0);\n              console.error('获取图表数据失败:', _context3.t1);\n              _this7.$message.error('获取图表数据失败');\n\n              // 清理错误的图表实例\n              chartKey = _this7.currentChart;\n              if (_this7.charts[chartKey]) {\n                try {\n                  _this7.charts[chartKey].dispose();\n                  _this7.charts[chartKey] = null;\n                } catch (cleanupError) {\n                  console.error(\"\\u6E05\\u7406\\u56FE\\u8868\\u5931\\u8D25: \".concat(cleanupError));\n                }\n              }\n            case 28:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 22]]);\n      }))();\n    },\n    // 充电效率趋势图\n    renderEfficiencyChart: function renderEfficiencyChart(params) {\n      var _this8 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response, _chart, chart, option, _chart2;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return energyEfficiencyApi.getEfficiencyTrend(params);\n            case 3:\n              response = _context4.sent;\n              if (!(!response.data || !response.data.stations || !response.data.timeline)) {\n                _context4.next = 11;\n                break;\n              }\n              console.error('效率趋势数据异常:', response.data);\n              _context4.next = 8;\n              return _this8.safeInitChart('efficiencyChart', 'efficiency');\n            case 8:\n              _chart = _context4.sent;\n              if (_chart) {\n                _chart.setOption({\n                  title: {\n                    text: '充电效率趋势分析 (暂无数据)',\n                    left: 'center'\n                  }\n                });\n              }\n              return _context4.abrupt(\"return\");\n            case 11:\n              _context4.next = 13;\n              return _this8.safeInitChart('efficiencyChart', 'efficiency');\n            case 13:\n              chart = _context4.sent;\n              if (chart) {\n                _context4.next = 16;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 16:\n              option = {\n                title: {\n                  text: '充电效率趋势分析',\n                  left: 'center',\n                  top: '10px'\n                },\n                tooltip: {\n                  trigger: 'axis'\n                },\n                legend: {\n                  data: response.data.stations.map(function (station) {\n                    return station.name;\n                  }),\n                  selected: response.data.stations.reduce(function (acc, station) {\n                    acc[station.name] = true;\n                    return acc;\n                  }, {}),\n                  top: '40px',\n                  type: 'scroll',\n                  orient: 'horizontal',\n                  selectedMode: false\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  top: '100px',\n                  containLabel: true\n                },\n                xAxis: {\n                  type: 'category',\n                  boundaryGap: false,\n                  data: response.data.timeline\n                },\n                yAxis: {\n                  type: 'value',\n                  name: '充电效率 (%)',\n                  min: 50,\n                  max: 100\n                },\n                series: response.data.stations.map(function (station) {\n                  return {\n                    name: station.name,\n                    type: 'line',\n                    data: station.efficiencyData,\n                    smooth: true\n                  };\n                })\n              };\n              chart.setOption(option);\n\n              // 取消图表的点击事件\n              chart.off('click');\n              _context4.next = 34;\n              break;\n            case 21:\n              _context4.prev = 21;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error('渲染效率趋势图失败:', _context4.t0);\n\n              // 错误情况下，显示错误信息\n              _context4.prev = 24;\n              _context4.next = 27;\n              return _this8.safeInitChart('efficiencyChart', 'efficiency');\n            case 27:\n              _chart2 = _context4.sent;\n              if (_chart2) {\n                _chart2.setOption({\n                  title: {\n                    text: '充电效率趋势分析 (加载失败)',\n                    textStyle: {\n                      color: '#ff0000'\n                    },\n                    left: 'center'\n                  }\n                });\n              }\n              _context4.next = 34;\n              break;\n            case 31:\n              _context4.prev = 31;\n              _context4.t1 = _context4[\"catch\"](24);\n              console.error('显示错误信息失败:', _context4.t1);\n            case 34:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 21], [24, 31]]);\n      }))();\n    },\n    // 能耗分布热力图\n    renderConsumptionChart: function renderConsumptionChart(params) {\n      var _this9 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response, chart, _chart3, consumptionChart, days, hours, i, formattedData, minValue, maxValue, dayIndex, hour, visualMaxValue, pieces, stepCount, step, _i, startValue, endValue, option, _chart4;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              console.log('获取能耗分布数据，参数:', params);\n              _context5.next = 4;\n              return energyEfficiencyApi.getEnergyConsumptionDistribution(params);\n            case 4:\n              response = _context5.sent;\n              console.log('能耗分布数据响应:', response.data);\n\n              // 检查返回的数据\n              if (!(!response.data || !response.data.days || !response.data.data)) {\n                _context5.next = 13;\n                break;\n              }\n              console.error('能耗分布数据异常:', response.data);\n              _context5.next = 10;\n              return _this9.safeInitChart('consumptionChart', 'consumption');\n            case 10:\n              chart = _context5.sent;\n              if (chart) {\n                chart.setOption({\n                  title: {\n                    text: '能耗分布热力图 (暂无数据)',\n                    left: 'center'\n                  }\n                });\n              }\n              return _context5.abrupt(\"return\");\n            case 13:\n              if (!(response.data.days.length === 0 || response.data.data.length === 0)) {\n                _context5.next = 20;\n                break;\n              }\n              console.warn('能耗分布数据为空');\n              _context5.next = 17;\n              return _this9.safeInitChart('consumptionChart', 'consumption');\n            case 17:\n              _chart3 = _context5.sent;\n              if (_chart3) {\n                _chart3.setOption({\n                  title: {\n                    text: '能耗分布热力图 (暂无数据)',\n                    left: 'center'\n                  }\n                });\n              }\n              return _context5.abrupt(\"return\");\n            case 20:\n              console.log('能耗分布数据:', response.data.data);\n\n              // 安全创建图表\n              _context5.next = 23;\n              return _this9.safeInitChart('consumptionChart', 'consumption');\n            case 23:\n              consumptionChart = _context5.sent;\n              if (consumptionChart) {\n                _context5.next = 26;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 26:\n              // 设置容器尺寸\n              if (_this9.$refs.consumptionChart) {\n                _this9.$refs.consumptionChart.style.width = '100%';\n                _this9.$refs.consumptionChart.style.height = '500px';\n\n                // 调整图表大小以适应容器\n                consumptionChart.resize();\n              }\n\n              // 直接使用后端返回的日期作为Y轴\n              days = response.data.days; // 提取所有小时作为X轴（0-23）\n              hours = [];\n              for (i = 0; i < 24; i++) {\n                hours.push(i.toString());\n              }\n\n              // 将API返回的数据转换为ECharts需要的格式 [x索引, y索引, 值]\n              formattedData = []; // 找出数据中的最小值和最大值，用于设置图例刻度\n              minValue = Infinity;\n              maxValue = 0;\n              if (Array.isArray(response.data.data)) {\n                response.data.data.forEach(function (item) {\n                  if (Array.isArray(item) && item.length === 3) {\n                    var day = item[0];\n                    var hour = parseInt(item[1]);\n                    var value = parseFloat(item[2] || 0);\n\n                    // 更新最小值和最大值\n                    if (!isNaN(value)) {\n                      minValue = Math.min(minValue, value);\n                      maxValue = Math.max(maxValue, value);\n                    }\n\n                    // 确保值是有效的数字\n                    if (!isNaN(value) && hour >= 0 && hour < 24) {\n                      // 找到日期在Y轴中的索引\n                      var dayIndex = days.indexOf(day);\n\n                      // 只有当日期在Y轴中存在时才添加数据点\n                      if (dayIndex !== -1) {\n                        formattedData.push([hour, dayIndex, value]);\n                      }\n                    }\n                  }\n                });\n              } else {\n                console.error('能耗数据不是数组格式');\n                // 创建默认数据以避免图表崩溃\n                for (dayIndex = 0; dayIndex < days.length; dayIndex++) {\n                  for (hour = 0; hour < 24; hour++) {\n                    formattedData.push([hour, dayIndex, 0]);\n                  }\n                }\n              }\n              console.log('格式化后的数据点数:', formattedData.length);\n              console.log('数据范围:', minValue, '至', maxValue);\n\n              // 如果没有有效数据，设置默认值避免图表错误\n              if (formattedData.length === 0 || minValue === Infinity) {\n                minValue = 0;\n                maxValue = 100;\n              }\n\n              // 使用后端返回的最大值或计算得到的最大值\n              visualMaxValue = response.data.maxValue || Math.ceil(maxValue) || 100; // 创建均匀分布的刻度值数组\n              pieces = [];\n              stepCount = 10; // 分成10个刻度\n              step = visualMaxValue / stepCount;\n              for (_i = 0; _i < stepCount; _i++) {\n                startValue = _i * step;\n                endValue = (_i + 1) * step;\n                pieces.push({\n                  min: startValue,\n                  max: endValue,\n                  label: \"\".concat(startValue.toFixed(0), \"-\").concat(endValue.toFixed(0))\n                });\n              }\n\n              // 使用简单的配置\n              option = {\n                title: {\n                  text: '能耗分布热力图',\n                  left: 'center'\n                },\n                tooltip: {\n                  position: 'top',\n                  formatter: function formatter(params) {\n                    var hour = params.data[0];\n                    var day = days[params.data[1]];\n                    var value = params.data[2];\n                    return \"\".concat(hour, \":00 - \").concat((parseInt(hour) + 1) % 24, \":00<br>\\u65E5\\u671F: \").concat(day, \"<br>\\u80FD\\u8017: \").concat(value.toFixed(2), \" kWh\");\n                  }\n                },\n                grid: {\n                  height: '70%',\n                  top: '60px',\n                  left: '80px',\n                  right: '30px',\n                  containLabel: true\n                },\n                xAxis: {\n                  type: 'category',\n                  data: hours,\n                  axisLabel: {\n                    formatter: '{value}:00',\n                    interval: function interval(index, value) {\n                      // 每2小时显示一个标签\n                      return index % 2 === 0;\n                    }\n                  }\n                },\n                yAxis: {\n                  type: 'category',\n                  data: days,\n                  axisLabel: {\n                    formatter: function formatter(value) {\n                      var parts = value.split('-');\n                      return parts[1] + '-' + parts[2]; // 只显示月-日\n                    }\n                  }\n                },\n                visualMap: {\n                  type: 'continuous',\n                  min: 0,\n                  max: visualMaxValue,\n                  precision: 0,\n                  calculable: true,\n                  orient: 'horizontal',\n                  left: 'center',\n                  bottom: '5%',\n                  inRange: {\n                    color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\n                  },\n                  // 添加具体的数字刻度\n                  splitNumber: 10,\n                  // 分割段数\n                  formatter: function formatter(value) {\n                    return value.toFixed(0) + ' kWh';\n                  },\n                  textStyle: {\n                    color: '#333'\n                  }\n                },\n                series: [{\n                  name: '能耗 (kWh)',\n                  type: 'heatmap',\n                  data: formattedData,\n                  emphasis: {\n                    itemStyle: {\n                      shadowBlur: 10,\n                      shadowColor: 'rgba(0, 0, 0, 0.5)'\n                    }\n                  }\n                }]\n              }; // 应用配置并渲染\n              consumptionChart.setOption(option);\n              console.log('热力图渲染成功');\n\n              // 取消图表的点击事件\n              consumptionChart.off('click');\n              _context5.next = 61;\n              break;\n            case 48:\n              _context5.prev = 48;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('渲染能耗分布热力图失败:', _context5.t0);\n\n              // 尝试显示错误信息\n              _context5.prev = 51;\n              _context5.next = 54;\n              return _this9.safeInitChart('consumptionChart', 'consumption');\n            case 54:\n              _chart4 = _context5.sent;\n              if (_chart4) {\n                _chart4.setOption({\n                  title: {\n                    text: '能耗分布热力图 (加载失败)',\n                    textStyle: {\n                      color: '#ff0000'\n                    },\n                    left: 'center'\n                  }\n                });\n              }\n              _context5.next = 61;\n              break;\n            case 58:\n              _context5.prev = 58;\n              _context5.t1 = _context5[\"catch\"](51);\n              console.error('显示错误信息失败:', _context5.t1);\n            case 61:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[0, 48], [51, 58]]);\n      }))();\n    },\n    // 充电站利用率对比\n    renderUtilizationChart: function renderUtilizationChart(params) {\n      var _this0 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var response, processedData, option;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return energyEfficiencyApi.getStationUtilization(params);\n            case 3:\n              response = _context6.sent;\n              if (_this0.$refs.utilizationChart) {\n                _context6.next = 7;\n                break;\n              }\n              console.error('利用率图表DOM元素不存在');\n              return _context6.abrupt(\"return\");\n            case 7:\n              if (!(!response.data || !Array.isArray(response.data) || response.data.length === 0)) {\n                _context6.next = 13;\n                break;\n              }\n              console.error('充电站利用率数据异常:', response.data);\n              // 创建没有数据的图表以避免错误\n              if (_this0.charts.utilization) {\n                _this0.charts.utilization.dispose();\n              }\n              _this0.charts.utilization = echarts.init(_this0.$refs.utilizationChart);\n              _this0.charts.utilization.setOption({\n                title: {\n                  text: '充电站利用率对比 (暂无数据)',\n                  left: 'center'\n                }\n              });\n              return _context6.abrupt(\"return\");\n            case 13:\n              // 销毁旧图表实例\n              if (_this0.charts.utilization) {\n                try {\n                  _this0.charts.utilization.dispose();\n                  _this0.charts.utilization = null;\n                } catch (error) {\n                  console.error('销毁旧利用率图表失败:', error);\n                }\n              }\n\n              // 重新创建图表实例\n              _this0.charts.utilization = echarts.init(_this0.$refs.utilizationChart);\n\n              // 数据处理：确保所有数据都是正数，且单位一致\n              processedData = response.data.map(function (item) {\n                return {\n                  stationName: item.stationName || '未知充电站',\n                  busyHours: Math.abs(parseFloat(item.busyHours || 0)),\n                  idleHours: Math.abs(parseFloat(item.idleHours || 0)),\n                  maintenanceHours: Math.abs(parseFloat(item.maintenanceHours || 0)),\n                  errorHours: Math.abs(parseFloat(item.errorHours || 0))\n                };\n              }); // 验证数据总和是否合理，如果总和异常大，则进行归一化处理\n              processedData.forEach(function (item) {\n                var total = item.busyHours + item.idleHours + item.maintenanceHours + item.errorHours;\n                // 如果总时间超过48小时（允许一定误差），则认为数据异常，需要归一化\n                if (total > 48) {\n                  var factor = 24 / total;\n                  item.busyHours *= factor;\n                  item.idleHours *= factor;\n                  item.maintenanceHours *= factor;\n                  item.errorHours *= factor;\n                }\n              });\n              console.log('处理后的充电站利用率数据:', processedData);\n              option = {\n                title: {\n                  text: '充电站利用率对比',\n                  left: 'center'\n                },\n                tooltip: {\n                  trigger: 'axis',\n                  axisPointer: {\n                    type: 'shadow'\n                  },\n                  formatter: function formatter(params) {\n                    var tooltip = params[0].name + '<br/>';\n                    var total = 0;\n                    params.forEach(function (param) {\n                      tooltip += param.seriesName + ': ' + param.value.toFixed(2) + ' 小时<br/>';\n                      total += param.value;\n                    });\n                    tooltip += '<br/>总计: ' + total.toFixed(2) + ' 小时';\n                    return tooltip;\n                  }\n                },\n                legend: {\n                  data: ['忙碌时间', '空闲时间', '维护时间', '故障时间'],\n                  selectedMode: false,\n                  top: '30px'\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  top: '80px',\n                  containLabel: true\n                },\n                xAxis: {\n                  type: 'value',\n                  name: '小时',\n                  min: 0,\n                  max: 24,\n                  axisLabel: {\n                    formatter: '{value} h'\n                  }\n                },\n                yAxis: {\n                  type: 'category',\n                  data: processedData.map(function (item) {\n                    return item.stationName;\n                  })\n                },\n                series: [{\n                  name: '忙碌时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true,\n                    formatter: '{c} h'\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: processedData.map(function (item) {\n                    return parseFloat(item.busyHours.toFixed(2));\n                  })\n                }, {\n                  name: '空闲时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true,\n                    formatter: '{c} h'\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: processedData.map(function (item) {\n                    return parseFloat(item.idleHours.toFixed(2));\n                  })\n                }, {\n                  name: '维护时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true,\n                    formatter: '{c} h'\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: processedData.map(function (item) {\n                    return parseFloat(item.maintenanceHours.toFixed(2));\n                  })\n                }, {\n                  name: '故障时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true,\n                    formatter: '{c} h'\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: processedData.map(function (item) {\n                    return parseFloat(item.errorHours.toFixed(2));\n                  })\n                }]\n              };\n              _this0.charts.utilization.setOption(option);\n\n              // 取消图表的点击事件\n              _this0.charts.utilization.off('click');\n              _context6.next = 27;\n              break;\n            case 23:\n              _context6.prev = 23;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.error('渲染充电站利用率图表失败:', _context6.t0);\n\n              // 错误情况下，显示错误信息\n              if (_this0.$refs.utilizationChart) {\n                if (_this0.charts.utilization) {\n                  _this0.charts.utilization.dispose();\n                }\n                _this0.charts.utilization = echarts.init(_this0.$refs.utilizationChart);\n                _this0.charts.utilization.setOption({\n                  title: {\n                    text: '充电站利用率对比 (加载失败)',\n                    textStyle: {\n                      color: '#ff0000'\n                    },\n                    left: 'center'\n                  }\n                });\n              }\n            case 27:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[0, 23]]);\n      }))();\n    },\n    // 机器人充电行为分析\n    renderRobotChart: function renderRobotChart(params) {\n      var _this1 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return energyEfficiencyApi.getRobotChargingBehavior(params);\n            case 3:\n              response = _context7.sent;\n              if (_this1.$refs.robotChart) {\n                _context7.next = 7;\n                break;\n              }\n              console.error('机器人充电行为图表DOM元素不存在');\n              return _context7.abrupt(\"return\");\n            case 7:\n              if (!(!response.data || !response.data.robots || !Array.isArray(response.data.robots) || response.data.robots.length === 0)) {\n                _context7.next = 13;\n                break;\n              }\n              console.error('机器人充电行为数据异常:', response.data);\n              // 创建空图表以避免错误\n              if (_this1.charts.robot) {\n                _this1.charts.robot.dispose();\n              }\n              _this1.charts.robot = echarts.init(_this1.$refs.robotChart);\n              _this1.charts.robot.setOption({\n                title: {\n                  text: '机器人充电行为分析 (暂无数据)',\n                  left: 'center'\n                }\n              });\n              return _context7.abrupt(\"return\");\n            case 13:\n              // 销毁旧的图表实例\n              if (_this1.charts.robot) {\n                try {\n                  _this1.charts.robot.dispose();\n                  _this1.charts.robot = null;\n                } catch (error) {\n                  console.error('销毁旧机器人充电行为图表失败:', error);\n                }\n              }\n              _this1.charts.robot = echarts.init(_this1.$refs.robotChart);\n              option = {\n                title: {\n                  text: '机器人充电行为分析'\n                },\n                tooltip: {\n                  trigger: 'axis'\n                },\n                legend: {\n                  data: ['充电次数', '平均充电时长', '平均等待时间'],\n                  selectedMode: false\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  containLabel: true\n                },\n                xAxis: [{\n                  type: 'category',\n                  data: response.data.robots.map(function (robot) {\n                    return robot.name;\n                  }),\n                  axisPointer: {\n                    type: 'shadow'\n                  }\n                }],\n                yAxis: [{\n                  type: 'value',\n                  name: '次数',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value}'\n                  }\n                }, {\n                  type: 'value',\n                  name: '时间 (分钟)',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value} min'\n                  }\n                }],\n                series: [{\n                  name: '充电次数',\n                  type: 'bar',\n                  data: response.data.robots.map(function (robot) {\n                    return robot.chargingCount;\n                  })\n                }, {\n                  name: '平均充电时长',\n                  type: 'line',\n                  yAxisIndex: 1,\n                  data: response.data.robots.map(function (robot) {\n                    return robot.avgChargingDuration;\n                  })\n                }, {\n                  name: '平均等待时间',\n                  type: 'line',\n                  yAxisIndex: 1,\n                  data: response.data.robots.map(function (robot) {\n                    return robot.avgWaitingTime;\n                  })\n                }]\n              };\n              _this1.charts.robot.setOption(option);\n\n              // 取消图表的点击事件\n              _this1.charts.robot.off('click');\n              _context7.next = 24;\n              break;\n            case 20:\n              _context7.prev = 20;\n              _context7.t0 = _context7[\"catch\"](0);\n              console.error('渲染机器人充电行为图表失败:', _context7.t0);\n\n              // 错误情况下，显示错误信息\n              if (_this1.$refs.robotChart) {\n                if (_this1.charts.robot) {\n                  _this1.charts.robot.dispose();\n                }\n                _this1.charts.robot = echarts.init(_this1.$refs.robotChart);\n                _this1.charts.robot.setOption({\n                  title: {\n                    text: '机器人充电行为分析 (加载失败)',\n                    textStyle: {\n                      color: '#ff0000'\n                    },\n                    left: 'center'\n                  }\n                });\n              }\n            case 24:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, null, [[0, 20]]);\n      }))();\n    },\n    // 充电高峰期分析\n    renderPeakChart: function renderPeakChart(params) {\n      var _this10 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return energyEfficiencyApi.getChargingPeakAnalysis(params);\n            case 3:\n              response = _context8.sent;\n              if (_this10.$refs.peakChart) {\n                _context8.next = 7;\n                break;\n              }\n              console.error('充电高峰期图表DOM元素不存在');\n              return _context8.abrupt(\"return\");\n            case 7:\n              if (!(!response.data || !response.data.timeSlots || !response.data.requestCounts || !response.data.avgWaitingTimes)) {\n                _context8.next = 13;\n                break;\n              }\n              console.error('充电高峰期数据异常:', response.data);\n              // 创建空图表以避免错误\n              if (_this10.charts.peak) {\n                _this10.charts.peak.dispose();\n              }\n              _this10.charts.peak = echarts.init(_this10.$refs.peakChart);\n              _this10.charts.peak.setOption({\n                title: {\n                  text: '充电高峰期分析 (暂无数据)',\n                  left: 'center'\n                }\n              });\n              return _context8.abrupt(\"return\");\n            case 13:\n              // 销毁旧的图表实例\n              if (_this10.charts.peak) {\n                try {\n                  _this10.charts.peak.dispose();\n                  _this10.charts.peak = null;\n                } catch (error) {\n                  console.error('销毁旧充电高峰期图表失败:', error);\n                }\n              }\n              _this10.charts.peak = echarts.init(_this10.$refs.peakChart);\n              option = {\n                title: {\n                  text: '充电高峰期分析'\n                },\n                tooltip: {\n                  trigger: 'axis',\n                  axisPointer: {\n                    type: 'shadow'\n                  }\n                },\n                legend: {\n                  data: ['充电请求数', '平均等待时间'],\n                  selectedMode: false\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  containLabel: true\n                },\n                xAxis: [{\n                  type: 'category',\n                  data: response.data.timeSlots,\n                  axisLabel: {\n                    formatter: '{value}时'\n                  }\n                }],\n                yAxis: [{\n                  type: 'value',\n                  name: '请求数',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value}'\n                  }\n                }, {\n                  type: 'value',\n                  name: '等待时间 (分钟)',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value} min'\n                  }\n                }],\n                series: [{\n                  name: '充电请求数',\n                  type: 'bar',\n                  data: response.data.requestCounts\n                }, {\n                  name: '平均等待时间',\n                  type: 'line',\n                  yAxisIndex: 1,\n                  data: response.data.avgWaitingTimes\n                }]\n              };\n              _this10.charts.peak.setOption(option);\n\n              // 取消图表的点击事件\n              _this10.charts.peak.off('click');\n              _context8.next = 24;\n              break;\n            case 20:\n              _context8.prev = 20;\n              _context8.t0 = _context8[\"catch\"](0);\n              console.error('渲染充电高峰期图表失败:', _context8.t0);\n\n              // 错误情况下，显示错误信息\n              if (_this10.$refs.peakChart) {\n                if (_this10.charts.peak) {\n                  _this10.charts.peak.dispose();\n                }\n                _this10.charts.peak = echarts.init(_this10.$refs.peakChart);\n                _this10.charts.peak.setOption({\n                  title: {\n                    text: '充电高峰期分析 (加载失败)',\n                    textStyle: {\n                      color: '#ff0000'\n                    },\n                    left: 'center'\n                  }\n                });\n              }\n            case 24:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, null, [[0, 20]]);\n      }))();\n    },\n    // 获取筛选参数\n    getFilterParams: function getFilterParams() {\n      return {\n        startDate: this.dateRange[0] ? this.dateRange[0].toISOString() : null,\n        endDate: this.dateRange[1] ? this.dateRange[1].toISOString() : null,\n        stationIds: this.selectedStations.length > 0 ? this.selectedStations : null,\n        robotIds: this.selectedRobots.length > 0 ? this.selectedRobots : null\n      };\n    },\n    // 处理图表切换\n    handleChartChange: function handleChartChange(chartType) {\n      var _this11 = this;\n      var titles = {\n        efficiency: '充电效率趋势分析',\n        consumption: '能耗分布热力图',\n        utilization: '充电站利用率对比',\n        robot: '机器人充电行为分析',\n        peak: '充电高峰期分析'\n      };\n      this.currentChartTitle = titles[chartType];\n\n      // 在切换图表前先清理旧图表实例，避免内存泄漏和DOM冲突\n      if (this.charts[this.currentChart]) {\n        try {\n          // 移除所有事件监听器\n          this.charts[this.currentChart].off();\n          this.charts[this.currentChart].dispose();\n          this.charts[this.currentChart] = null;\n        } catch (error) {\n          console.error(\"\\u6E05\\u7406\\u56FE\\u8868\\u5931\\u8D25: \".concat(error));\n        }\n      }\n\n      // 使用nextTick确保DOM已更新\n      this.$nextTick(function () {\n        _this11.fetchChartData();\n      });\n    },\n    // 增强版创建图表函数，包含额外的安全检查\n    safeInitChart: function safeInitChart(refName, chartKey) {\n      var _this12 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              if (!(!_this12.$refs[refName] || !document.body.contains(_this12.$refs[refName]))) {\n                _context9.next = 3;\n                break;\n              }\n              console.error(\"\".concat(refName, \" DOM\\u5143\\u7D20\\u4E0D\\u5B58\\u5728\\u6216\\u5DF2\\u4ECE\\u6587\\u6863\\u4E2D\\u79FB\\u9664\"));\n              return _context9.abrupt(\"return\", null);\n            case 3:\n              // 销毁旧的图表实例\n              if (_this12.charts[chartKey]) {\n                try {\n                  _this12.charts[chartKey].dispose();\n                  _this12.charts[chartKey] = null;\n                } catch (error) {\n                  console.error(\"\\u9500\\u6BC1\\u65E7 \".concat(chartKey, \" \\u56FE\\u8868\\u5931\\u8D25:\"), error);\n                }\n              }\n              _context9.prev = 4;\n              _context9.next = 7;\n              return _this12.$nextTick();\n            case 7:\n              if (!(!_this12.$refs[refName] || !document.body.contains(_this12.$refs[refName]))) {\n                _context9.next = 10;\n                break;\n              }\n              console.error(\"\".concat(refName, \" DOM\\u5143\\u7D20\\u5728DOM\\u66F4\\u65B0\\u540E\\u5DF2\\u4E0D\\u5B58\\u5728\\uFF0C\\u65E0\\u6CD5\\u521B\\u5EFA\\u56FE\\u8868\"));\n              return _context9.abrupt(\"return\", null);\n            case 10:\n              // 创建图表实例\n              _this12.charts[chartKey] = echarts.init(_this12.$refs[refName]);\n              return _context9.abrupt(\"return\", _this12.charts[chartKey]);\n            case 14:\n              _context9.prev = 14;\n              _context9.t0 = _context9[\"catch\"](4);\n              console.error(\"\\u521B\\u5EFA \".concat(chartKey, \" \\u56FE\\u8868\\u5931\\u8D25:\"), _context9.t0);\n              return _context9.abrupt(\"return\", null);\n            case 18:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, null, [[4, 14]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["echarts","energyEfficiencyApi","formatDateTime","calculateDuration","ArrowUp","ArrowDown","name","components","data","dateRange","Date","getTime","selectedStations","selectedRobots","stations","robots","currentChart","currentChartTitle","charts","efficiency","consumption","utilization","robot","peak","kpiData","title","value","unit","change","trend","mounted","initData","window","addEventListener","handleResize","$root","$on","handleStationDataChanged","handleStationPreDelete","forceRefreshCharts","e","console","error","beforeUnmount","disposeAllCharts","$refs","efficiencyChart","innerHTML","consumptionChart","utilizationChart","robotChart","peakChart","removeEventListener","$off","methods","_this","log","$nextTick","fetchChartData","stationId","concat","_this2","_this3","Object","keys","forEach","key","resize","dispose","disposeError","_this4","off","gc","_this5","_asyncToGenerator","_regeneratorRuntime","mark","_callee","stationsResponse","robotsResponse","wrap","_callee$","_context","prev","next","getStations","sent","getRobots","fetchKpiData","t0","$message","stop","refreshData","_this6","_callee2","params","response","formatEnergy","formatTime","formatCount","formatChangeRate","energyData","waitTimeData","ordersData","_callee2$","_context2","getFilterParams","getKpiData","toFixed","minutes","hours","Math","floor","mins","round","count","rate","isFinite","limitedRate","abs","totalEnergy","avgWaitTime","totalOrders","avgEfficiency","efficiencyChange","energyChange","utilizationChange","waitTimeChange","successRate","successRateChange","ordersChange","_this7","_callee3","chartKey","_callee3$","_context3","renderEfficiencyChart","abrupt","renderConsumptionChart","renderUtilizationChart","renderRobotChart","renderPeakChart","t1","cleanupError","_this8","_callee4","_chart","chart","option","_chart2","_callee4$","_context4","getEfficiencyTrend","timeline","safeInitChart","setOption","text","left","top","tooltip","trigger","legend","map","station","selected","reduce","acc","type","orient","selectedMode","grid","right","bottom","containLabel","xAxis","boundaryGap","yAxis","min","max","series","efficiencyData","smooth","textStyle","color","_this9","_callee5","_chart3","days","i","formattedData","minValue","maxValue","dayIndex","hour","visualMaxValue","pieces","stepCount","step","_i","startValue","endValue","_chart4","_callee5$","_context5","getEnergyConsumptionDistribution","length","warn","style","width","height","push","toString","Infinity","Array","isArray","item","day","parseInt","parseFloat","isNaN","indexOf","ceil","label","position","formatter","axisLabel","interval","index","parts","split","visualMap","precision","calculable","inRange","splitNumber","emphasis","itemStyle","shadowBlur","shadowColor","_this0","_callee6","processedData","_callee6$","_context6","getStationUtilization","init","stationName","busyHours","idleHours","maintenanceHours","errorHours","total","factor","axisPointer","param","seriesName","stack","show","focus","_this1","_callee7","_callee7$","_context7","getRobotChargingBehavior","chargingCount","yAxisIndex","avgChargingDuration","avgWaitingTime","_this10","_callee8","_callee8$","_context8","getChargingPeakAnalysis","timeSlots","requestCounts","avgWaitingTimes","startDate","toISOString","endDate","stationIds","robotIds","handleChartChange","chartType","_this11","titles","refName","_this12","_callee9","_callee9$","_context9","document","body","contains"],"sources":["D:\\software_data\\Project\\Y0527\\CODE_BAK\\frontend\\src\\views\\EnergyEfficiency.vue"],"sourcesContent":["<template>\r\n  <div class=\"energy-efficiency-analysis\">\r\n    <!-- KPI指标卡片 -->\r\n    <el-row :gutter=\"20\" class=\"kpi-container\">\r\n      <el-col :span=\"4\" v-for=\"(kpi, index) in kpiData\" :key=\"index\">\r\n        <el-card class=\"kpi-card\">\r\n          <div class=\"kpi-title\">{{ kpi.title }}</div>\r\n          <div class=\"kpi-value\">\r\n            <span class=\"value-number\">{{ kpi.value }}</span><span class=\"value-unit\">{{ kpi.unit }}</span>\r\n          </div>\r\n          <div class=\"kpi-change\" :class=\"kpi.trend\">\r\n            <el-icon v-if=\"kpi.trend === 'up'\"><ArrowUp /></el-icon>\r\n            <el-icon v-else><ArrowDown /></el-icon>\r\n            {{ kpi.change }}%\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 分析图表区域 -->\r\n    <el-card class=\"chart-container\">\r\n      <div class=\"chart-header\">\r\n        <h3>{{ currentChartTitle }}</h3>\r\n        <el-radio-group v-model=\"currentChart\" @change=\"handleChartChange\">\r\n          <el-radio-button :value=\"'efficiency'\">充电效率趋势</el-radio-button>\r\n          <el-radio-button :value=\"'consumption'\">能耗分布</el-radio-button>\r\n          <el-radio-button :value=\"'utilization'\">充电站利用率</el-radio-button>\r\n          <el-radio-button :value=\"'robot'\">机器人充电分析</el-radio-button>\r\n          <el-radio-button :value=\"'peak'\">充电高峰期</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n      <div class=\"chart-content\">\r\n        <!-- 不同图表的容器 -->\r\n        <div v-show=\"currentChart === 'efficiency'\" class=\"chart-item\">\r\n          <div ref=\"efficiencyChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'consumption'\" class=\"chart-item\">\r\n          <div ref=\"consumptionChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'utilization'\" class=\"chart-item\">\r\n          <div ref=\"utilizationChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'robot'\" class=\"chart-item\">\r\n          <div ref=\"robotChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'peak'\" class=\"chart-item\">\r\n          <div ref=\"peakChart\" class=\"chart\"></div>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport energyEfficiencyApi from '@/api/energyEfficiency';\r\nimport { formatDateTime, calculateDuration } from '@/utils/dateTime';\r\nimport { ArrowUp, ArrowDown } from '@element-plus/icons-vue';\r\n\r\nexport default {\r\n  name: 'EnergyEfficiencyAnalysis',\r\n  components: {\r\n    ArrowUp,\r\n    ArrowDown\r\n  },\r\n  data() {\r\n    return {\r\n      // 固定的默认筛选条件（不再显示在UI上）\r\n      dateRange: [new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000), new Date()],\r\n      selectedStations: [],\r\n      selectedRobots: [],\r\n      \r\n      // 数据列表\r\n      stations: [],\r\n      robots: [],\r\n      \r\n      // 图表相关\r\n      currentChart: 'efficiency',\r\n      currentChartTitle: '充电效率趋势分析',\r\n      charts: {\r\n        efficiency: null,\r\n        consumption: null,\r\n        utilization: null,\r\n        robot: null,\r\n        peak: null\r\n      },\r\n      \r\n      // KPI数据\r\n      kpiData: [\r\n        { title: '平均充电效率', value: 0, unit: '%', change: 0, trend: 'up' },\r\n        { title: '总能耗', value: 0, unit: 'kWh', change: 0, trend: 'up' },\r\n        { title: '充电器利用率', value: 0, unit: '%', change: 0, trend: 'up' },\r\n        { title: '平均等待时间', value: 0, unit: 'min', change: 0, trend: 'down' },\r\n        { title: '充电成功率', value: 0, unit: '%', change: 0, trend: 'up' },\r\n        { title: '总充电次数', value: 0, unit: '次', change: 0, trend: 'up' }\r\n      ]\r\n    };\r\n  },\r\n  \r\n  mounted() {\r\n    this.initData();\r\n    \r\n    // 添加窗口resize监听器，确保图表大小适应窗口变化\r\n    window.addEventListener('resize', this.handleResize);\r\n    \r\n    // 监听充电站数据变化事件\r\n    try {\r\n      if (this.$root && this.$root.$on) {\r\n        this.$root.$on('station-data-changed', this.handleStationDataChanged);\r\n        // 监听充电站即将删除的事件，提前清理资源\r\n        this.$root.$on('station-pre-delete', this.handleStationPreDelete);\r\n        // 监听强制刷新图表的事件\r\n        this.$root.$on('force-refresh-charts', this.forceRefreshCharts);\r\n      }\r\n    } catch (e) {\r\n      console.error('注册全局事件监听失败:', e);\r\n    }\r\n  },\r\n  \r\n  beforeUnmount() {\r\n    // 先清理所有图表资源\r\n    this.disposeAllCharts();\r\n    \r\n    // 清空所有DOM引用\r\n    try {\r\n      if (this.$refs.efficiencyChart) this.$refs.efficiencyChart.innerHTML = '';\r\n      if (this.$refs.consumptionChart) this.$refs.consumptionChart.innerHTML = '';\r\n      if (this.$refs.utilizationChart) this.$refs.utilizationChart.innerHTML = '';\r\n      if (this.$refs.robotChart) this.$refs.robotChart.innerHTML = '';\r\n      if (this.$refs.peakChart) this.$refs.peakChart.innerHTML = '';\r\n    } catch (error) {\r\n      console.error('清理图表DOM引用失败:', error);\r\n    }\r\n    \r\n    // 移除resize监听器\r\n    window.removeEventListener('resize', this.handleResize);\r\n    \r\n    // 移除充电站数据变化事件监听\r\n    try {\r\n      if (this.$root && this.$root.$off) {\r\n        this.$root.$off('station-data-changed', this.handleStationDataChanged);\r\n        this.$root.$off('station-pre-delete', this.handleStationPreDelete);\r\n        this.$root.$off('force-refresh-charts', this.forceRefreshCharts);\r\n      }\r\n    } catch (e) {\r\n      console.error('移除全局事件监听失败:', e);\r\n    }\r\n  },\r\n  \r\n  methods: {\r\n    // 强制刷新所有图表\r\n    forceRefreshCharts() {\r\n      console.log('接收到强制刷新图表的请求');\r\n      // 先清理所有现有图表\r\n      this.disposeAllCharts();\r\n      \r\n      // 清空DOM内容\r\n      try {\r\n        if (this.$refs.efficiencyChart) this.$refs.efficiencyChart.innerHTML = '';\r\n        if (this.$refs.consumptionChart) this.$refs.consumptionChart.innerHTML = '';\r\n        if (this.$refs.utilizationChart) this.$refs.utilizationChart.innerHTML = '';\r\n        if (this.$refs.robotChart) this.$refs.robotChart.innerHTML = '';\r\n        if (this.$refs.peakChart) this.$refs.peakChart.innerHTML = '';\r\n      } catch (error) {\r\n        console.error('清理图表DOM引用失败:', error);\r\n      }\r\n      \r\n      // 等待DOM更新后重新初始化\r\n      this.$nextTick(() => {\r\n        // 重新获取数据并渲染当前选中的图表\r\n        this.fetchChartData();\r\n      });\r\n    },\r\n    \r\n    // 处理充电站即将删除的事件\r\n    handleStationPreDelete(stationId) {\r\n      console.log(`充电站 ${stationId} 即将被删除，提前清理资源`);\r\n      // 立即清理所有图表实例\r\n      this.disposeAllCharts();\r\n      \r\n      // 清空DOM内容，确保没有悬挂的观察者\r\n      try {\r\n        if (this.$refs.efficiencyChart) this.$refs.efficiencyChart.innerHTML = '';\r\n        if (this.$refs.consumptionChart) this.$refs.consumptionChart.innerHTML = '';\r\n        if (this.$refs.utilizationChart) this.$refs.utilizationChart.innerHTML = '';\r\n        if (this.$refs.robotChart) this.$refs.robotChart.innerHTML = '';\r\n        if (this.$refs.peakChart) this.$refs.peakChart.innerHTML = '';\r\n      } catch (error) {\r\n        console.error('清理图表DOM引用失败:', error);\r\n      }\r\n    },\r\n    \r\n    // 处理充电站数据变化事件\r\n    handleStationDataChanged() {\r\n      console.log('检测到充电站数据变化，刷新图表');\r\n      // 先清理所有图表实例\r\n      this.disposeAllCharts();\r\n      // 然后重新获取数据并渲染\r\n      this.$nextTick(() => {\r\n        this.initData();\r\n      });\r\n    },\r\n    \r\n    // 处理窗口调整大小事件\r\n    handleResize() {\r\n      // 调整所有已创建的图表\r\n      Object.keys(this.charts).forEach(key => {\r\n        if (this.charts[key]) {\r\n          try {\r\n            this.charts[key].resize();\r\n          } catch (error) {\r\n            console.error(`调整图表 ${key} 大小失败:`, error);\r\n            // 如果调整大小失败，尝试销毁图表以避免进一步的错误\r\n            try {\r\n              this.charts[key].dispose();\r\n              this.charts[key] = null;\r\n            } catch (disposeError) {\r\n              console.error(`销毁图表 ${key} 失败:`, disposeError);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n    \r\n    // 销毁所有图表实例\r\n    disposeAllCharts() {\r\n      Object.keys(this.charts).forEach(key => {\r\n        if (this.charts[key]) {\r\n          try {\r\n            // 移除所有事件监听器\r\n            this.charts[key].off('click');\r\n            this.charts[key].off('resize');\r\n            // 销毁图表实例\r\n            this.charts[key].dispose();\r\n            this.charts[key] = null;\r\n          } catch (error) {\r\n            console.error(`销毁图表 ${key} 失败:`, error);\r\n          }\r\n        }\r\n      });\r\n      \r\n      // 清理所有的DOM引用\r\n      try {\r\n        // 如果引用存在，则清空相关DOM元素内容\r\n        if (this.$refs.efficiencyChart) this.$refs.efficiencyChart.innerHTML = '';\r\n        if (this.$refs.consumptionChart) this.$refs.consumptionChart.innerHTML = '';\r\n        if (this.$refs.utilizationChart) this.$refs.utilizationChart.innerHTML = '';\r\n        if (this.$refs.robotChart) this.$refs.robotChart.innerHTML = '';\r\n        if (this.$refs.peakChart) this.$refs.peakChart.innerHTML = '';\r\n      } catch (error) {\r\n        console.error('清理图表DOM引用失败:', error);\r\n      }\r\n      \r\n      // 强制执行一次垃圾回收\r\n      try {\r\n        if (window.gc) window.gc();\r\n      } catch (e) {\r\n        // 大多数浏览器不支持直接调用gc，忽略错误\r\n      }\r\n    },\r\n    \r\n    async initData() {\r\n      try {\r\n        // 获取充电站列表\r\n        const stationsResponse = await energyEfficiencyApi.getStations();\r\n        this.stations = stationsResponse.data;\r\n        \r\n        // 获取机器人列表\r\n        const robotsResponse = await energyEfficiencyApi.getRobots();\r\n        this.robots = robotsResponse.data;\r\n        \r\n        // 获取初始数据\r\n        this.fetchKpiData();\r\n        this.fetchChartData();\r\n      } catch (error) {\r\n        console.error('初始化数据失败:', error);\r\n        this.$message.error('加载数据失败，请重试');\r\n      }\r\n    },\r\n    \r\n    // 刷新所有数据\r\n    refreshData() {\r\n      this.fetchKpiData();\r\n      this.fetchChartData();\r\n    },\r\n    \r\n    // 获取KPI数据\r\n    async fetchKpiData() {\r\n      try {\r\n        const params = this.getFilterParams();\r\n        const response = await energyEfficiencyApi.getKpiData(params);\r\n        \r\n        // 格式化能耗值，根据大小选择合适的单位\r\n        const formatEnergy = (value) => {\r\n          if (value < 1) {\r\n            return { value: (value * 1000).toFixed(0), unit: 'Wh' };\r\n          } else if (value >= 1 && value < 1000) {\r\n            return { value: value.toFixed(2), unit: 'kWh' };\r\n          } else {\r\n            return { value: (value / 1000).toFixed(2), unit: 'MWh' };\r\n          }\r\n        };\r\n        \r\n        // 格式化时间，大于60分钟转为小时和分钟\r\n        const formatTime = (minutes) => {\r\n          if (minutes < 60) {\r\n            return { value: minutes.toFixed(0), unit: 'min' };\r\n          } else {\r\n            const hours = Math.floor(minutes / 60);\r\n            const mins = Math.round(minutes % 60);\r\n            return { value: `${hours}h ${mins}`, unit: 'min' };\r\n          }\r\n        };\r\n        \r\n        // 格式化次数，大于1000次使用k单位\r\n        const formatCount = (count) => {\r\n          if (count < 1000) {\r\n            return { value: count, unit: '次' };\r\n          } else {\r\n            return { value: (count / 1000).toFixed(1), unit: 'k次' };\r\n          }\r\n        };\r\n        \r\n        // 格式化变化率，统一显示格式\r\n        const formatChangeRate = (rate) => {\r\n          // 对极端值进行处理\r\n          if (!rate && rate !== 0) return \"0.00\";\r\n          if (!isFinite(rate)) return \"0.00\";\r\n          \r\n          // 对变化率进行合理限制，避免极端值\r\n          let limitedRate = rate;\r\n          if (Math.abs(limitedRate) > 1000) {\r\n            limitedRate = (limitedRate > 0) ? 999.99 : -999.99;\r\n          }\r\n          \r\n          // 统一保留2位小数\r\n          return limitedRate.toFixed(2);\r\n        };\r\n        \r\n        // 获取能耗值和单位\r\n        const energyData = formatEnergy(response.data.totalEnergy);\r\n        // 获取等待时间值和单位\r\n        const waitTimeData = formatTime(response.data.avgWaitTime);\r\n        // 获取充电次数值和单位\r\n        const ordersData = formatCount(response.data.totalOrders || 0);\r\n        \r\n        this.kpiData = [\r\n          { \r\n            title: '平均充电效率', \r\n            value: response.data.avgEfficiency.toFixed(2), \r\n            unit: '%', \r\n            change: formatChangeRate(response.data.efficiencyChange),\r\n            trend: response.data.efficiencyChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '总能耗', \r\n            value: energyData.value, \r\n            unit: energyData.unit, \r\n            change: formatChangeRate(response.data.energyChange),\r\n            trend: response.data.energyChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '充电器利用率', \r\n            value: response.data.utilization.toFixed(2), \r\n            unit: '%', \r\n            change: formatChangeRate(response.data.utilizationChange),\r\n            trend: response.data.utilizationChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '平均等待时间', \r\n            value: waitTimeData.value, \r\n            unit: waitTimeData.unit, \r\n            change: formatChangeRate(response.data.waitTimeChange),\r\n            trend: response.data.waitTimeChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '充电成功率', \r\n            value: response.data.successRate.toFixed(2), \r\n            unit: '%', \r\n            change: formatChangeRate(response.data.successRateChange),\r\n            trend: response.data.successRateChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '总充电次数', \r\n            value: ordersData.value, \r\n            unit: ordersData.unit, \r\n            change: formatChangeRate(response.data.ordersChange || 0),\r\n            trend: (response.data.ordersChange || 0) >= 0 ? 'up' : 'down' \r\n          }\r\n        ];\r\n      } catch (error) {\r\n        console.error('获取KPI数据失败:', error);\r\n        this.$message.error('获取KPI数据失败');\r\n      }\r\n    },\r\n    \r\n    // 获取图表数据并渲染\r\n    async fetchChartData() {\r\n      try {\r\n        const params = this.getFilterParams();\r\n        \r\n        // 根据当前选择的图表类型获取数据\r\n        switch (this.currentChart) {\r\n          case 'efficiency':\r\n            await this.renderEfficiencyChart(params);\r\n            break;\r\n          case 'consumption':\r\n            await this.renderConsumptionChart(params);\r\n            break;\r\n          case 'utilization':\r\n            await this.renderUtilizationChart(params);\r\n            break;\r\n          case 'robot':\r\n            await this.renderRobotChart(params);\r\n            break;\r\n          case 'peak':\r\n            await this.renderPeakChart(params);\r\n            break;\r\n        }\r\n      } catch (error) {\r\n        console.error('获取图表数据失败:', error);\r\n        this.$message.error('获取图表数据失败');\r\n        \r\n        // 清理错误的图表实例\r\n        const chartKey = this.currentChart;\r\n        if (this.charts[chartKey]) {\r\n          try {\r\n            this.charts[chartKey].dispose();\r\n            this.charts[chartKey] = null;\r\n          } catch (cleanupError) {\r\n            console.error(`清理图表失败: ${cleanupError}`);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 充电效率趋势图\r\n    async renderEfficiencyChart(params) {\r\n      try {\r\n        const response = await energyEfficiencyApi.getEfficiencyTrend(params);\r\n        \r\n        // 检查返回的数据\r\n        if (!response.data || !response.data.stations || !response.data.timeline) {\r\n          console.error('效率趋势数据异常:', response.data);\r\n          const chart = await this.safeInitChart('efficiencyChart', 'efficiency');\r\n          if (chart) {\r\n            chart.setOption({\r\n              title: {\r\n                text: '充电效率趋势分析 (暂无数据)',\r\n                left: 'center'\r\n              }\r\n            });\r\n          }\r\n          return;\r\n        }\r\n        \r\n        // 安全创建图表\r\n        const chart = await this.safeInitChart('efficiencyChart', 'efficiency');\r\n        if (!chart) return;\r\n      \r\n        const option = {\r\n          title: {\r\n            text: '充电效率趋势分析',\r\n            left: 'center',\r\n            top: '10px'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          },\r\n          legend: {\r\n            data: response.data.stations.map(station => station.name),\r\n            selected: response.data.stations.reduce((acc, station) => {\r\n              acc[station.name] = true;\r\n              return acc;\r\n            }, {}),\r\n            top: '40px',\r\n            type: 'scroll',\r\n            orient: 'horizontal',\r\n            selectedMode: false\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            top: '100px',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: response.data.timeline\r\n          },\r\n          yAxis: {\r\n            type: 'value',\r\n            name: '充电效率 (%)',\r\n            min: 50,\r\n            max: 100\r\n          },\r\n          series: response.data.stations.map(station => ({\r\n            name: station.name,\r\n            type: 'line',\r\n            data: station.efficiencyData,\r\n            smooth: true\r\n          }))\r\n        };\r\n        \r\n        chart.setOption(option);\r\n        \r\n        // 取消图表的点击事件\r\n        chart.off('click');\r\n      } catch (error) {\r\n        console.error('渲染效率趋势图失败:', error);\r\n        \r\n        // 错误情况下，显示错误信息\r\n        try {\r\n          const chart = await this.safeInitChart('efficiencyChart', 'efficiency');\r\n          if (chart) {\r\n            chart.setOption({\r\n              title: {\r\n                text: '充电效率趋势分析 (加载失败)',\r\n                textStyle: { color: '#ff0000' },\r\n                left: 'center'\r\n              }\r\n            });\r\n          }\r\n        } catch (e) {\r\n          console.error('显示错误信息失败:', e);\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 能耗分布热力图\r\n    async renderConsumptionChart(params) {\r\n      try {\r\n        console.log('获取能耗分布数据，参数:', params);\r\n        const response = await energyEfficiencyApi.getEnergyConsumptionDistribution(params);\r\n        console.log('能耗分布数据响应:', response.data);\r\n        \r\n        // 检查返回的数据\r\n        if (!response.data || !response.data.days || !response.data.data) {\r\n          console.error('能耗分布数据异常:', response.data);\r\n          const chart = await this.safeInitChart('consumptionChart', 'consumption');\r\n          if (chart) {\r\n            chart.setOption({\r\n              title: {\r\n                text: '能耗分布热力图 (暂无数据)',\r\n                left: 'center'\r\n              }\r\n            });\r\n          }\r\n          return;\r\n        }\r\n        \r\n        // 检查数据是否为空数组\r\n        if (response.data.days.length === 0 || response.data.data.length === 0) {\r\n          console.warn('能耗分布数据为空');\r\n          const chart = await this.safeInitChart('consumptionChart', 'consumption');\r\n          if (chart) {\r\n            chart.setOption({\r\n              title: {\r\n                text: '能耗分布热力图 (暂无数据)',\r\n                left: 'center'\r\n              }\r\n            });\r\n          }\r\n          return;\r\n        }\r\n        \r\n        console.log('能耗分布数据:', response.data.data);\r\n        \r\n        // 安全创建图表\r\n        const consumptionChart = await this.safeInitChart('consumptionChart', 'consumption');\r\n        if (!consumptionChart) return;\r\n        \r\n        // 设置容器尺寸\r\n        if (this.$refs.consumptionChart) {\r\n          this.$refs.consumptionChart.style.width = '100%';\r\n          this.$refs.consumptionChart.style.height = '500px';\r\n          \r\n          // 调整图表大小以适应容器\r\n          consumptionChart.resize();\r\n        }\r\n        \r\n        // 直接使用后端返回的日期作为Y轴\r\n        const days = response.data.days;\r\n        \r\n        // 提取所有小时作为X轴（0-23）\r\n        const hours = [];\r\n        for (let i = 0; i < 24; i++) {\r\n          hours.push(i.toString());\r\n        }\r\n        \r\n        // 将API返回的数据转换为ECharts需要的格式 [x索引, y索引, 值]\r\n        const formattedData = [];\r\n        \r\n        // 找出数据中的最小值和最大值，用于设置图例刻度\r\n        let minValue = Infinity;\r\n        let maxValue = 0;\r\n        \r\n        if (Array.isArray(response.data.data)) {\r\n          response.data.data.forEach(item => {\r\n            if (Array.isArray(item) && item.length === 3) {\r\n              const day = item[0];\r\n              const hour = parseInt(item[1]);\r\n              const value = parseFloat(item[2] || 0);\r\n              \r\n              // 更新最小值和最大值\r\n              if (!isNaN(value)) {\r\n                minValue = Math.min(minValue, value);\r\n                maxValue = Math.max(maxValue, value);\r\n              }\r\n              \r\n              // 确保值是有效的数字\r\n              if (!isNaN(value) && hour >= 0 && hour < 24) {\r\n                // 找到日期在Y轴中的索引\r\n                const dayIndex = days.indexOf(day);\r\n                \r\n                // 只有当日期在Y轴中存在时才添加数据点\r\n                if (dayIndex !== -1) {\r\n                  formattedData.push([hour, dayIndex, value]);\r\n                }\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          console.error('能耗数据不是数组格式');\r\n          // 创建默认数据以避免图表崩溃\r\n          for (let dayIndex = 0; dayIndex < days.length; dayIndex++) {\r\n            for (let hour = 0; hour < 24; hour++) {\r\n              formattedData.push([hour, dayIndex, 0]);\r\n            }\r\n          }\r\n        }\r\n        \r\n        console.log('格式化后的数据点数:', formattedData.length);\r\n        console.log('数据范围:', minValue, '至', maxValue);\r\n        \r\n        // 如果没有有效数据，设置默认值避免图表错误\r\n        if (formattedData.length === 0 || minValue === Infinity) {\r\n          minValue = 0;\r\n          maxValue = 100;\r\n        }\r\n        \r\n        // 使用后端返回的最大值或计算得到的最大值\r\n        const visualMaxValue = response.data.maxValue || Math.ceil(maxValue) || 100;\r\n        \r\n        // 创建均匀分布的刻度值数组\r\n        const pieces = [];\r\n        const stepCount = 10; // 分成10个刻度\r\n        const step = visualMaxValue / stepCount;\r\n        \r\n        for (let i = 0; i < stepCount; i++) {\r\n          const startValue = i * step;\r\n          const endValue = (i + 1) * step;\r\n          pieces.push({\r\n            min: startValue,\r\n            max: endValue,\r\n            label: `${startValue.toFixed(0)}-${endValue.toFixed(0)}`\r\n          });\r\n        }\r\n        \r\n        // 使用简单的配置\r\n        const option = {\r\n          title: {\r\n            text: '能耗分布热力图',\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            position: 'top',\r\n            formatter: function (params) {\r\n              const hour = params.data[0];\r\n              const day = days[params.data[1]];\r\n              const value = params.data[2];\r\n              return `${hour}:00 - ${(parseInt(hour) + 1) % 24}:00<br>日期: ${day}<br>能耗: ${value.toFixed(2)} kWh`;\r\n            }\r\n          },\r\n          grid: {\r\n            height: '70%',\r\n            top: '60px',\r\n            left: '80px',\r\n            right: '30px',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: hours,\r\n            axisLabel: {\r\n              formatter: '{value}:00',\r\n              interval: function (index, value) {\r\n                // 每2小时显示一个标签\r\n                return index % 2 === 0;\r\n              }\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            data: days,\r\n            axisLabel: {\r\n              formatter: function (value) {\r\n                const parts = value.split('-');\r\n                return parts[1] + '-' + parts[2]; // 只显示月-日\r\n              }\r\n            }\r\n          },\r\n          visualMap: {\r\n            type: 'continuous',\r\n            min: 0,\r\n            max: visualMaxValue,\r\n            precision: 0,\r\n            calculable: true,\r\n            orient: 'horizontal',\r\n            left: 'center',\r\n            bottom: '5%',\r\n            inRange: {\r\n              color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\r\n            },\r\n            // 添加具体的数字刻度\r\n            splitNumber: 10, // 分割段数\r\n            formatter: function (value) {\r\n              return value.toFixed(0) + ' kWh';\r\n            },\r\n            textStyle: {\r\n              color: '#333'\r\n            }\r\n          },\r\n          series: [\r\n            {\r\n              name: '能耗 (kWh)',\r\n              type: 'heatmap',\r\n              data: formattedData,\r\n              emphasis: {\r\n                itemStyle: {\r\n                  shadowBlur: 10,\r\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        };\r\n        \r\n        // 应用配置并渲染\r\n        consumptionChart.setOption(option);\r\n        console.log('热力图渲染成功');\r\n        \r\n        // 取消图表的点击事件\r\n        consumptionChart.off('click');\r\n      } catch (error) {\r\n        console.error('渲染能耗分布热力图失败:', error);\r\n        \r\n        // 尝试显示错误信息\r\n        try {\r\n          const chart = await this.safeInitChart('consumptionChart', 'consumption');\r\n          if (chart) {\r\n            chart.setOption({\r\n              title: {\r\n                text: '能耗分布热力图 (加载失败)',\r\n                textStyle: { color: '#ff0000' },\r\n                left: 'center'\r\n              }\r\n            });\r\n          }\r\n        } catch (e) {\r\n          console.error('显示错误信息失败:', e);\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 充电站利用率对比\r\n    async renderUtilizationChart(params) {\r\n      try {\r\n        const response = await energyEfficiencyApi.getStationUtilization(params);\r\n        \r\n        // 确保DOM元素存在\r\n        if (!this.$refs.utilizationChart) {\r\n          console.error('利用率图表DOM元素不存在');\r\n          return;\r\n        }\r\n        \r\n        // 检查返回数据\r\n        if (!response.data || !Array.isArray(response.data) || response.data.length === 0) {\r\n          console.error('充电站利用率数据异常:', response.data);\r\n          // 创建没有数据的图表以避免错误\r\n          if (this.charts.utilization) {\r\n            this.charts.utilization.dispose();\r\n          }\r\n          this.charts.utilization = echarts.init(this.$refs.utilizationChart);\r\n          this.charts.utilization.setOption({\r\n            title: {\r\n              text: '充电站利用率对比 (暂无数据)',\r\n              left: 'center'\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        \r\n        // 销毁旧图表实例\r\n        if (this.charts.utilization) {\r\n          try {\r\n            this.charts.utilization.dispose();\r\n            this.charts.utilization = null;\r\n          } catch (error) {\r\n            console.error('销毁旧利用率图表失败:', error);\r\n          }\r\n        }\r\n        \r\n        // 重新创建图表实例\r\n        this.charts.utilization = echarts.init(this.$refs.utilizationChart);\r\n        \r\n        // 数据处理：确保所有数据都是正数，且单位一致\r\n        const processedData = response.data.map(item => {\r\n          return {\r\n            stationName: item.stationName || '未知充电站',\r\n            busyHours: Math.abs(parseFloat(item.busyHours || 0)),\r\n            idleHours: Math.abs(parseFloat(item.idleHours || 0)),\r\n            maintenanceHours: Math.abs(parseFloat(item.maintenanceHours || 0)),\r\n            errorHours: Math.abs(parseFloat(item.errorHours || 0))\r\n          };\r\n        });\r\n        \r\n        // 验证数据总和是否合理，如果总和异常大，则进行归一化处理\r\n        processedData.forEach(item => {\r\n          const total = item.busyHours + item.idleHours + item.maintenanceHours + item.errorHours;\r\n          // 如果总时间超过48小时（允许一定误差），则认为数据异常，需要归一化\r\n          if (total > 48) {\r\n            const factor = 24 / total;\r\n            item.busyHours *= factor;\r\n            item.idleHours *= factor;\r\n            item.maintenanceHours *= factor;\r\n            item.errorHours *= factor;\r\n          }\r\n        });\r\n        \r\n        console.log('处理后的充电站利用率数据:', processedData);\r\n        \r\n        const option = {\r\n          title: {\r\n            text: '充电站利用率对比',\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            },\r\n            formatter: function(params) {\r\n              let tooltip = params[0].name + '<br/>';\r\n              let total = 0;\r\n              \r\n              params.forEach(param => {\r\n                tooltip += param.seriesName + ': ' + param.value.toFixed(2) + ' 小时<br/>';\r\n                total += param.value;\r\n              });\r\n              \r\n              tooltip += '<br/>总计: ' + total.toFixed(2) + ' 小时';\r\n              return tooltip;\r\n            }\r\n          },\r\n          legend: {\r\n            data: ['忙碌时间', '空闲时间', '维护时间', '故障时间'],\r\n            selectedMode: false,\r\n            top: '30px'\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            top: '80px',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'value',\r\n            name: '小时',\r\n            min: 0,\r\n            max: 24,\r\n            axisLabel: {\r\n              formatter: '{value} h'\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            data: processedData.map(item => item.stationName)\r\n          },\r\n          series: [\r\n            {\r\n              name: '忙碌时间',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              label: {\r\n                show: true,\r\n                formatter: '{c} h'\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: processedData.map(item => parseFloat(item.busyHours.toFixed(2)))\r\n            },\r\n            {\r\n              name: '空闲时间',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              label: {\r\n                show: true,\r\n                formatter: '{c} h'\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: processedData.map(item => parseFloat(item.idleHours.toFixed(2)))\r\n            },\r\n            {\r\n              name: '维护时间',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              label: {\r\n                show: true,\r\n                formatter: '{c} h'\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: processedData.map(item => parseFloat(item.maintenanceHours.toFixed(2)))\r\n            },\r\n            {\r\n              name: '故障时间',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              label: {\r\n                show: true,\r\n                formatter: '{c} h'\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: processedData.map(item => parseFloat(item.errorHours.toFixed(2)))\r\n            }\r\n          ]\r\n        };\r\n        \r\n        this.charts.utilization.setOption(option);\r\n        \r\n        // 取消图表的点击事件\r\n        this.charts.utilization.off('click');\r\n      } catch (error) {\r\n        console.error('渲染充电站利用率图表失败:', error);\r\n        \r\n        // 错误情况下，显示错误信息\r\n        if (this.$refs.utilizationChart) {\r\n          if (this.charts.utilization) {\r\n            this.charts.utilization.dispose();\r\n          }\r\n          this.charts.utilization = echarts.init(this.$refs.utilizationChart);\r\n          this.charts.utilization.setOption({\r\n            title: {\r\n              text: '充电站利用率对比 (加载失败)',\r\n              textStyle: { color: '#ff0000' },\r\n              left: 'center'\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 机器人充电行为分析\r\n    async renderRobotChart(params) {\r\n      try {\r\n        const response = await energyEfficiencyApi.getRobotChargingBehavior(params);\r\n        \r\n        // 确保DOM元素存在\r\n        if (!this.$refs.robotChart) {\r\n          console.error('机器人充电行为图表DOM元素不存在');\r\n          return;\r\n        }\r\n        \r\n        // 检查返回的数据\r\n        if (!response.data || !response.data.robots || !Array.isArray(response.data.robots) || response.data.robots.length === 0) {\r\n          console.error('机器人充电行为数据异常:', response.data);\r\n          // 创建空图表以避免错误\r\n          if (this.charts.robot) {\r\n            this.charts.robot.dispose();\r\n          }\r\n          this.charts.robot = echarts.init(this.$refs.robotChart);\r\n          this.charts.robot.setOption({\r\n            title: {\r\n              text: '机器人充电行为分析 (暂无数据)',\r\n              left: 'center'\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        \r\n        // 销毁旧的图表实例\r\n        if (this.charts.robot) {\r\n          try {\r\n            this.charts.robot.dispose();\r\n            this.charts.robot = null;\r\n          } catch (error) {\r\n            console.error('销毁旧机器人充电行为图表失败:', error);\r\n          }\r\n        }\r\n        \r\n        this.charts.robot = echarts.init(this.$refs.robotChart);\r\n      \r\n        const option = {\r\n          title: {\r\n            text: '机器人充电行为分析'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          },\r\n          legend: {\r\n            data: ['充电次数', '平均充电时长', '平均等待时间'],\r\n            selectedMode: false\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: [\r\n            {\r\n              type: 'category',\r\n              data: response.data.robots.map(robot => robot.name),\r\n              axisPointer: {\r\n                type: 'shadow'\r\n              }\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              type: 'value',\r\n              name: '次数',\r\n              min: 0,\r\n              axisLabel: {\r\n                formatter: '{value}'\r\n              }\r\n            },\r\n            {\r\n              type: 'value',\r\n              name: '时间 (分钟)',\r\n              min: 0,\r\n              axisLabel: {\r\n                formatter: '{value} min'\r\n              }\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '充电次数',\r\n              type: 'bar',\r\n              data: response.data.robots.map(robot => robot.chargingCount)\r\n            },\r\n            {\r\n              name: '平均充电时长',\r\n              type: 'line',\r\n              yAxisIndex: 1,\r\n              data: response.data.robots.map(robot => robot.avgChargingDuration)\r\n            },\r\n            {\r\n              name: '平均等待时间',\r\n              type: 'line',\r\n              yAxisIndex: 1,\r\n              data: response.data.robots.map(robot => robot.avgWaitingTime)\r\n            }\r\n          ]\r\n        };\r\n        \r\n        this.charts.robot.setOption(option);\r\n        \r\n        // 取消图表的点击事件\r\n        this.charts.robot.off('click');\r\n      } catch (error) {\r\n        console.error('渲染机器人充电行为图表失败:', error);\r\n        \r\n        // 错误情况下，显示错误信息\r\n        if (this.$refs.robotChart) {\r\n          if (this.charts.robot) {\r\n            this.charts.robot.dispose();\r\n          }\r\n          this.charts.robot = echarts.init(this.$refs.robotChart);\r\n          this.charts.robot.setOption({\r\n            title: {\r\n              text: '机器人充电行为分析 (加载失败)',\r\n              textStyle: { color: '#ff0000' },\r\n              left: 'center'\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 充电高峰期分析\r\n    async renderPeakChart(params) {\r\n      try {\r\n        const response = await energyEfficiencyApi.getChargingPeakAnalysis(params);\r\n        \r\n        // 确保DOM元素存在\r\n        if (!this.$refs.peakChart) {\r\n          console.error('充电高峰期图表DOM元素不存在');\r\n          return;\r\n        }\r\n        \r\n        // 检查返回的数据\r\n        if (!response.data || !response.data.timeSlots || !response.data.requestCounts || !response.data.avgWaitingTimes) {\r\n          console.error('充电高峰期数据异常:', response.data);\r\n          // 创建空图表以避免错误\r\n          if (this.charts.peak) {\r\n            this.charts.peak.dispose();\r\n          }\r\n          this.charts.peak = echarts.init(this.$refs.peakChart);\r\n          this.charts.peak.setOption({\r\n            title: {\r\n              text: '充电高峰期分析 (暂无数据)',\r\n              left: 'center'\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        \r\n        // 销毁旧的图表实例\r\n        if (this.charts.peak) {\r\n          try {\r\n            this.charts.peak.dispose();\r\n            this.charts.peak = null;\r\n          } catch (error) {\r\n            console.error('销毁旧充电高峰期图表失败:', error);\r\n          }\r\n        }\r\n        \r\n        this.charts.peak = echarts.init(this.$refs.peakChart);\r\n      \r\n        const option = {\r\n          title: {\r\n            text: '充电高峰期分析'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n          },\r\n          legend: {\r\n            data: ['充电请求数', '平均等待时间'],\r\n            selectedMode: false\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: [\r\n            {\r\n              type: 'category',\r\n              data: response.data.timeSlots,\r\n              axisLabel: {\r\n                formatter: '{value}时'\r\n              }\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              type: 'value',\r\n              name: '请求数',\r\n              min: 0,\r\n              axisLabel: {\r\n                formatter: '{value}'\r\n              }\r\n            },\r\n            {\r\n              type: 'value',\r\n              name: '等待时间 (分钟)',\r\n              min: 0,\r\n              axisLabel: {\r\n                formatter: '{value} min'\r\n              }\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '充电请求数',\r\n              type: 'bar',\r\n              data: response.data.requestCounts\r\n            },\r\n            {\r\n              name: '平均等待时间',\r\n              type: 'line',\r\n              yAxisIndex: 1,\r\n              data: response.data.avgWaitingTimes\r\n            }\r\n          ]\r\n        };\r\n        \r\n        this.charts.peak.setOption(option);\r\n        \r\n        // 取消图表的点击事件\r\n        this.charts.peak.off('click');\r\n      } catch (error) {\r\n        console.error('渲染充电高峰期图表失败:', error);\r\n        \r\n        // 错误情况下，显示错误信息\r\n        if (this.$refs.peakChart) {\r\n          if (this.charts.peak) {\r\n            this.charts.peak.dispose();\r\n          }\r\n          this.charts.peak = echarts.init(this.$refs.peakChart);\r\n          this.charts.peak.setOption({\r\n            title: {\r\n              text: '充电高峰期分析 (加载失败)',\r\n              textStyle: { color: '#ff0000' },\r\n              left: 'center'\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 获取筛选参数\r\n    getFilterParams() {\r\n      return {\r\n        startDate: this.dateRange[0] ? this.dateRange[0].toISOString() : null,\r\n        endDate: this.dateRange[1] ? this.dateRange[1].toISOString() : null,\r\n        stationIds: this.selectedStations.length > 0 ? this.selectedStations : null,\r\n        robotIds: this.selectedRobots.length > 0 ? this.selectedRobots : null\r\n      };\r\n    },\r\n    \r\n    // 处理图表切换\r\n    handleChartChange(chartType) {\r\n      const titles = {\r\n        efficiency: '充电效率趋势分析',\r\n        consumption: '能耗分布热力图',\r\n        utilization: '充电站利用率对比',\r\n        robot: '机器人充电行为分析',\r\n        peak: '充电高峰期分析'\r\n      };\r\n      \r\n      this.currentChartTitle = titles[chartType];\r\n      \r\n      // 在切换图表前先清理旧图表实例，避免内存泄漏和DOM冲突\r\n      if (this.charts[this.currentChart]) {\r\n        try {\r\n          // 移除所有事件监听器\r\n          this.charts[this.currentChart].off();\r\n          this.charts[this.currentChart].dispose();\r\n          this.charts[this.currentChart] = null;\r\n        } catch (error) {\r\n          console.error(`清理图表失败: ${error}`);\r\n        }\r\n      }\r\n      \r\n      // 使用nextTick确保DOM已更新\r\n      this.$nextTick(() => {\r\n        this.fetchChartData();\r\n      });\r\n    },\r\n    \r\n    // 增强版创建图表函数，包含额外的安全检查\r\n    async safeInitChart(refName, chartKey) {\r\n      // 检查DOM元素是否存在且在文档中\r\n      if (!this.$refs[refName] || !document.body.contains(this.$refs[refName])) {\r\n        console.error(`${refName} DOM元素不存在或已从文档中移除`);\r\n        return null;\r\n      }\r\n      \r\n      // 销毁旧的图表实例\r\n      if (this.charts[chartKey]) {\r\n        try {\r\n          this.charts[chartKey].dispose();\r\n          this.charts[chartKey] = null;\r\n        } catch (error) {\r\n          console.error(`销毁旧 ${chartKey} 图表失败:`, error);\r\n        }\r\n      }\r\n      \r\n      try {\r\n        // 等待DOM更新\r\n        await this.$nextTick();\r\n        \r\n        // 再次检查DOM是否仍然存在\r\n        if (!this.$refs[refName] || !document.body.contains(this.$refs[refName])) {\r\n          console.error(`${refName} DOM元素在DOM更新后已不存在，无法创建图表`);\r\n          return null;\r\n        }\r\n        \r\n        // 创建图表实例\r\n        this.charts[chartKey] = echarts.init(this.$refs[refName]);\r\n        return this.charts[chartKey];\r\n      } catch (error) {\r\n        console.error(`创建 ${chartKey} 图表失败:`, error);\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.energy-efficiency-analysis {\r\n  padding: 20px;\r\n}\r\n\r\n.kpi-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.kpi-card {\r\n  text-align: center;\r\n  padding: 15px 10px;\r\n  height: 100%;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.kpi-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.kpi-title {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-bottom: 8px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.kpi-value {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: baseline;\r\n  margin-bottom: 8px;\r\n  line-height: 1.2;\r\n}\r\n\r\n.value-number {\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n.value-unit {\r\n  font-size: 14px;\r\n  color: #909399;\r\n  margin-left: 2px;\r\n}\r\n\r\n.kpi-change {\r\n  font-size: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 2px 5px;\r\n  border-radius: 10px;\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  max-width: 80%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.kpi-change.up {\r\n  color: #67c23a;\r\n}\r\n\r\n.kpi-change.down {\r\n  color: #f56c6c;\r\n}\r\n\r\n.kpi-change .el-icon {\r\n  margin-right: 2px;\r\n  font-size: 14px;\r\n}\r\n\r\n.chart-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-content {\r\n  position: relative;\r\n}\r\n\r\n.chart-item {\r\n  position: relative;\r\n}\r\n\r\n.chart {\r\n  height: 400px;\r\n  width: 100%;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}