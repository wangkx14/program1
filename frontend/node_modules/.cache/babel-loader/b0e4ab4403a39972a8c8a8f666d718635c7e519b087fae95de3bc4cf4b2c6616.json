{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"robots-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"toolbar\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"error-message\"\n};\nvar _hoisted_4 = {\n  key: 1,\n  \"class\": \"charge-results\"\n};\nvar _hoisted_5 = {\n  key: 0\n};\nvar _hoisted_6 = {\n  key: 1,\n  \"class\": \"no-station\"\n};\nvar _hoisted_7 = {\n  key: 3,\n  \"class\": \"no-data\"\n};\nvar _hoisted_8 = {\n  key: 4,\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_9 = {\n  key: 0,\n  \"class\": \"dialog-loading\"\n};\nvar _hoisted_10 = {\n  key: 1\n};\nvar _hoisted_11 = {\n  key: 0,\n  \"class\": \"no-stations-message\"\n};\nvar _hoisted_12 = {\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_alert = _resolveComponent(\"el-alert\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_progress = _resolveComponent(\"el-progress\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_empty = _resolveComponent(\"el-empty\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  var _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[11] || (_cache[11] = _createElementVNode(\"h2\", null, \"机器人管理\", -1 /* HOISTED */)), _createVNode(_component_el_card, {\n    \"class\": \"box-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" <el-button type=\\\"primary\\\" @click=\\\"checkLowBattery\\\" :loading=\\\"checkingBattery\\\">\\n          检查低电量机器人并自动充电\\n        </el-button> \"), _createVNode(_component_el_button, {\n        type: \"success\",\n        onClick: $options.fetchRobots,\n        loading: $data.loading\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[4] || (_cache[4] = [_createTextVNode(\" 刷新数据 \")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [4]\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"])]), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_alert, {\n        title: \"加载数据出错\",\n        type: \"error\",\n        description: $data.error,\n        \"show-icon\": \"\"\n      }, null, 8 /* PROPS */, [\"description\"])])) : _createCommentVNode(\"v-if\", true), $data.chargeResults && $data.chargeResults.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_alert, {\n        title: \"自动充电结果\",\n        type: \"success\",\n        closable: true,\n        \"show-icon\": \"\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.chargeResults, function (result, index) {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: index\n            }, _toDisplayString(result.message), 1 /* TEXT */);\n          }), 128 /* KEYED_FRAGMENT */))];\n        }),\n        _: 1 /* STABLE */\n      })])) : _createCommentVNode(\"v-if\", true), $data.robots && $data.robots.length > 0 ? _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n        key: 2,\n        data: $options.paginatedRobots,\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_table_column, {\n            prop: \"id\",\n            label: \"机器人ID\",\n            width: \"100\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"名称\",\n            width: \"150\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"battery_level\",\n            label: \"电量\",\n            width: \"180\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_progress, {\n                percentage: scope.row.battery_level,\n                status: $options.getBatteryStatus(scope.row.battery_level)\n              }, null, 8 /* PROPS */, [\"percentage\", \"status\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"status\",\n            label: \"状态\",\n            width: \"120\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_tag, {\n                type: $options.getStatusType(scope.row.status)\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($options.getStatusText(scope.row.status)), 1 /* TEXT */)];\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"station_id\",\n            label: \"关联充电桩\",\n            width: \"150\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [scope.row.station_id ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString($options.getStationName(scope.row.station_id)), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"未分配\"))];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"last_charging\",\n            label: \"上次充电时间\"\n          }), _createVNode(_component_el_table_column, {\n            label: \"操作\",\n            width: \"240\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [!scope.row.station_id ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 0,\n                size: \"small\",\n                type: \"primary\",\n                onClick: function onClick($event) {\n                  return $options.showAssignDialog(scope.row);\n                },\n                disabled: scope.row.status === 'charging'\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[5] || (_cache[5] = [_createTextVNode(\" 分配充电桩 \")]);\n                }),\n                _: 2 /* DYNAMIC */,\n                __: [5]\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"disabled\"])) : _createCommentVNode(\"v-if\", true), scope.row.station_id ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 1,\n                size: \"small\",\n                type: \"danger\",\n                onClick: function onClick($event) {\n                  return $options.releaseStation(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[6] || (_cache[6] = [_createTextVNode(\" 解除充电桩 \")]);\n                }),\n                _: 2 /* DYNAMIC */,\n                __: [6]\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $data.loading]]) : !$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createVNode(_component_el_empty, {\n        description: \"暂无数据\"\n      })])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 分页控件 \"), $data.robots && $data.robots.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createVNode(_component_el_pagination, {\n        \"current-page\": $data.currentPage,\n        \"onUpdate:currentPage\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.currentPage = $event;\n        }),\n        \"page-size\": $data.pageSize,\n        total: $options.totalItems,\n        layout: \"total, prev, pager, next, jumper\",\n        onCurrentChange: $options.handleCurrentChange\n      }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\", \"onCurrentChange\"])])) : _createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 分配充电桩对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"分配充电桩\",\n    modelValue: $data.assignDialogVisible,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n      return $data.assignDialogVisible = $event;\n    }),\n    width: \"500px\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_12, [_createVNode(_component_el_button, {\n        onClick: _cache[2] || (_cache[2] = function ($event) {\n          return $data.assignDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[9] || (_cache[9] = [_createTextVNode(\"取消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [9]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.assignStation,\n        disabled: !$data.selectedStationId || $data.assigningStation,\n        loading: $data.assigningStation\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[10] || (_cache[10] = [_createTextVNode(\" 确定 \")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [10]\n      }, 8 /* PROPS */, [\"onClick\", \"disabled\", \"loading\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      var _$data$currentRobot;\n      return [$data.loadingStations ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createVNode(_component_el_skeleton, {\n        rows: 3,\n        animated: \"\"\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"p\", null, [_cache[7] || (_cache[7] = _createTextVNode(\"为机器人 \")), _createElementVNode(\"strong\", null, _toDisplayString((_$data$currentRobot = $data.currentRobot) === null || _$data$currentRobot === void 0 ? void 0 : _$data$currentRobot.name), 1 /* TEXT */), _cache[8] || (_cache[8] = _createTextVNode(\" 选择一个充电桩:\"))]), $options.availableStations.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createVNode(_component_el_alert, {\n        title: \"没有可用的充电桩\",\n        type: \"warning\",\n        description: \"所有充电桩都在使用中或处于维护状态\",\n        \"show-icon\": \"\"\n      })])) : (_openBlock(), _createBlock(_component_el_form, {\n        key: 1\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_select, {\n                modelValue: $data.selectedStationId,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $data.selectedStationId = $event;\n                }),\n                placeholder: \"请选择充电桩\",\n                style: {\n                  \"width\": \"100%\"\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.availableStations, function (station) {\n                    return _openBlock(), _createBlock(_component_el_option, {\n                      key: station.id,\n                      label: \"\".concat(station.name, \" (\").concat(station.location, \")\"),\n                      value: station.id\n                    }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                  }), 128 /* KEYED_FRAGMENT */))];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }))]))];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_card","_withCtx","_hoisted_2","_createCommentVNode","_component_el_button","type","onClick","$options","fetchRobots","loading","$data","_cache","_createTextVNode","_","__","error","_hoisted_3","_component_el_alert","title","description","chargeResults","length","_hoisted_4","closable","_Fragment","_renderList","result","index","_toDisplayString","message","robots","_createBlock","_component_el_table","data","paginatedRobots","style","_component_el_table_column","prop","label","width","scope","_component_el_progress","percentage","row","battery_level","status","getBatteryStatus","_component_el_tag","getStatusType","getStatusText","station_id","_hoisted_5","getStationName","_hoisted_6","size","$event","showAssignDialog","disabled","releaseStation","_hoisted_7","_component_el_empty","_hoisted_8","_component_el_pagination","currentPage","pageSize","total","totalItems","layout","onCurrentChange","handleCurrentChange","_component_el_dialog","modelValue","assignDialogVisible","footer","_hoisted_12","assignStation","selectedStationId","assigningStation","_$data$currentRobot","loadingStations","_hoisted_9","_component_el_skeleton","rows","animated","_hoisted_10","currentRobot","name","availableStations","_hoisted_11","_component_el_form","_component_el_form_item","_component_el_select","placeholder","station","_component_el_option","id","concat","location","value"],"sources":["C:\\Users\\jiaronghao\\Desktop\\Documents\\本科论文编写\\5、货仓机器人激光充电和能效管理云平台的设计与实现\\Y0527-final\\frontend\\src\\views\\Robots.vue"],"sourcesContent":["<template>\n  <div class=\"robots-container\">\n    <h2>机器人管理</h2>\n    <el-card class=\"box-card\">\n      <div class=\"toolbar\">\n        <!-- <el-button type=\"primary\" @click=\"checkLowBattery\" :loading=\"checkingBattery\">\n          检查低电量机器人并自动充电\n        </el-button> -->\n        <el-button type=\"success\" @click=\"fetchRobots\" :loading=\"loading\">\n          刷新数据\n        </el-button>\n      </div>\n      \n      <div v-if=\"error\" class=\"error-message\">\n        <el-alert\n          title=\"加载数据出错\"\n          type=\"error\"\n          :description=\"error\"\n          show-icon\n        />\n      </div>\n      \n      <div v-if=\"chargeResults && chargeResults.length > 0\" class=\"charge-results\">\n        <el-alert\n          title=\"自动充电结果\"\n          type=\"success\"\n          :closable=\"true\"\n          show-icon\n        >\n          <div v-for=\"(result, index) in chargeResults\" :key=\"index\">\n            {{ result.message }}\n          </div>\n        </el-alert>\n      </div>\n      \n      <el-table \n        v-if=\"robots && robots.length > 0\" \n        :data=\"paginatedRobots\" \n        style=\"width: 100%\" \n        v-loading=\"loading\">\n        <el-table-column prop=\"id\" label=\"机器人ID\" width=\"100\" />\n        <el-table-column prop=\"name\" label=\"名称\" width=\"150\" />\n        <el-table-column prop=\"battery_level\" label=\"电量\" width=\"180\">\n          <template #default=\"scope\">\n            <el-progress \n              :percentage=\"scope.row.battery_level\" \n              :status=\"getBatteryStatus(scope.row.battery_level)\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\" width=\"120\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.status)\">\n              {{ getStatusText(scope.row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"station_id\" label=\"关联充电桩\" width=\"150\">\n          <template #default=\"scope\">\n            <span v-if=\"scope.row.station_id\">\n              {{ getStationName(scope.row.station_id) }}\n            </span>\n            <span v-else class=\"no-station\">未分配</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"last_charging\" label=\"上次充电时间\" />\n        <el-table-column label=\"操作\" width=\"240\">\n          <template #default=\"scope\">\n            <el-button \n              size=\"small\" \n              type=\"primary\" \n              @click=\"showAssignDialog(scope.row)\"\n              :disabled=\"scope.row.status === 'charging'\"\n              v-if=\"!scope.row.station_id\"\n            >\n              分配充电桩\n            </el-button>\n            <el-button \n              size=\"small\" \n              type=\"danger\" \n              @click=\"releaseStation(scope.row)\"\n              v-if=\"scope.row.station_id\"\n            >\n              解除充电桩\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div v-else-if=\"!loading\" class=\"no-data\">\n        <el-empty description=\"暂无数据\" />\n      </div>\n      \n      <!-- 分页控件 -->\n      <div class=\"pagination-container\" v-if=\"robots && robots.length > 0\">\n        <el-pagination\n          v-model:current-page=\"currentPage\"\n          :page-size=\"pageSize\"\n          :total=\"totalItems\"\n          layout=\"total, prev, pager, next, jumper\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n    \n    <!-- 分配充电桩对话框 -->\n    <el-dialog \n      title=\"分配充电桩\" \n      v-model=\"assignDialogVisible\"\n      width=\"500px\"\n    >\n      <div v-if=\"loadingStations\" class=\"dialog-loading\">\n        <el-skeleton :rows=\"3\" animated />\n      </div>\n      <div v-else>\n        <p>为机器人 <strong>{{ currentRobot?.name }}</strong> 选择一个充电桩:</p>\n        \n        <div v-if=\"availableStations.length === 0\" class=\"no-stations-message\">\n          <el-alert\n            title=\"没有可用的充电桩\"\n            type=\"warning\"\n            description=\"所有充电桩都在使用中或处于维护状态\"\n            show-icon\n          />\n        </div>\n        \n        <el-form v-else>\n          <el-form-item>\n            <el-select v-model=\"selectedStationId\" placeholder=\"请选择充电桩\" style=\"width: 100%\">\n              <el-option\n                v-for=\"station in availableStations\"\n                :key=\"station.id\"\n                :label=\"`${station.name} (${station.location})`\"\n                :value=\"station.id\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </div>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"assignDialogVisible = false\">取消</el-button>\n          <el-button \n            type=\"primary\" \n            @click=\"assignStation\" \n            :disabled=\"!selectedStationId || assigningStation\"\n            :loading=\"assigningStation\"\n          >\n            确定\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { robotApi, stationApi } from '@/api'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'Robots',\n  data() {\n    return {\n      robots: [],\n      stations: [],\n      loading: false,\n      error: null,\n      // 分页相关\n      currentPage: 1,\n      pageSize: 10,\n      // 分配充电桩相关\n      assignDialogVisible: false,\n      currentRobot: null,\n      selectedStationId: null,\n      loadingStations: false,\n      assigningStation: false,\n      // 低电量检查相关\n      checkingBattery: false,\n      chargeResults: []\n    }\n  },\n  computed: {\n    totalItems() {\n      return this.robots.length\n    },\n    paginatedRobots() {\n      const startIndex = (this.currentPage - 1) * this.pageSize\n      const endIndex = startIndex + this.pageSize\n      return this.robots.slice(startIndex, endIndex)\n    },\n    availableStations() {\n      return this.stations.filter(station => station.status === 'idle')\n    }\n  },\n  created() {\n    console.log('Robots组件已创建，准备获取数据')\n    \n    // 添加这个延迟调用以避免可能的ResizeObserver问题\n    setTimeout(() => {\n      this.fetchRobots()\n      this.fetchStations()\n    }, 0)\n  },\n  methods: {\n    async fetchRobots() {\n      try {\n        this.loading = true\n        this.error = null\n        console.log('开始获取机器人数据')\n        \n        try {\n          const response = await robotApi.getAll()\n          // 打印原始响应\n          console.log('获取到机器人数据(原始):', response)\n          console.log('获取到机器人数据:', response.data)\n          console.log('机器人数据类型:', typeof response.data, Array.isArray(response.data))\n          \n          // 确保数据是数组\n          if (Array.isArray(response.data)) {\n            // 检查每个机器人对象的字段\n            const validRobots = response.data.filter(robot => {\n              const isValid = robot && \n                             typeof robot === 'object' && \n                             'id' in robot && \n                             'name' in robot && \n                             'battery_level' in robot && \n                             'status' in robot;\n              if (!isValid) {\n                console.warn('过滤掉无效的机器人数据:', robot);\n              }\n              return isValid;\n            });\n            \n            console.log('有效的机器人数据:', validRobots);\n            this.robots = validRobots;\n            // 重置为第一页\n            this.currentPage = 1;\n            console.log('成功设置机器人数据，数量:', this.robots.length)\n          } else {\n            console.error('API返回的机器人数据不是数组:', response.data)\n            this.robots = [] // 设置为空数组\n            this.error = '机器人数据格式错误，请联系管理员'\n            ElMessage.error('机器人数据格式错误')\n          }\n        } catch (apiError) {\n          console.error('API调用出错:', apiError)\n          this.robots = [] // 确保错误时也设置为空数组\n          this.error = `API调用出错: ${apiError.message || '未知错误'}`\n          ElMessage.error('获取机器人数据失败')\n        }\n      } catch (error) {\n        console.error('获取机器人列表失败:', error)\n        this.robots = [] // 确保错误时也设置为空数组\n        this.error = `获取数据失败: ${error.message || '未知错误'}`\n        ElMessage.error('获取机器人列表失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    async fetchStations() {\n      try {\n        this.loadingStations = true\n        console.log('开始获取充电站数据')\n        \n        const response = await stationApi.getAll()\n        console.log('获取到充电站数据:', response.data)\n        \n        if (Array.isArray(response.data)) {\n          this.stations = response.data\n          console.log('成功设置充电站数据，数量:', this.stations.length)\n        } else {\n          console.error('API返回的充电站数据不是数组')\n          this.stations = []\n        }\n      } catch (error) {\n        console.error('获取充电站列表失败:', error)\n        this.stations = []\n        ElMessage.error('获取充电站数据失败')\n      } finally {\n        this.loadingStations = false\n      }\n    },\n    \n    // 检查低电量机器人并自动充电\n    async checkLowBattery() {\n      try {\n        this.checkingBattery = true\n        this.chargeResults = []\n        \n        console.log('开始检查低电量机器人')\n        const response = await robotApi.checkLowBattery()\n        console.log('检查结果:', response.data)\n        \n        if (Array.isArray(response.data) && response.data.length > 0) {\n          this.chargeResults = response.data\n          ElMessage.success(`检测到 ${response.data.length} 个需要处理的机器人`)\n        } else {\n          ElMessage.info('没有需要充电的机器人')\n        }\n        \n        // 刷新机器人数据\n        await this.fetchRobots()\n      } catch (error) {\n        console.error('检查低电量机器人失败:', error)\n        ElMessage.error('检查低电量机器人失败')\n      } finally {\n        this.checkingBattery = false\n      }\n    },\n    \n    // 显示分配充电桩对话框\n    showAssignDialog(robot) {\n      this.currentRobot = robot\n      this.selectedStationId = robot.station_id || null\n      this.assignDialogVisible = true\n      \n      // 如果充电站数据为空，重新获取\n      if (this.stations.length === 0) {\n        this.fetchStations()\n      }\n    },\n    \n    // 分配充电桩\n    async assignStation() {\n      if (!this.currentRobot || !this.selectedStationId) {\n        ElMessage.warning('请选择充电桩')\n        return\n      }\n      \n      try {\n        this.assigningStation = true\n        console.log(`分配机器人 ${this.currentRobot.id} 到充电桩 ${this.selectedStationId}`)\n        \n        const response = await robotApi.assignToStation(this.currentRobot.id, this.selectedStationId)\n        \n        if (response && response.data && response.data.message) {\n          ElMessage.success(response.data.message || '成功分配充电桩')\n        } else {\n          ElMessage.success('成功分配充电桩')\n        }\n        \n        this.assignDialogVisible = false\n        \n        // 刷新机器人数据\n        await this.fetchRobots()\n        // 刷新充电站数据\n        await this.fetchStations()\n      } catch (error) {\n        console.error('分配充电桩失败:', error)\n        // 提取API返回的具体错误信息\n        let errorMsg = '未知错误'\n        if (error.response && error.response.data) {\n          errorMsg = error.response.data.error || error.response.data.message || error.message || '分配失败'\n        } else if (error.message) {\n          errorMsg = error.message\n        }\n        ElMessage.error('分配充电桩失败: ' + errorMsg)\n      } finally {\n        this.assigningStation = false\n      }\n    },\n    \n    // 获取充电桩名称\n    getStationName(stationId) {\n      const station = this.stations.find(s => s.id === stationId)\n      return station ? station.name : `充电桩 ${stationId}`\n    },\n    \n    // 分页相关方法\n    handleCurrentChange(page) {\n      this.currentPage = page\n      console.log(`当前页: ${this.currentPage}`)\n    },\n    \n    // 获取电池状态\n    getBatteryStatus(level) {\n      if (level < 20) return 'exception'\n      if (level < 50) return 'warning'\n      return 'success'\n    },\n    \n    getStatusType(status) {\n      const types = {\n        'idle': 'info',\n        'working': 'success',\n        'charging': 'primary',\n        'error': 'danger'\n      }\n      return types[status] || 'info'\n    },\n    \n    getStatusText(status) {\n      const texts = {\n        'idle': '空闲',\n        'working': '工作中',\n        'charging': '充电中',\n        'error': '故障'\n      }\n      return texts[status] || status\n    },\n    \n    // 解除充电桩\n    async releaseStation(robot) {\n      try {\n        this.assigningStation = true\n        console.log(`解除机器人 ${robot.id} 的充电桩`)\n        \n        const response = await robotApi.releaseFromStation(robot.id)\n        \n        if (response && response.data && response.data.message) {\n          ElMessage.success(response.data.message || '成功解除充电桩')\n        } else {\n          ElMessage.success('成功解除充电桩')\n        }\n        \n        // 刷新机器人数据\n        await this.fetchRobots()\n        // 刷新充电站数据\n        await this.fetchStations()\n      } catch (error) {\n        console.error('解除充电桩失败:', error)\n        // 提取API返回的具体错误信息\n        let errorMsg = '未知错误'\n        if (error.response && error.response.data) {\n          errorMsg = error.response.data.error || error.response.data.message || error.message || '解除失败'\n        } else if (error.message) {\n          errorMsg = error.message\n        }\n        ElMessage.error('解除充电桩失败: ' + errorMsg)\n      } finally {\n        this.assigningStation = false\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.robots-container {\n  padding: 20px;\n}\n.error-message, .charge-results {\n  margin-bottom: 20px;\n}\n.no-data {\n  padding: 20px 0;\n}\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n.toolbar {\n  margin-bottom: 20px;\n  display: flex;\n  gap: 10px;\n}\n.no-station {\n  color: #909399;\n  font-style: italic;\n}\n.dialog-loading {\n  padding: 20px 0;\n}\n.no-stations-message {\n  margin: 20px 0;\n}\n</style> "],"mappings":";;;;EACO,SAAM;AAAkB;;EAGpB,SAAM;AAAS;;EAJ1BA,GAAA;EAawB,SAAM;;;EAb9BA,GAAA;EAsB4D,SAAM;;;EAtBlEA,GAAA;AAAA;;EAAAA,GAAA;EA8DyB,SAAM;;;EA9D/BA,GAAA;EAwFgC,SAAM;;;EAxFtCA,GAAA;EA6FW,SAAM;;;EA7FjBA,GAAA;EA8GkC,SAAM;;;EA9GxCA,GAAA;AAAA;;EAAAA,GAAA;EAoHmD,SAAM;;;EAwB3C,SAAM;AAAe;;;;;;;;;;;;;;;;;;uBA3IjCC,mBAAA,CAwJM,OAxJNC,UAwJM,G,4BAvJJC,mBAAA,CAAc,YAAV,OAAK,sBACTC,YAAA,CAmGUC,kBAAA;IAnGD,SAAM;EAAU;IAH7B,WAAAC,QAAA,CAIM;MAAA,OAOM,CAPNH,mBAAA,CAOM,OAPNI,UAOM,GANJC,mBAAA,yIAEgB,EAChBJ,YAAA,CAEYK,oBAAA;QAFDC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAEC,QAAA,CAAAC,WAAW;QAAGC,OAAO,EAAEC,KAAA,CAAAD;;QARjE,WAAAR,QAAA,CAQ0E;UAAA,OAElEU,MAAA,QAAAA,MAAA,OAVRC,gBAAA,CAQ0E,QAElE,E;;QAVRC,CAAA;QAAAC,EAAA;mDAaiBJ,KAAA,CAAAK,KAAK,I,cAAhBnB,mBAAA,CAOM,OAPNoB,UAOM,GANJjB,YAAA,CAKEkB,mBAAA;QAJAC,KAAK,EAAC,QAAQ;QACdb,IAAI,EAAC,OAAO;QACXc,WAAW,EAAET,KAAA,CAAAK,KAAK;QACnB,WAAS,EAAT;oDAlBVZ,mBAAA,gBAsBiBO,KAAA,CAAAU,aAAa,IAAIV,KAAA,CAAAU,aAAa,CAACC,MAAM,Q,cAAhDzB,mBAAA,CAWM,OAXN0B,UAWM,GAVJvB,YAAA,CASWkB,mBAAA;QARTC,KAAK,EAAC,QAAQ;QACdb,IAAI,EAAC,SAAS;QACbkB,QAAQ,EAAE,IAAI;QACf,WAAS,EAAT;;QA3BV,WAAAtB,QAAA,CA6Be;UAAA,OAAwC,E,kBAA7CL,mBAAA,CAEM4B,SAAA,QA/BhBC,WAAA,CA6ByCf,KAAA,CAAAU,aAAa,EA7BtD,UA6BuBM,MAAM,EAAEC,KAAK;iCAA1B/B,mBAAA,CAEM;cAFyCD,GAAG,EAAEgC;YAAK,GAAAC,gBAAA,CACpDF,MAAM,CAACG,OAAO;;;QA9B7BhB,CAAA;cAAAV,mBAAA,gBAoCcO,KAAA,CAAAoB,MAAM,IAAIpB,KAAA,CAAAoB,MAAM,CAACT,MAAM,O,+BAD/BU,YAAA,CAoDWC,mBAAA;QAvFjBrC,GAAA;QAqCSsC,IAAI,EAAE1B,QAAA,CAAA2B,eAAe;QACtBC,KAAmB,EAAnB;UAAA;QAAA;;QAtCR,WAAAlC,QAAA,CAwCQ;UAAA,OAAuD,CAAvDF,YAAA,CAAuDqC,0BAAA;YAAtCC,IAAI,EAAC,IAAI;YAACC,KAAK,EAAC,OAAO;YAACC,KAAK,EAAC;cAC/CxC,YAAA,CAAsDqC,0BAAA;YAArCC,IAAI,EAAC,MAAM;YAACC,KAAK,EAAC,IAAI;YAACC,KAAK,EAAC;cAC9CxC,YAAA,CAOkBqC,0BAAA;YAPDC,IAAI,EAAC,eAAe;YAACC,KAAK,EAAC,IAAI;YAACC,KAAK,EAAC;;YAC1C,WAAOtC,QAAA,CAChB,UAGEuC,KAJqB;cAAA,QACvBzC,YAAA,CAGE0C,sBAAA;gBAFCC,UAAU,EAAEF,KAAK,CAACG,GAAG,CAACC,aAAa;gBACnCC,MAAM,EAAEtC,QAAA,CAAAuC,gBAAgB,CAACN,KAAK,CAACG,GAAG,CAACC,aAAa;;;YA9C/D/B,CAAA;cAkDQd,YAAA,CAMkBqC,0BAAA;YANDC,IAAI,EAAC,QAAQ;YAACC,KAAK,EAAC,IAAI;YAACC,KAAK,EAAC;;YACnC,WAAOtC,QAAA,CAChB,UAESuC,KAHc;cAAA,QACvBzC,YAAA,CAESgD,iBAAA;gBAFA1C,IAAI,EAAEE,QAAA,CAAAyC,aAAa,CAACR,KAAK,CAACG,GAAG,CAACE,MAAM;;gBApDzD,WAAA5C,QAAA,CAqDc;kBAAA,OAAqC,CArDnDW,gBAAA,CAAAgB,gBAAA,CAqDiBrB,QAAA,CAAA0C,aAAa,CAACT,KAAK,CAACG,GAAG,CAACE,MAAM,kB;;gBArD/ChC,CAAA;;;YAAAA,CAAA;cAyDQd,YAAA,CAOkBqC,0BAAA;YAPDC,IAAI,EAAC,YAAY;YAACC,KAAK,EAAC,OAAO;YAACC,KAAK,EAAC;;YAC1C,WAAOtC,QAAA,CAPuC,UAC6BuC,KAM7D;cAAA,QACXA,KAAK,CAACG,GAAG,CAACO,UAAU,I,cAAhCtD,mBAAA,CAEO,QA7DnBuD,UAAA,EAAAvB,gBAAA,CA4DiBrB,QAAA,CAAA6C,cAAc,CAACZ,KAAK,CAACG,GAAG,CAACO,UAAU,sB,cAExCtD,mBAAA,CAA0C,QAA1CyD,UAA0C,EAAV,KAAG,G;;YA9D/CxC,CAAA;cAiEQd,YAAA,CAAuDqC,0BAAA;YAAtCC,IAAI,EAAC,eAAe;YAACC,KAAK,EAAC;cAC5CvC,YAAA,CAoBkBqC,0BAAA;YApBDE,KAAK,EAAC,IAAI;YAACC,KAAK,EAAC;;YACrB,WAAOtC,QAAA,CALmC,UAStDuC,KAJ0B;cAAA,Q,CAMdA,KAAK,CAACG,GAAG,CAACO,UAAU,I,cAL7BnB,YAAA,CAQY3B,oBAAA;gBA5ExBT,GAAA;gBAqEc2D,IAAI,EAAC,OAAO;gBACZjD,IAAI,EAAC,SAAS;gBACbC,OAAK,WAALA,OAAKA,CAAAiD,MAAA;kBAAA,OAAEhD,QAAA,CAAAiD,gBAAgB,CAAChB,KAAK,CAACG,GAAG;gBAAA;gBACjCc,QAAQ,EAAEjB,KAAK,CAACG,GAAG,CAACE,MAAM;;gBAxEzC,WAAA5C,QAAA,CA0Ea;kBAAA,OAEDU,MAAA,QAAAA,MAAA,OA5EZC,gBAAA,CA0Ea,SAED,E;;gBA5EZC,CAAA;gBAAAC,EAAA;8EAAAX,mBAAA,gBAiFoBqC,KAAK,CAACG,GAAG,CAACO,UAAU,I,cAJ5BnB,YAAA,CAOY3B,oBAAA;gBApFxBT,GAAA;gBA8Ec2D,IAAI,EAAC,OAAO;gBACZjD,IAAI,EAAC,QAAQ;gBACZC,OAAK,WAALA,OAAKA,CAAAiD,MAAA;kBAAA,OAAEhD,QAAA,CAAAmD,cAAc,CAAClB,KAAK,CAACG,GAAG;gBAAA;;gBAhF9C,WAAA1C,QAAA,CAkFa;kBAAA,OAEDU,MAAA,QAAAA,MAAA,OApFZC,gBAAA,CAkFa,SAED,E;;gBApFZC,CAAA;gBAAAC,EAAA;kEAAAX,mBAAA,e;;YAAAU,CAAA;;;QAAAA,CAAA;0DAuCmBH,KAAA,CAAAD,OAAO,E,KAiDHC,KAAA,CAAAD,OAAO,I,cAAxBb,mBAAA,CAEM,OAFN+D,UAEM,GADJ5D,YAAA,CAA+B6D,mBAAA;QAArBzC,WAAW,EAAC;MAAM,G,KAzFpChB,mBAAA,gBA4FMA,mBAAA,UAAa,EAC2BO,KAAA,CAAAoB,MAAM,IAAIpB,KAAA,CAAAoB,MAAM,CAACT,MAAM,Q,cAA/DzB,mBAAA,CAQM,OARNiE,UAQM,GAPJ9D,YAAA,CAME+D,wBAAA;QALQ,cAAY,EAAEpD,KAAA,CAAAqD,WAAW;QA/F3C,wBAAApD,MAAA,QAAAA,MAAA,gBAAA4C,MAAA;UAAA,OA+FgC7C,KAAA,CAAAqD,WAAW,GAAAR,MAAA;QAAA;QAChC,WAAS,EAAE7C,KAAA,CAAAsD,QAAQ;QACnBC,KAAK,EAAE1D,QAAA,CAAA2D,UAAU;QAClBC,MAAM,EAAC,kCAAkC;QACxCC,eAAc,EAAE7D,QAAA,CAAA8D;8FAnG3BlE,mBAAA,e;;IAAAU,CAAA;MAwGIV,mBAAA,cAAiB,EACjBJ,YAAA,CA+CYuE,oBAAA;IA9CVpD,KAAK,EAAC,OAAO;IA1GnBqD,UAAA,EA2Ge7D,KAAA,CAAA8D,mBAAmB;IA3GlC,uBAAA7D,MAAA,QAAAA,MAAA,gBAAA4C,MAAA;MAAA,OA2Ge7C,KAAA,CAAA8D,mBAAmB,GAAAjB,MAAA;IAAA;IAC5BhB,KAAK,EAAC;;IA+BKkC,MAAM,EAAAxE,QAAA,CACf;MAAA,OAUO,CAVPH,mBAAA,CAUO,QAVP4E,WAUO,GATL3E,YAAA,CAA8DK,oBAAA;QAAlDE,OAAK,EAAAK,MAAA,QAAAA,MAAA,gBAAA4C,MAAA;UAAA,OAAE7C,KAAA,CAAA8D,mBAAmB;QAAA;;QA7IhD,WAAAvE,QAAA,CA6I0D;UAAA,OAAEU,MAAA,QAAAA,MAAA,OA7I5DC,gBAAA,CA6I0D,IAAE,E;;QA7I5DC,CAAA;QAAAC,EAAA;UA8IUf,YAAA,CAOYK,oBAAA;QANVC,IAAI,EAAC,SAAS;QACbC,OAAK,EAAEC,QAAA,CAAAoE,aAAa;QACpBlB,QAAQ,GAAG/C,KAAA,CAAAkE,iBAAiB,IAAIlE,KAAA,CAAAmE,gBAAgB;QAChDpE,OAAO,EAAEC,KAAA,CAAAmE;;QAlJtB,WAAA5E,QAAA,CAmJW;UAAA,OAEDU,MAAA,SAAAA,MAAA,QArJVC,gBAAA,CAmJW,MAED,E;;QArJVC,CAAA;QAAAC,EAAA;;;IAAA,WAAAb,QAAA,CAmGA;MAAA,IAAA6E,mBAAA;MAAA,OAIa,CAOIpE,KAAA,CAAAqE,eAAe,I,cAA1BnF,mBAAA,CAEM,OAFNoF,UAEM,GADJjF,YAAA,CAAkCkF,sBAAA;QAApBC,IAAI,EAAE,CAAC;QAAEC,QAAQ,EAAR;6BAEzBvF,mBAAA,CAwBM,OAzIZwF,WAAA,GAkHQtF,mBAAA,CAA8D,Y,0BAlHtEc,gBAAA,CAkHW,OAAK,IAAAd,mBAAA,CAAyC,gBAAA8B,gBAAA,EAAAkD,mBAAA,GAA9BpE,KAAA,CAAA2E,YAAY,cAAAP,mBAAA,uBAAZA,mBAAA,CAAcQ,IAAI,kB,0BAlH7C1E,gBAAA,CAkHyD,WAAS,G,GAE/CL,QAAA,CAAAgF,iBAAiB,CAAClE,MAAM,U,cAAnCzB,mBAAA,CAOM,OAPN4F,WAOM,GANJzF,YAAA,CAKEkB,mBAAA;QAJAC,KAAK,EAAC,UAAU;QAChBb,IAAI,EAAC,SAAS;QACdc,WAAW,EAAC,mBAAmB;QAC/B,WAAS,EAAT;6BAIJY,YAAA,CAWU0D,kBAAA;QAxIlB9F,GAAA;MAAA;QAAA,WAAAM,QAAA,CA8HU;UAAA,OASe,CATfF,YAAA,CASe2F,uBAAA;YAvIzB,WAAAzF,QAAA,CA+HY;cAAA,OAOY,CAPZF,YAAA,CAOY4F,oBAAA;gBAtIxBpB,UAAA,EA+HgC7D,KAAA,CAAAkE,iBAAiB;gBA/HjD,uBAAAjE,MAAA,QAAAA,MAAA,gBAAA4C,MAAA;kBAAA,OA+HgC7C,KAAA,CAAAkE,iBAAiB,GAAArB,MAAA;gBAAA;gBAAEqC,WAAW,EAAC,QAAQ;gBAACzD,KAAmB,EAAnB;kBAAA;gBAAA;;gBA/HxE,WAAAlC,QAAA,CAiIgB;kBAAA,OAAoC,E,kBADtCL,mBAAA,CAKE4B,SAAA,QArIhBC,WAAA,CAiIkClB,QAAA,CAAAgF,iBAAiB,EAjInD,UAiIuBM,OAAO;yCADhB9D,YAAA,CAKE+D,oBAAA;sBAHCnG,GAAG,EAAEkG,OAAO,CAACE,EAAE;sBACfzD,KAAK,KAAA0D,MAAA,CAAKH,OAAO,CAACP,IAAI,QAAAU,MAAA,CAAKH,OAAO,CAACI,QAAQ;sBAC3CC,KAAK,EAAEL,OAAO,CAACE;;;;gBApIhClF,CAAA;;;YAAAA,CAAA;;;QAAAA,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}