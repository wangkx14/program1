{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"robots-container\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"error-message\"\n};\nvar _hoisted_3 = {\n  key: 1\n};\nvar _hoisted_4 = {\n  key: 2,\n  \"class\": \"no-data\"\n};\nvar _hoisted_5 = {\n  key: 3,\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_6 = {\n  key: 0\n};\nvar _hoisted_7 = {\n  key: 1\n};\nvar _hoisted_8 = {\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_alert = _resolveComponent(\"el-alert\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_progress = _resolveComponent(\"el-progress\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_empty = _resolveComponent(\"el-empty\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  var _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[12] || (_cache[12] = _createElementVNode(\"h2\", null, \"机器人管理\", -1 /* HOISTED */)), _createVNode(_component_el_card, {\n    \"class\": \"box-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [$setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_alert, {\n        title: \"加载数据出错\",\n        type: \"error\",\n        description: $setup.error,\n        \"show-icon\": \"\"\n      }, null, 8 /* PROPS */, [\"description\"])])) : _createCommentVNode(\"v-if\", true), $setup.robots && $setup.robots.length > 0 ? _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n        key: 1,\n        data: $setup.paginatedRobots,\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_table_column, {\n            prop: \"id\",\n            label: \"机器人ID\",\n            width: \"80\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"名称\",\n            width: \"150\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"battery_level\",\n            label: \"电量\",\n            width: \"150\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_progress, {\n                percentage: scope.row.battery_level,\n                status: $setup.getBatteryStatus(scope.row.battery_level)\n              }, null, 8 /* PROPS */, [\"percentage\", \"status\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"status\",\n            label: \"状态\",\n            width: \"100\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_tag, {\n                type: $setup.getStatusType(scope.row.status)\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($setup.getStatusText(scope.row.status)), 1 /* TEXT */)];\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"bound_station_id\",\n            label: \"绑定充电站\",\n            width: \"120\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [scope.row.bound_station_id ? (_openBlock(), _createBlock(_component_el_tag, {\n                key: 0,\n                type: \"success\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($setup.getStationName(scope.row.bound_station_id)), 1 /* TEXT */)];\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"未绑定\"))];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"last_charging\",\n            label: \"上次充电时间\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            label: \"操作\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createCommentVNode(\" 绑定充电站按钮 \"), !scope.row.bound_station_id ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 0,\n                size: \"small\",\n                type: \"primary\",\n                onClick: function onClick($event) {\n                  return $setup.showBindStationDialog(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[4] || (_cache[4] = [_createTextVNode(\" 绑定充电站 \")]);\n                }),\n                _: 2 /* DYNAMIC */,\n                __: [4]\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 解绑充电站按钮 \"), scope.row.bound_station_id ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 1,\n                size: \"small\",\n                type: \"warning\",\n                onClick: function onClick($event) {\n                  return $setup.unbindStation(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[5] || (_cache[5] = [_createTextVNode(\" 解绑充电站 \")]);\n                }),\n                _: 2 /* DYNAMIC */,\n                __: [5]\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 开始充电按钮 \"), scope.row.bound_station_id && scope.row.status !== 'charging' && scope.row.battery_level < 100 ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 2,\n                size: \"small\",\n                type: \"success\",\n                onClick: function onClick($event) {\n                  return $setup.startCharging(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[6] || (_cache[6] = [_createTextVNode(\" 开始充电 \")]);\n                }),\n                _: 2 /* DYNAMIC */,\n                __: [6]\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 模拟低电量按钮 \"), scope.row.battery_level > 20 ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 3,\n                size: \"small\",\n                type: \"danger\",\n                onClick: function onClick($event) {\n                  return $setup.simulateLowBattery(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[7] || (_cache[7] = [_createTextVNode(\" 模拟低电量 \")]);\n                }),\n                _: 2 /* DYNAMIC */,\n                __: [7]\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]]) : !$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_empty, {\n        description: \"暂无数据\"\n      })])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 分页控件 \"), $setup.robots && $setup.robots.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_el_pagination, {\n        \"current-page\": $setup.currentPage,\n        \"onUpdate:currentPage\": _cache[0] || (_cache[0] = function ($event) {\n          return $setup.currentPage = $event;\n        }),\n        \"page-size\": $setup.pageSize,\n        total: $setup.totalItems,\n        layout: \"total, prev, pager, next, jumper\",\n        onCurrentChange: $setup.handleCurrentChange\n      }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\", \"onCurrentChange\"])])) : _createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 绑定充电站对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"绑定充电站\",\n    modelValue: $setup.bindDialogVisible,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n      return $setup.bindDialogVisible = $event;\n    }),\n    \"close-on-click-modal\": false,\n    width: \"500px\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_8, [_createVNode(_component_el_button, {\n        onClick: _cache[2] || (_cache[2] = function ($event) {\n          return $setup.bindDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[10] || (_cache[10] = [_createTextVNode(\"取消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [10]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.bindStation,\n        disabled: !$setup.selectedStationId || $setup.availableStations.length === 0\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[11] || (_cache[11] = [_createTextVNode(\" 确定 \")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [11]\n      }, 8 /* PROPS */, [\"onClick\", \"disabled\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      var _$setup$selectedRobot;\n      return [$setup.availableStations.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"p\", null, [_cache[8] || (_cache[8] = _createTextVNode(\"为机器人 \")), _createElementVNode(\"strong\", null, _toDisplayString((_$setup$selectedRobot = $setup.selectedRobot) === null || _$setup$selectedRobot === void 0 ? void 0 : _$setup$selectedRobot.name), 1 /* TEXT */), _cache[9] || (_cache[9] = _createTextVNode(\" 选择要绑定的充电站：\"))]), _createVNode(_component_el_select, {\n        modelValue: $setup.selectedStationId,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return $setup.selectedStationId = $event;\n        }),\n        placeholder: \"请选择充电站\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        \"default\": _withCtx(function () {\n          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.availableStations, function (station) {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: station.id,\n              label: \"\".concat(station.name, \" (ID: \").concat(station.id, \")\"),\n              value: station.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createVNode(_component_el_alert, {\n        title: \"没有可用的充电站\",\n        type: \"warning\",\n        description: \"所有充电站已被绑定或不可用\",\n        \"show-icon\": \"\"\n      })]))];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_card","_withCtx","$setup","error","_hoisted_2","_component_el_alert","title","type","description","_createCommentVNode","robots","length","_createBlock","_component_el_table","data","paginatedRobots","style","_component_el_table_column","prop","label","width","scope","_component_el_progress","percentage","row","battery_level","status","getBatteryStatus","_","_component_el_tag","getStatusType","_createTextVNode","_toDisplayString","getStatusText","bound_station_id","getStationName","_hoisted_3","_component_el_button","size","onClick","$event","showBindStationDialog","_cache","__","unbindStation","startCharging","simulateLowBattery","loading","_hoisted_4","_component_el_empty","_hoisted_5","_component_el_pagination","currentPage","pageSize","total","totalItems","layout","onCurrentChange","handleCurrentChange","_component_el_dialog","modelValue","bindDialogVisible","footer","_hoisted_8","bindStation","disabled","selectedStationId","availableStations","_$setup$selectedRobot","_hoisted_6","selectedRobot","name","_component_el_select","placeholder","_Fragment","_renderList","station","_component_el_option","id","concat","value","_hoisted_7"],"sources":["C:\\Users\\jiaronghao\\Desktop\\Documents\\本科论文编写\\5、货仓机器人激光充电和能效管理云平台的设计与实现\\Y0527-final\\frontend\\src\\views\\Robots.vue"],"sourcesContent":["<template>\r\n  <div class=\"robots-container\">\r\n    <h2>机器人管理</h2>\r\n    <el-card class=\"box-card\">\r\n      <div v-if=\"error\" class=\"error-message\">\r\n        <el-alert\r\n          title=\"加载数据出错\"\r\n          type=\"error\"\r\n          :description=\"error\"\r\n          show-icon\r\n        />\r\n      </div>\r\n      <el-table \r\n        v-if=\"robots && robots.length > 0\" \r\n        :data=\"paginatedRobots\" \r\n        style=\"width: 100%\" \r\n        v-loading=\"loading\">\r\n        <el-table-column prop=\"id\" label=\"机器人ID\" width=\"80\" />\r\n        <el-table-column prop=\"name\" label=\"名称\" width=\"150\" />\r\n        <el-table-column prop=\"battery_level\" label=\"电量\" width=\"150\">\r\n          <template #default=\"scope\">\r\n            <el-progress \r\n              :percentage=\"scope.row.battery_level\" \r\n              :status=\"getBatteryStatus(scope.row.battery_level)\" \r\n            />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getStatusType(scope.row.status)\">\r\n              {{ getStatusText(scope.row.status) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"bound_station_id\" label=\"绑定充电站\" width=\"120\">\r\n          <template #default=\"scope\">\r\n            <el-tag v-if=\"scope.row.bound_station_id\" type=\"success\">\r\n              {{ getStationName(scope.row.bound_station_id) }}\r\n            </el-tag>\r\n            <span v-else>未绑定</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"last_charging\" label=\"上次充电时间\" width=\"180\" />\r\n        <el-table-column label=\"操作\">\r\n          <template #default=\"scope\">\r\n            <!-- 绑定充电站按钮 -->\r\n            <el-button \r\n              v-if=\"!scope.row.bound_station_id\" \r\n              size=\"small\" \r\n              type=\"primary\" \r\n              @click=\"showBindStationDialog(scope.row)\"\r\n            >\r\n              绑定充电站\r\n            </el-button>\r\n            \r\n            <!-- 解绑充电站按钮 -->\r\n            <el-button \r\n              v-if=\"scope.row.bound_station_id\" \r\n              size=\"small\" \r\n              type=\"warning\" \r\n              @click=\"unbindStation(scope.row)\"\r\n            >\r\n              解绑充电站\r\n            </el-button>\r\n            \r\n            <!-- 开始充电按钮 -->\r\n            <el-button \r\n              v-if=\"scope.row.bound_station_id && scope.row.status !== 'charging' && scope.row.battery_level < 100\" \r\n              size=\"small\" \r\n              type=\"success\" \r\n              @click=\"startCharging(scope.row)\"\r\n            >\r\n              开始充电\r\n            </el-button>\r\n            \r\n            <!-- 模拟低电量按钮 -->\r\n            <el-button \r\n              v-if=\"scope.row.battery_level > 20\" \r\n              size=\"small\" \r\n              type=\"danger\" \r\n              @click=\"simulateLowBattery(scope.row)\"\r\n            >\r\n              模拟低电量\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div v-else-if=\"!loading\" class=\"no-data\">\r\n        <el-empty description=\"暂无数据\" />\r\n      </div>\r\n      \r\n      <!-- 分页控件 -->\r\n      <div class=\"pagination-container\" v-if=\"robots && robots.length > 0\">\r\n        <el-pagination\r\n          v-model:current-page=\"currentPage\"\r\n          :page-size=\"pageSize\"\r\n          :total=\"totalItems\"\r\n          layout=\"total, prev, pager, next, jumper\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n    \r\n    <!-- 绑定充电站对话框 -->\r\n    <el-dialog \r\n      title=\"绑定充电站\" \r\n      v-model=\"bindDialogVisible\"\r\n      :close-on-click-modal=\"false\"\r\n      width=\"500px\">\r\n      <div v-if=\"availableStations.length > 0\">\r\n        <p>为机器人 <strong>{{ selectedRobot?.name }}</strong> 选择要绑定的充电站：</p>\r\n        <el-select v-model=\"selectedStationId\" placeholder=\"请选择充电站\" style=\"width: 100%\">\r\n          <el-option\r\n            v-for=\"station in availableStations\"\r\n            :key=\"station.id\"\r\n            :label=\"`${station.name} (ID: ${station.id})`\"\r\n            :value=\"station.id\"\r\n          />\r\n        </el-select>\r\n      </div>\r\n      <div v-else>\r\n        <el-alert\r\n          title=\"没有可用的充电站\"\r\n          type=\"warning\"\r\n          description=\"所有充电站已被绑定或不可用\"\r\n          show-icon\r\n        />\r\n      </div>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"bindDialogVisible = false\">取消</el-button>\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"bindStation\" \r\n            :disabled=\"!selectedStationId || availableStations.length === 0\"\r\n          >\r\n            确定\r\n          </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { robotApi, stationApi } from '@/api'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { ref, onMounted, computed } from 'vue'\r\n\r\nexport default {\r\n  name: 'Robots',\r\n  setup() {\r\n    // 数据\r\n    const robots = ref([])\r\n    const stations = ref([])\r\n    const loading = ref(false)\r\n    const error = ref(null)\r\n    const currentPage = ref(1)\r\n    const pageSize = ref(10)\r\n    const bindDialogVisible = ref(false)\r\n    const selectedRobot = ref(null)\r\n    const selectedStationId = ref(null)\r\n    \r\n    // 计算属性\r\n    const totalItems = computed(() => robots.value.length)\r\n    const paginatedRobots = computed(() => {\r\n      const startIndex = (currentPage.value - 1) * pageSize.value\r\n      const endIndex = startIndex + pageSize.value\r\n      return robots.value.slice(startIndex, endIndex)\r\n    })\r\n    \r\n    // 可用的充电站（未绑定的）\r\n    const availableStations = computed(() => {\r\n      return stations.value.filter(station => \r\n        !station.bound_robot_id && station.status === 'idle'\r\n      )\r\n    })\r\n    \r\n    // 获取充电站名称\r\n    const getStationName = (stationId) => {\r\n      const station = stations.value.find(s => s.id === stationId)\r\n      return station ? station.name : `充电站 ${stationId}`\r\n    }\r\n    \r\n    // 方法\r\n    const fetchRobots = async () => {\r\n      try {\r\n        loading.value = true\r\n        error.value = null\r\n        console.log('开始获取机器人数据')\r\n        \r\n        try {\r\n          const response = await robotApi.getAll()\r\n          console.log('获取到机器人数据:', response.data)\r\n          \r\n          // 确保数据是数组\r\n          if (Array.isArray(response.data)) {\r\n            // 检查每个机器人对象的字段\r\n            const validRobots = response.data.filter(robot => {\r\n              const isValid = robot && \r\n                             typeof robot === 'object' && \r\n                             'id' in robot && \r\n                             'name' in robot && \r\n                             'battery_level' in robot && \r\n                             'status' in robot;\r\n              if (!isValid) {\r\n                console.warn('过滤掉无效的机器人数据:', robot);\r\n              }\r\n              return isValid;\r\n            });\r\n            \r\n            console.log('有效的机器人数据:', validRobots);\r\n            robots.value = validRobots;\r\n            // 重置为第一页\r\n            currentPage.value = 1;\r\n            console.log('成功设置机器人数据，数量:', robots.value.length)\r\n          } else {\r\n            console.error('API返回的机器人数据不是数组:', response.data)\r\n            robots.value = [] // 设置为空数组\r\n            error.value = '机器人数据格式错误，请联系管理员'\r\n            ElMessage.error('机器人数据格式错误')\r\n          }\r\n        } catch (apiError) {\r\n          console.error('API调用出错:', apiError)\r\n          robots.value = [] // 确保错误时也设置为空数组\r\n          error.value = `API调用出错: ${apiError.message || '未知错误'}`\r\n          ElMessage.error('获取机器人数据失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取机器人列表失败:', error)\r\n        robots.value = [] // 确保错误时也设置为空数组\r\n        error.value = `获取数据失败: ${error.message || '未知错误'}`\r\n        ElMessage.error('获取机器人列表失败')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    const fetchStations = async () => {\r\n      try {\r\n        console.log('开始获取充电站数据')\r\n        const response = await stationApi.getAll()\r\n        \r\n        if (Array.isArray(response.data)) {\r\n          stations.value = response.data\r\n          console.log('成功设置充电站数据，数量:', stations.value.length)\r\n        } else {\r\n          console.error('API返回的充电站数据不是数组:', response.data)\r\n          stations.value = [] // 设置为空数组\r\n        }\r\n      } catch (error) {\r\n        console.error('获取充电站列表失败:', error)\r\n        stations.value = [] // 确保错误时也设置为空数组\r\n        ElMessage.error('获取充电站列表失败')\r\n      }\r\n    }\r\n    \r\n    // 分页相关方法\r\n    const handleCurrentChange = (page) => {\r\n      currentPage.value = page\r\n      console.log(`当前页: ${currentPage.value}`)\r\n    }\r\n    \r\n    // 显示绑定充电站对话框\r\n    const showBindStationDialog = (robot) => {\r\n      selectedRobot.value = robot\r\n      selectedStationId.value = null\r\n      bindDialogVisible.value = true\r\n    }\r\n    \r\n    // 绑定充电站\r\n    const bindStation = async () => {\r\n      if (!selectedRobot.value || !selectedStationId.value) {\r\n        ElMessage.warning('请先选择充电站')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        const robotId = selectedRobot.value.id\r\n        const stationId = selectedStationId.value\r\n        \r\n        await robotApi.bindToStation(robotId, stationId)\r\n        ElMessage.success(`成功绑定机器人 ${selectedRobot.value.name} 到充电站`)\r\n        \r\n        // 关闭对话框\r\n        bindDialogVisible.value = false\r\n        \r\n        // 刷新数据\r\n        await Promise.all([fetchRobots(), fetchStations()])\r\n      } catch (error) {\r\n        console.error('绑定充电站失败:', error)\r\n        ElMessage.error(`绑定充电站失败: ${error.message || '未知错误'}`)\r\n      }\r\n    }\r\n    \r\n    // 解绑充电站\r\n    const unbindStation = async (robot) => {\r\n      if (!robot.bound_station_id) {\r\n        ElMessage.warning('该机器人未绑定充电站')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        // 显示确认对话框\r\n        await ElMessageBox.confirm(\r\n          `确定要解除机器人 ${robot.name} 与充电站的绑定吗？`,\r\n          '解绑确认',\r\n          {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }\r\n        )\r\n        \r\n        await robotApi.unbindFromStation(robot.id, robot.bound_station_id)\r\n        ElMessage.success(`成功解除机器人 ${robot.name} 与充电站的绑定`)\r\n        \r\n        // 刷新数据\r\n        await Promise.all([fetchRobots(), fetchStations()])\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          console.error('解绑充电站失败:', error)\r\n          ElMessage.error(`解绑充电站失败: ${error.message || '未知错误'}`)\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 开始充电\r\n    const startCharging = async (robot) => {\r\n      if (!robot.bound_station_id) {\r\n        ElMessage.warning('请先绑定充电站')\r\n        return\r\n      }\r\n      \r\n      if (robot.status === 'charging') {\r\n        ElMessage.warning('该机器人已经在充电')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        await robotApi.startCharging(robot.id)\r\n        ElMessage.success(`成功开始机器人 ${robot.name} 的充电`)\r\n        \r\n        // 刷新数据\r\n        await Promise.all([fetchRobots(), fetchStations()])\r\n      } catch (error) {\r\n        console.error('开始充电失败:', error)\r\n        ElMessage.error(`开始充电失败: ${error.message || '未知错误'}`)\r\n      }\r\n    }\r\n    \r\n    // 模拟低电量\r\n    const simulateLowBattery = async (robot) => {\r\n      try {\r\n        await robotApi.simulateLowBattery(robot.id)\r\n        ElMessage.success(`已将机器人 ${robot.name} 的电量降至 15%`)\r\n        \r\n        // 刷新数据\r\n        await fetchRobots()\r\n      } catch (error) {\r\n        console.error('模拟低电量失败:', error)\r\n        ElMessage.error(`模拟低电量失败: ${error.message || '未知错误'}`)\r\n      }\r\n    }\r\n    \r\n    // 获取状态类型和文本\r\n    const getStatusType = (status) => {\r\n      const types = {\r\n        'idle': 'info',\r\n        'working': 'success',\r\n        'charging': 'primary',\r\n        'error': 'danger'\r\n      }\r\n      return types[status] || 'info'\r\n    }\r\n    \r\n    const getStatusText = (status) => {\r\n      const texts = {\r\n        'idle': '空闲',\r\n        'working': '工作中',\r\n        'charging': '充电中',\r\n        'error': '故障'\r\n      }\r\n      return texts[status] || status\r\n    }\r\n    \r\n    // 获取电池状态\r\n    const getBatteryStatus = (level) => {\r\n      if (level < 20) return 'exception'\r\n      if (level < 50) return 'warning'\r\n      return 'success'\r\n    }\r\n    \r\n    // 生命周期钩子\r\n    onMounted(() => {\r\n      console.log('Robots组件已挂载，准备获取数据')\r\n      // 添加这个延迟调用以避免可能的ResizeObserver问题\r\n      setTimeout(() => {\r\n        Promise.all([fetchRobots(), fetchStations()])\r\n      }, 0)\r\n    })\r\n    \r\n    return {\r\n      robots,\r\n      stations,\r\n      loading,\r\n      error,\r\n      currentPage,\r\n      pageSize,\r\n      totalItems,\r\n      paginatedRobots,\r\n      bindDialogVisible,\r\n      selectedRobot,\r\n      selectedStationId,\r\n      availableStations,\r\n      handleCurrentChange,\r\n      getStatusType,\r\n      getStatusText,\r\n      getBatteryStatus,\r\n      getStationName,\r\n      showBindStationDialog,\r\n      bindStation,\r\n      unbindStation,\r\n      startCharging,\r\n      simulateLowBattery\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.robots-container {\r\n  padding: 20px;\r\n}\r\n.error-message {\r\n  margin-bottom: 20px;\r\n}\r\n.no-data {\r\n  padding: 20px 0;\r\n}\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}