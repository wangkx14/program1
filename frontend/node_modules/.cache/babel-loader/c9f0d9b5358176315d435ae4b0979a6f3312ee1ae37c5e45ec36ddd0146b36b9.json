{"ast":null,"code":"import \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveDirective as _resolveDirective, createBlock as _createBlock, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"test-api-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"button-group\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"result-container\"\n};\nvar _hoisted_4 = {\n  key: 1,\n  \"class\": \"error-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"API 测试页面\", -1 /* HOISTED */)), _withDirectives((_openBlock(), _createBlock(_component_el_card, {\n    \"class\": \"box-card\"\n  }, {\n    header: _withCtx(function () {\n      return _cache[0] || (_cache[0] = [_createElementVNode(\"div\", {\n        \"class\": \"card-header\"\n      }, [_createElementVNode(\"span\", null, \"API 连接测试\")], -1 /* HOISTED */)]);\n    }),\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.testDataLoading\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[1] || (_cache[1] = [_createTextVNode(\"测试数据加载\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [1]\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"success\",\n        onClick: $options.testStations\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[2] || (_cache[2] = [_createTextVNode(\"测试充电站API\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [2]\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"info\",\n        onClick: $options.testRobots\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[3] || (_cache[3] = [_createTextVNode(\"测试机器人API\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [3]\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"warning\",\n        onClick: $options.testOrders\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[4] || (_cache[4] = [_createTextVNode(\"测试订单API\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [4]\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"danger\",\n        onClick: $options.testDashboard\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[5] || (_cache[5] = [_createTextVNode(\"测试仪表盘API\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [5]\n      }, 8 /* PROPS */, [\"onClick\"])]), $data.result ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"测试结果：\", -1 /* HOISTED */)), _createElementVNode(\"pre\", null, _toDisplayString(JSON.stringify($data.result, null, 2)), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"错误信息：\", -1 /* HOISTED */)), _createElementVNode(\"pre\", null, _toDisplayString($data.error), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1 /* STABLE */\n  })), [[_directive_loading, $data.loading]])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_createBlock","_component_el_card","header","_withCtx","_cache","_hoisted_2","_createVNode","_component_el_button","type","onClick","$options","testDataLoading","_createTextVNode","_","__","testStations","testRobots","testOrders","testDashboard","$data","result","_hoisted_3","_toDisplayString","JSON","stringify","_createCommentVNode","error","_hoisted_4","loading"],"sources":["D:\\software_data\\Project\\Y0527\\CODE_BAK\\frontend\\src\\views\\TestApi.vue"],"sourcesContent":["<template>\r\n  <div class=\"test-api-container\">\r\n    <h2>API 测试页面</h2>\r\n    \r\n    <el-card class=\"box-card\" v-loading=\"loading\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>API 连接测试</span>\r\n        </div>\r\n      </template>\r\n      \r\n      <div class=\"button-group\">\r\n        <el-button type=\"primary\" @click=\"testDataLoading\">测试数据加载</el-button>\r\n        <el-button type=\"success\" @click=\"testStations\">测试充电站API</el-button>\r\n        <el-button type=\"info\" @click=\"testRobots\">测试机器人API</el-button>\r\n        <el-button type=\"warning\" @click=\"testOrders\">测试订单API</el-button>\r\n        <el-button type=\"danger\" @click=\"testDashboard\">测试仪表盘API</el-button>\r\n      </div>\r\n      \r\n      <div v-if=\"result\" class=\"result-container\">\r\n        <h3>测试结果：</h3>\r\n        <pre>{{ JSON.stringify(result, null, 2) }}</pre>\r\n      </div>\r\n      \r\n      <div v-if=\"error\" class=\"error-container\">\r\n        <h3>错误信息：</h3>\r\n        <pre>{{ error }}</pre>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { testApi, stationApi, robotApi, orderApi, systemApi } from '@/api'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'TestApi',\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      result: null,\r\n      error: null\r\n    }\r\n  },\r\n  methods: {\r\n    async testDataLoading() {\r\n      try {\r\n        this.loading = true\r\n        this.result = null\r\n        this.error = null\r\n        \r\n        console.log('测试数据加载')\r\n        const response = await testApi.checkData()\r\n        this.result = response.data\r\n        ElMessage.success('数据加载测试成功')\r\n      } catch (error) {\r\n        this.error = error.message || '未知错误'\r\n        ElMessage.error('数据加载测试失败')\r\n        console.error('测试数据加载出错:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    async testStations() {\r\n      try {\r\n        this.loading = true\r\n        this.result = null\r\n        this.error = null\r\n        \r\n        console.log('测试充电站API')\r\n        const response = await stationApi.getAll()\r\n        this.result = response.data\r\n        ElMessage.success('充电站API测试成功')\r\n      } catch (error) {\r\n        this.error = error.message || '未知错误'\r\n        ElMessage.error('充电站API测试失败')\r\n        console.error('测试充电站API出错:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    async testRobots() {\r\n      try {\r\n        this.loading = true\r\n        this.result = null\r\n        this.error = null\r\n        \r\n        console.log('测试机器人API')\r\n        const response = await robotApi.getAll()\r\n        this.result = response.data\r\n        ElMessage.success('机器人API测试成功')\r\n      } catch (error) {\r\n        this.error = error.message || '未知错误'\r\n        ElMessage.error('机器人API测试失败')\r\n        console.error('测试机器人API出错:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    async testOrders() {\r\n      try {\r\n        this.loading = true\r\n        this.result = null\r\n        this.error = null\r\n        \r\n        console.log('测试订单API')\r\n        const response = await orderApi.getAll()\r\n        this.result = response.data\r\n        ElMessage.success('订单API测试成功')\r\n      } catch (error) {\r\n        this.error = error.message || '未知错误'\r\n        ElMessage.error('订单API测试失败')\r\n        console.error('测试订单API出错:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    async testDashboard() {\r\n      try {\r\n        this.loading = true\r\n        this.result = null\r\n        this.error = null\r\n        \r\n        console.log('测试仪表盘API')\r\n        const response = await systemApi.getDashboardData()\r\n        this.result = response.data\r\n        ElMessage.success('仪表盘API测试成功')\r\n      } catch (error) {\r\n        this.error = error.message || '未知错误'\r\n        ElMessage.error('仪表盘API测试失败')\r\n        console.error('测试仪表盘API出错:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.test-api-container {\r\n  padding: 20px;\r\n}\r\n\r\n.button-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.button-group .el-button {\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.result-container, .error-container {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.result-container {\r\n  background-color: #f0f9eb;\r\n}\r\n\r\n.error-container {\r\n  background-color: #fef0f0;\r\n}\r\n\r\npre {\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  background-color: #f5f5f5;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n</style> "],"mappings":";;;;EACO,SAAM;AAAoB;;EAUtB,SAAM;AAAc;;EAX/BA,GAAA;EAmByB,SAAM;;;EAnB/BA,GAAA;EAwBwB,SAAM;;;;;;uBAvB5BC,mBAAA,CA4BM,OA5BNC,UA4BM,G,0BA3BJC,mBAAA,CAAiB,YAAb,UAAQ,sB,+BAEZC,YAAA,CAwBUC,kBAAA;IAxBD,SAAM;EAAU;IACZC,MAAM,EAAAC,QAAA,CACf;MAAA,OAEMC,MAAA,QAAAA,MAAA,OAFNL,mBAAA,CAEM;QAFD,SAAM;MAAa,IACtBA,mBAAA,CAAqB,cAAf,UAAQ,E;;IAPxB,WAAAI,QAAA,CAWM;MAAA,OAMM,CANNJ,mBAAA,CAMM,OANNM,UAMM,GALJC,YAAA,CAAqEC,oBAAA;QAA1DC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAEC,QAAA,CAAAC;;QAZ1C,WAAAR,QAAA,CAY2D;UAAA,OAAMC,MAAA,QAAAA,MAAA,OAZjEQ,gBAAA,CAY2D,QAAM,E;;QAZjEC,CAAA;QAAAC,EAAA;sCAaQR,YAAA,CAAoEC,oBAAA;QAAzDC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAEC,QAAA,CAAAK;;QAb1C,WAAAZ,QAAA,CAawD;UAAA,OAAQC,MAAA,QAAAA,MAAA,OAbhEQ,gBAAA,CAawD,UAAQ,E;;QAbhEC,CAAA;QAAAC,EAAA;sCAcQR,YAAA,CAA+DC,oBAAA;QAApDC,IAAI,EAAC,MAAM;QAAEC,OAAK,EAAEC,QAAA,CAAAM;;QAdvC,WAAAb,QAAA,CAcmD;UAAA,OAAQC,MAAA,QAAAA,MAAA,OAd3DQ,gBAAA,CAcmD,UAAQ,E;;QAd3DC,CAAA;QAAAC,EAAA;sCAeQR,YAAA,CAAiEC,oBAAA;QAAtDC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAEC,QAAA,CAAAO;;QAf1C,WAAAd,QAAA,CAesD;UAAA,OAAOC,MAAA,QAAAA,MAAA,OAf7DQ,gBAAA,CAesD,SAAO,E;;QAf7DC,CAAA;QAAAC,EAAA;sCAgBQR,YAAA,CAAoEC,oBAAA;QAAzDC,IAAI,EAAC,QAAQ;QAAEC,OAAK,EAAEC,QAAA,CAAAQ;;QAhBzC,WAAAf,QAAA,CAgBwD;UAAA,OAAQC,MAAA,QAAAA,MAAA,OAhBhEQ,gBAAA,CAgBwD,UAAQ,E;;QAhBhEC,CAAA;QAAAC,EAAA;wCAmBiBK,KAAA,CAAAC,MAAM,I,cAAjBvB,mBAAA,CAGM,OAHNwB,UAGM,G,0BAFJtB,mBAAA,CAAc,YAAV,OAAK,sBACTA,mBAAA,CAAgD,aAAAuB,gBAAA,CAAxCC,IAAI,CAACC,SAAS,CAACL,KAAA,CAAAC,MAAM,2B,KArBrCK,mBAAA,gBAwBiBN,KAAA,CAAAO,KAAK,I,cAAhB7B,mBAAA,CAGM,OAHN8B,UAGM,G,0BAFJ5B,mBAAA,CAAc,YAAV,OAAK,sBACTA,mBAAA,CAAsB,aAAAuB,gBAAA,CAAdH,KAAA,CAAAO,KAAK,iB,KA1BrBD,mBAAA,e;;IAAAZ,CAAA;6BAIyCM,KAAA,CAAAS,OAAO,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}