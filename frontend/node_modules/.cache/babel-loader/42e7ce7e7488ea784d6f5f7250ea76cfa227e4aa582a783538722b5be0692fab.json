{"ast":null,"code":"import _regeneratorRuntime from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport * as echarts from 'echarts';\nimport energyEfficiencyApi from '@/api/energyEfficiency';\nimport { formatDateTime, calculateDuration } from '@/utils/dateTime';\nimport { ArrowUp, ArrowDown } from '@element-plus/icons-vue';\nexport default {\n  name: 'EnergyEfficiencyAnalysis',\n  components: {\n    ArrowUp: ArrowUp,\n    ArrowDown: ArrowDown\n  },\n  data: function data() {\n    return {\n      // 固定的默认筛选条件（不再显示在UI上）\n      dateRange: [new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000), new Date()],\n      selectedStations: [],\n      selectedRobots: [],\n      // 数据列表\n      stations: [],\n      robots: [],\n      // 图表相关\n      currentChart: 'efficiency',\n      currentChartTitle: '充电效率趋势分析',\n      charts: {\n        efficiency: null,\n        consumption: null,\n        utilization: null,\n        robot: null,\n        peak: null\n      },\n      // KPI数据\n      kpiData: [{\n        title: '平均充电效率',\n        value: 0,\n        unit: '%',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '总能耗',\n        value: 0,\n        unit: 'kWh',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '充电器利用率',\n        value: 0,\n        unit: '%',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '平均等待时间',\n        value: 0,\n        unit: 'min',\n        change: 0,\n        trend: 'down'\n      }, {\n        title: '充电成功率',\n        value: 0,\n        unit: '%',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '总充电次数',\n        value: 0,\n        unit: '次',\n        change: 0,\n        trend: 'up'\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.initData();\n\n    // 添加窗口resize监听器，确保图表大小适应窗口变化\n    window.addEventListener('resize', this.handleResize);\n\n    // 监听充电站数据变化事件\n    try {\n      if (this.$root && this.$root.$on) {\n        this.$root.$on('station-data-changed', this.handleStationDataChanged);\n      }\n    } catch (e) {\n      console.error('注册全局事件监听失败:', e);\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    // 移除resize监听器\n    window.removeEventListener('resize', this.handleResize);\n\n    // 移除充电站数据变化事件监听\n    try {\n      if (this.$root && this.$root.$off) {\n        this.$root.$off('station-data-changed', this.handleStationDataChanged);\n      }\n    } catch (e) {\n      console.error('移除全局事件监听失败:', e);\n    }\n\n    // 销毁所有图表实例，避免内存泄漏\n    this.disposeAllCharts();\n  },\n  methods: {\n    // 处理充电站数据变化事件\n    handleStationDataChanged: function handleStationDataChanged() {\n      var _this = this;\n      console.log('检测到充电站数据变化，刷新图表');\n      // 先清理所有图表实例\n      this.disposeAllCharts();\n      // 然后重新获取数据并渲染\n      this.$nextTick(function () {\n        _this.initData();\n      });\n    },\n    // 处理窗口调整大小事件\n    handleResize: function handleResize() {\n      var _this2 = this;\n      // 调整所有已创建的图表\n      Object.keys(this.charts).forEach(function (key) {\n        if (_this2.charts[key]) {\n          try {\n            _this2.charts[key].resize();\n          } catch (error) {\n            console.error(\"\\u8C03\\u6574\\u56FE\\u8868 \".concat(key, \" \\u5927\\u5C0F\\u5931\\u8D25:\"), error);\n            // 如果调整大小失败，尝试销毁图表以避免进一步的错误\n            try {\n              _this2.charts[key].dispose();\n              _this2.charts[key] = null;\n            } catch (disposeError) {\n              console.error(\"\\u9500\\u6BC1\\u56FE\\u8868 \".concat(key, \" \\u5931\\u8D25:\"), disposeError);\n            }\n          }\n        }\n      });\n    },\n    // 销毁所有图表实例\n    disposeAllCharts: function disposeAllCharts() {\n      var _this3 = this;\n      Object.keys(this.charts).forEach(function (key) {\n        if (_this3.charts[key]) {\n          try {\n            // 移除所有事件监听器\n            _this3.charts[key].off('click');\n            _this3.charts[key].off('resize');\n            // 销毁图表实例\n            _this3.charts[key].dispose();\n            _this3.charts[key] = null;\n          } catch (error) {\n            console.error(\"\\u9500\\u6BC1\\u56FE\\u8868 \".concat(key, \" \\u5931\\u8D25:\"), error);\n          }\n        }\n      });\n    },\n    initData: function initData() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var stationsResponse, robotsResponse;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return energyEfficiencyApi.getStations();\n            case 3:\n              stationsResponse = _context.sent;\n              _this4.stations = stationsResponse.data;\n\n              // 获取机器人列表\n              _context.next = 7;\n              return energyEfficiencyApi.getRobots();\n            case 7:\n              robotsResponse = _context.sent;\n              _this4.robots = robotsResponse.data;\n\n              // 获取初始数据\n              _this4.fetchKpiData();\n              _this4.fetchChartData();\n              _context.next = 17;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('初始化数据失败:', _context.t0);\n              _this4.$message.error('加载数据失败，请重试');\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 13]]);\n      }))();\n    },\n    // 刷新所有数据\n    refreshData: function refreshData() {\n      this.fetchKpiData();\n      this.fetchChartData();\n    },\n    // 获取KPI数据\n    fetchKpiData: function fetchKpiData() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var params, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              params = _this5.getFilterParams();\n              _context2.next = 4;\n              return energyEfficiencyApi.getKpiData(params);\n            case 4:\n              response = _context2.sent;\n              _this5.kpiData = [{\n                title: '平均充电效率',\n                value: response.data.avgEfficiency.toFixed(2),\n                unit: '%',\n                change: response.data.efficiencyChange.toFixed(2),\n                trend: response.data.efficiencyChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '总能耗',\n                value: response.data.totalEnergy.toFixed(2),\n                unit: 'kWh',\n                change: response.data.energyChange.toFixed(2),\n                trend: response.data.energyChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '充电器利用率',\n                value: response.data.utilization.toFixed(2),\n                unit: '%',\n                change: response.data.utilizationChange.toFixed(2),\n                trend: response.data.utilizationChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '平均等待时间',\n                value: response.data.avgWaitTime.toFixed(2),\n                unit: 'min',\n                change: response.data.waitTimeChange.toFixed(2),\n                trend: response.data.waitTimeChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '充电成功率',\n                value: response.data.successRate.toFixed(2),\n                unit: '%',\n                change: response.data.successRateChange.toFixed(2),\n                trend: response.data.successRateChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '总充电次数',\n                value: response.data.totalOrders || 0,\n                unit: '次',\n                change: response.data.ordersChange || 0,\n                trend: (response.data.ordersChange || 0) >= 0 ? 'up' : 'down'\n              }];\n              _context2.next = 12;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('获取KPI数据失败:', _context2.t0);\n              _this5.$message.error('获取KPI数据失败');\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 8]]);\n      }))();\n    },\n    // 获取图表数据并渲染\n    fetchChartData: function fetchChartData() {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var params, chartKey;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              params = _this6.getFilterParams(); // 根据当前选择的图表类型获取数据\n              _context3.t0 = _this6.currentChart;\n              _context3.next = _context3.t0 === 'efficiency' ? 5 : _context3.t0 === 'consumption' ? 8 : _context3.t0 === 'utilization' ? 11 : _context3.t0 === 'robot' ? 14 : _context3.t0 === 'peak' ? 17 : 20;\n              break;\n            case 5:\n              _context3.next = 7;\n              return _this6.renderEfficiencyChart(params);\n            case 7:\n              return _context3.abrupt(\"break\", 20);\n            case 8:\n              _context3.next = 10;\n              return _this6.renderConsumptionChart(params);\n            case 10:\n              return _context3.abrupt(\"break\", 20);\n            case 11:\n              _context3.next = 13;\n              return _this6.renderUtilizationChart(params);\n            case 13:\n              return _context3.abrupt(\"break\", 20);\n            case 14:\n              _context3.next = 16;\n              return _this6.renderRobotChart(params);\n            case 16:\n              return _context3.abrupt(\"break\", 20);\n            case 17:\n              _context3.next = 19;\n              return _this6.renderPeakChart(params);\n            case 19:\n              return _context3.abrupt(\"break\", 20);\n            case 20:\n              _context3.next = 28;\n              break;\n            case 22:\n              _context3.prev = 22;\n              _context3.t1 = _context3[\"catch\"](0);\n              console.error('获取图表数据失败:', _context3.t1);\n              _this6.$message.error('获取图表数据失败');\n\n              // 清理错误的图表实例\n              chartKey = _this6.currentChart;\n              if (_this6.charts[chartKey]) {\n                try {\n                  _this6.charts[chartKey].dispose();\n                  _this6.charts[chartKey] = null;\n                } catch (cleanupError) {\n                  console.error(\"\\u6E05\\u7406\\u56FE\\u8868\\u5931\\u8D25: \".concat(cleanupError));\n                }\n              }\n            case 28:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 22]]);\n      }))();\n    },\n    // 充电效率趋势图\n    renderEfficiencyChart: function renderEfficiencyChart(params) {\n      var _this7 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return energyEfficiencyApi.getEfficiencyTrend(params);\n            case 3:\n              response = _context4.sent;\n              if (_this7.$refs.efficiencyChart) {\n                _context4.next = 7;\n                break;\n              }\n              console.error('效率趋势图DOM元素不存在');\n              return _context4.abrupt(\"return\");\n            case 7:\n              if (!(!response.data || !response.data.stations || !response.data.timeline)) {\n                _context4.next = 13;\n                break;\n              }\n              console.error('效率趋势数据异常:', response.data);\n              // 创建空图表以避免错误\n              if (_this7.charts.efficiency) {\n                _this7.charts.efficiency.dispose();\n              }\n              _this7.charts.efficiency = echarts.init(_this7.$refs.efficiencyChart);\n              _this7.charts.efficiency.setOption({\n                title: {\n                  text: '充电效率趋势分析 (暂无数据)',\n                  left: 'center'\n                }\n              });\n              return _context4.abrupt(\"return\");\n            case 13:\n              // 销毁旧的图表实例\n              if (_this7.charts.efficiency) {\n                try {\n                  _this7.charts.efficiency.dispose();\n                  _this7.charts.efficiency = null;\n                } catch (error) {\n                  console.error('销毁旧效率趋势图失败:', error);\n                }\n              }\n              _this7.charts.efficiency = echarts.init(_this7.$refs.efficiencyChart);\n              option = {\n                title: {\n                  text: '充电效率趋势分析',\n                  left: 'center',\n                  top: '10px'\n                },\n                tooltip: {\n                  trigger: 'axis'\n                },\n                legend: {\n                  data: response.data.stations.map(function (station) {\n                    return station.name;\n                  }),\n                  selected: response.data.stations.reduce(function (acc, station) {\n                    acc[station.name] = true;\n                    return acc;\n                  }, {}),\n                  top: '40px',\n                  type: 'scroll',\n                  orient: 'horizontal',\n                  selectedMode: false\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  top: '100px',\n                  containLabel: true\n                },\n                xAxis: {\n                  type: 'category',\n                  boundaryGap: false,\n                  data: response.data.timeline\n                },\n                yAxis: {\n                  type: 'value',\n                  name: '充电效率 (%)',\n                  min: 50,\n                  max: 100\n                },\n                series: response.data.stations.map(function (station) {\n                  return {\n                    name: station.name,\n                    type: 'line',\n                    data: station.efficiencyData,\n                    smooth: true\n                  };\n                })\n              };\n              _this7.charts.efficiency.setOption(option);\n\n              // 取消图表的点击事件\n              _this7.charts.efficiency.off('click');\n              _context4.next = 24;\n              break;\n            case 20:\n              _context4.prev = 20;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error('渲染效率趋势图失败:', _context4.t0);\n\n              // 错误情况下，显示错误信息\n              if (_this7.$refs.efficiencyChart) {\n                if (_this7.charts.efficiency) {\n                  _this7.charts.efficiency.dispose();\n                }\n                _this7.charts.efficiency = echarts.init(_this7.$refs.efficiencyChart);\n                _this7.charts.efficiency.setOption({\n                  title: {\n                    text: '充电效率趋势分析 (加载失败)',\n                    textStyle: {\n                      color: '#ff0000'\n                    },\n                    left: 'center'\n                  }\n                });\n              }\n            case 24:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 20]]);\n      }))();\n    },\n    // 能耗分布热力图\n    renderConsumptionChart: function renderConsumptionChart(params) {\n      var _this8 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response, days, hours, i, formattedData, minValue, maxValue, dayIndex, hour, visualMaxValue, pieces, stepCount, step, _i, startValue, endValue, option;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              console.log('获取能耗分布数据，参数:', params);\n              _context5.next = 4;\n              return energyEfficiencyApi.getEnergyConsumptionDistribution(params);\n            case 4:\n              response = _context5.sent;\n              console.log('能耗分布数据响应:', response.data);\n\n              // 确保DOM元素存在\n              if (_this8.$refs.consumptionChart) {\n                _context5.next = 9;\n                break;\n              }\n              console.error('热力图DOM元素不存在');\n              return _context5.abrupt(\"return\");\n            case 9:\n              if (!(!response.data || !response.data.days || !response.data.data)) {\n                _context5.next = 15;\n                break;\n              }\n              console.error('能耗分布数据异常:', response.data);\n              // 创建空图表以避免错误\n              if (_this8.charts.consumption) {\n                _this8.charts.consumption.dispose();\n              }\n              _this8.charts.consumption = echarts.init(_this8.$refs.consumptionChart);\n              _this8.charts.consumption.setOption({\n                title: {\n                  text: '能耗分布热力图 (暂无数据)',\n                  left: 'center'\n                }\n              });\n              return _context5.abrupt(\"return\");\n            case 15:\n              if (!(response.data.days.length === 0 || response.data.data.length === 0)) {\n                _context5.next = 21;\n                break;\n              }\n              console.warn('能耗分布数据为空');\n              // 创建空图表以避免错误\n              if (_this8.charts.consumption) {\n                _this8.charts.consumption.dispose();\n              }\n              _this8.charts.consumption = echarts.init(_this8.$refs.consumptionChart);\n              _this8.charts.consumption.setOption({\n                title: {\n                  text: '能耗分布热力图 (暂无数据)',\n                  left: 'center'\n                }\n              });\n              return _context5.abrupt(\"return\");\n            case 21:\n              console.log('能耗分布数据:', response.data.data);\n\n              // 销毁旧的图表实例\n              if (_this8.charts.consumption) {\n                try {\n                  _this8.charts.consumption.dispose();\n                  _this8.charts.consumption = null;\n                } catch (error) {\n                  console.error('销毁旧热力图失败:', error);\n                }\n              }\n\n              // 设置明确的宽高\n              if (!_this8.$refs.consumptionChart) {\n                _context5.next = 29;\n                break;\n              }\n              _this8.$refs.consumptionChart.style.width = '100%';\n              _this8.$refs.consumptionChart.style.height = '500px';\n\n              // 重新创建图表实例\n              _this8.charts.consumption = echarts.init(_this8.$refs.consumptionChart);\n              _context5.next = 31;\n              break;\n            case 29:\n              console.error('热力图DOM元素已不存在，无法创建图表');\n              return _context5.abrupt(\"return\");\n            case 31:\n              // 直接使用后端返回的日期作为Y轴\n              days = response.data.days; // 提取所有小时作为X轴（0-23）\n              hours = [];\n              for (i = 0; i < 24; i++) {\n                hours.push(i.toString());\n              }\n\n              // 将API返回的数据转换为ECharts需要的格式 [x索引, y索引, 值]\n              formattedData = []; // 找出数据中的最小值和最大值，用于设置图例刻度\n              minValue = Infinity;\n              maxValue = 0;\n              if (Array.isArray(response.data.data)) {\n                response.data.data.forEach(function (item) {\n                  if (Array.isArray(item) && item.length === 3) {\n                    var day = item[0];\n                    var hour = parseInt(item[1]);\n                    var value = parseFloat(item[2] || 0);\n\n                    // 更新最小值和最大值\n                    if (!isNaN(value)) {\n                      minValue = Math.min(minValue, value);\n                      maxValue = Math.max(maxValue, value);\n                    }\n\n                    // 确保值是有效的数字\n                    if (!isNaN(value) && hour >= 0 && hour < 24) {\n                      // 找到日期在Y轴中的索引\n                      var dayIndex = days.indexOf(day);\n\n                      // 只有当日期在Y轴中存在时才添加数据点\n                      if (dayIndex !== -1) {\n                        formattedData.push([hour, dayIndex, value]);\n                      }\n                    }\n                  }\n                });\n              } else {\n                console.error('能耗数据不是数组格式');\n                // 创建默认数据以避免图表崩溃\n                for (dayIndex = 0; dayIndex < days.length; dayIndex++) {\n                  for (hour = 0; hour < 24; hour++) {\n                    formattedData.push([hour, dayIndex, 0]);\n                  }\n                }\n              }\n              console.log('格式化后的数据点数:', formattedData.length);\n              console.log('数据范围:', minValue, '至', maxValue);\n\n              // 如果没有有效数据，设置默认值避免图表错误\n              if (formattedData.length === 0 || minValue === Infinity) {\n                minValue = 0;\n                maxValue = 100;\n              }\n\n              // 使用后端返回的最大值或计算得到的最大值\n              visualMaxValue = response.data.maxValue || Math.ceil(maxValue) || 100; // 创建均匀分布的刻度值数组\n              pieces = [];\n              stepCount = 10; // 分成10个刻度\n              step = visualMaxValue / stepCount;\n              for (_i = 0; _i < stepCount; _i++) {\n                startValue = _i * step;\n                endValue = (_i + 1) * step;\n                pieces.push({\n                  min: startValue,\n                  max: endValue,\n                  label: \"\".concat(startValue.toFixed(0), \"-\").concat(endValue.toFixed(0))\n                });\n              }\n\n              // 使用简单的配置\n              option = {\n                title: {\n                  text: '能耗分布热力图',\n                  left: 'center'\n                },\n                tooltip: {\n                  position: 'top',\n                  formatter: function formatter(params) {\n                    var hour = params.data[0];\n                    var day = days[params.data[1]];\n                    var value = params.data[2];\n                    return \"\".concat(hour, \":00 - \").concat((parseInt(hour) + 1) % 24, \":00<br>\\u65E5\\u671F: \").concat(day, \"<br>\\u80FD\\u8017: \").concat(value.toFixed(2), \" kWh\");\n                  }\n                },\n                grid: {\n                  height: '70%',\n                  top: '60px',\n                  left: '80px',\n                  right: '30px',\n                  containLabel: true\n                },\n                xAxis: {\n                  type: 'category',\n                  data: hours,\n                  axisLabel: {\n                    formatter: '{value}:00',\n                    interval: function interval(index, value) {\n                      // 每2小时显示一个标签\n                      return index % 2 === 0;\n                    }\n                  }\n                },\n                yAxis: {\n                  type: 'category',\n                  data: days,\n                  axisLabel: {\n                    formatter: function formatter(value) {\n                      var parts = value.split('-');\n                      return parts[1] + '-' + parts[2]; // 只显示月-日\n                    }\n                  }\n                },\n                visualMap: {\n                  type: 'continuous',\n                  min: 0,\n                  max: visualMaxValue,\n                  precision: 0,\n                  calculable: true,\n                  orient: 'horizontal',\n                  left: 'center',\n                  bottom: '5%',\n                  inRange: {\n                    color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\n                  },\n                  // 添加具体的数字刻度\n                  splitNumber: 10,\n                  // 分割段数\n                  formatter: function formatter(value) {\n                    return value.toFixed(0) + ' kWh';\n                  },\n                  textStyle: {\n                    color: '#333'\n                  }\n                },\n                series: [{\n                  name: '能耗 (kWh)',\n                  type: 'heatmap',\n                  data: formattedData,\n                  emphasis: {\n                    itemStyle: {\n                      shadowBlur: 10,\n                      shadowColor: 'rgba(0, 0, 0, 0.5)'\n                    }\n                  }\n                }]\n              }; // 应用配置并渲染\n              _this8.charts.consumption.setOption(option);\n              console.log('热力图渲染成功');\n\n              // 取消图表的点击事件\n              _this8.charts.consumption.off('click');\n              _context5.next = 56;\n              break;\n            case 52:\n              _context5.prev = 52;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('渲染能耗分布热力图失败:', _context5.t0);\n\n              // 尝试显示错误信息\n              if (_this8.$refs.consumptionChart && _this8.charts.consumption) {\n                _this8.charts.consumption.dispose();\n                _this8.charts.consumption = echarts.init(_this8.$refs.consumptionChart);\n                _this8.charts.consumption.setOption({\n                  title: {\n                    text: '能耗分布热力图 (加载失败)',\n                    textStyle: {\n                      color: '#ff0000'\n                    },\n                    left: 'center'\n                  }\n                });\n              }\n            case 56:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[0, 52]]);\n      }))();\n    },\n    // 充电站利用率对比\n    renderUtilizationChart: function renderUtilizationChart(params) {\n      var _this9 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var response, processedData, option;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return energyEfficiencyApi.getStationUtilization(params);\n            case 3:\n              response = _context6.sent;\n              if (_this9.$refs.utilizationChart) {\n                _context6.next = 7;\n                break;\n              }\n              console.error('利用率图表DOM元素不存在');\n              return _context6.abrupt(\"return\");\n            case 7:\n              if (!(!response.data || !Array.isArray(response.data) || response.data.length === 0)) {\n                _context6.next = 13;\n                break;\n              }\n              console.error('充电站利用率数据异常:', response.data);\n              // 创建没有数据的图表以避免错误\n              if (_this9.charts.utilization) {\n                _this9.charts.utilization.dispose();\n              }\n              _this9.charts.utilization = echarts.init(_this9.$refs.utilizationChart);\n              _this9.charts.utilization.setOption({\n                title: {\n                  text: '充电站利用率对比 (暂无数据)',\n                  left: 'center'\n                }\n              });\n              return _context6.abrupt(\"return\");\n            case 13:\n              // 销毁旧图表实例\n              if (_this9.charts.utilization) {\n                try {\n                  _this9.charts.utilization.dispose();\n                  _this9.charts.utilization = null;\n                } catch (error) {\n                  console.error('销毁旧利用率图表失败:', error);\n                }\n              }\n\n              // 重新创建图表实例\n              _this9.charts.utilization = echarts.init(_this9.$refs.utilizationChart);\n\n              // 数据处理：确保所有数据都是正数，且单位一致\n              processedData = response.data.map(function (item) {\n                return {\n                  stationName: item.stationName || '未知充电站',\n                  busyHours: Math.abs(parseFloat(item.busyHours || 0)),\n                  idleHours: Math.abs(parseFloat(item.idleHours || 0)),\n                  maintenanceHours: Math.abs(parseFloat(item.maintenanceHours || 0)),\n                  errorHours: Math.abs(parseFloat(item.errorHours || 0))\n                };\n              }); // 验证数据总和是否合理，如果总和异常大，则进行归一化处理\n              processedData.forEach(function (item) {\n                var total = item.busyHours + item.idleHours + item.maintenanceHours + item.errorHours;\n                // 如果总时间超过48小时（允许一定误差），则认为数据异常，需要归一化\n                if (total > 48) {\n                  var factor = 24 / total;\n                  item.busyHours *= factor;\n                  item.idleHours *= factor;\n                  item.maintenanceHours *= factor;\n                  item.errorHours *= factor;\n                }\n              });\n              console.log('处理后的充电站利用率数据:', processedData);\n              option = {\n                title: {\n                  text: '充电站利用率对比',\n                  left: 'center'\n                },\n                tooltip: {\n                  trigger: 'axis',\n                  axisPointer: {\n                    type: 'shadow'\n                  },\n                  formatter: function formatter(params) {\n                    var tooltip = params[0].name + '<br/>';\n                    var total = 0;\n                    params.forEach(function (param) {\n                      tooltip += param.seriesName + ': ' + param.value.toFixed(2) + ' 小时<br/>';\n                      total += param.value;\n                    });\n                    tooltip += '<br/>总计: ' + total.toFixed(2) + ' 小时';\n                    return tooltip;\n                  }\n                },\n                legend: {\n                  data: ['忙碌时间', '空闲时间', '维护时间', '故障时间'],\n                  selectedMode: false,\n                  top: '30px'\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  top: '80px',\n                  containLabel: true\n                },\n                xAxis: {\n                  type: 'value',\n                  name: '小时',\n                  min: 0,\n                  max: 24,\n                  axisLabel: {\n                    formatter: '{value} h'\n                  }\n                },\n                yAxis: {\n                  type: 'category',\n                  data: processedData.map(function (item) {\n                    return item.stationName;\n                  })\n                },\n                series: [{\n                  name: '忙碌时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true,\n                    formatter: '{c} h'\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: processedData.map(function (item) {\n                    return parseFloat(item.busyHours.toFixed(2));\n                  })\n                }, {\n                  name: '空闲时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true,\n                    formatter: '{c} h'\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: processedData.map(function (item) {\n                    return parseFloat(item.idleHours.toFixed(2));\n                  })\n                }, {\n                  name: '维护时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true,\n                    formatter: '{c} h'\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: processedData.map(function (item) {\n                    return parseFloat(item.maintenanceHours.toFixed(2));\n                  })\n                }, {\n                  name: '故障时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true,\n                    formatter: '{c} h'\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: processedData.map(function (item) {\n                    return parseFloat(item.errorHours.toFixed(2));\n                  })\n                }]\n              };\n              _this9.charts.utilization.setOption(option);\n\n              // 取消图表的点击事件\n              _this9.charts.utilization.off('click');\n              _context6.next = 27;\n              break;\n            case 23:\n              _context6.prev = 23;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.error('渲染充电站利用率图表失败:', _context6.t0);\n\n              // 错误情况下，显示错误信息\n              if (_this9.$refs.utilizationChart) {\n                if (_this9.charts.utilization) {\n                  _this9.charts.utilization.dispose();\n                }\n                _this9.charts.utilization = echarts.init(_this9.$refs.utilizationChart);\n                _this9.charts.utilization.setOption({\n                  title: {\n                    text: '充电站利用率对比 (加载失败)',\n                    textStyle: {\n                      color: '#ff0000'\n                    },\n                    left: 'center'\n                  }\n                });\n              }\n            case 27:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[0, 23]]);\n      }))();\n    },\n    // 机器人充电行为分析\n    renderRobotChart: function renderRobotChart(params) {\n      var _this0 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return energyEfficiencyApi.getRobotChargingBehavior(params);\n            case 3:\n              response = _context7.sent;\n              if (_this0.$refs.robotChart) {\n                _context7.next = 7;\n                break;\n              }\n              console.error('机器人充电行为图表DOM元素不存在');\n              return _context7.abrupt(\"return\");\n            case 7:\n              if (!(!response.data || !response.data.robots || !Array.isArray(response.data.robots) || response.data.robots.length === 0)) {\n                _context7.next = 13;\n                break;\n              }\n              console.error('机器人充电行为数据异常:', response.data);\n              // 创建空图表以避免错误\n              if (_this0.charts.robot) {\n                _this0.charts.robot.dispose();\n              }\n              _this0.charts.robot = echarts.init(_this0.$refs.robotChart);\n              _this0.charts.robot.setOption({\n                title: {\n                  text: '机器人充电行为分析 (暂无数据)',\n                  left: 'center'\n                }\n              });\n              return _context7.abrupt(\"return\");\n            case 13:\n              // 销毁旧的图表实例\n              if (_this0.charts.robot) {\n                try {\n                  _this0.charts.robot.dispose();\n                  _this0.charts.robot = null;\n                } catch (error) {\n                  console.error('销毁旧机器人充电行为图表失败:', error);\n                }\n              }\n              _this0.charts.robot = echarts.init(_this0.$refs.robotChart);\n              option = {\n                title: {\n                  text: '机器人充电行为分析'\n                },\n                tooltip: {\n                  trigger: 'axis'\n                },\n                legend: {\n                  data: ['充电次数', '平均充电时长', '平均等待时间'],\n                  selectedMode: false\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  containLabel: true\n                },\n                xAxis: [{\n                  type: 'category',\n                  data: response.data.robots.map(function (robot) {\n                    return robot.name;\n                  }),\n                  axisPointer: {\n                    type: 'shadow'\n                  }\n                }],\n                yAxis: [{\n                  type: 'value',\n                  name: '次数',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value}'\n                  }\n                }, {\n                  type: 'value',\n                  name: '时间 (分钟)',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value} min'\n                  }\n                }],\n                series: [{\n                  name: '充电次数',\n                  type: 'bar',\n                  data: response.data.robots.map(function (robot) {\n                    return robot.chargingCount;\n                  })\n                }, {\n                  name: '平均充电时长',\n                  type: 'line',\n                  yAxisIndex: 1,\n                  data: response.data.robots.map(function (robot) {\n                    return robot.avgChargingDuration;\n                  })\n                }, {\n                  name: '平均等待时间',\n                  type: 'line',\n                  yAxisIndex: 1,\n                  data: response.data.robots.map(function (robot) {\n                    return robot.avgWaitingTime;\n                  })\n                }]\n              };\n              _this0.charts.robot.setOption(option);\n\n              // 取消图表的点击事件\n              _this0.charts.robot.off('click');\n              _context7.next = 24;\n              break;\n            case 20:\n              _context7.prev = 20;\n              _context7.t0 = _context7[\"catch\"](0);\n              console.error('渲染机器人充电行为图表失败:', _context7.t0);\n\n              // 错误情况下，显示错误信息\n              if (_this0.$refs.robotChart) {\n                if (_this0.charts.robot) {\n                  _this0.charts.robot.dispose();\n                }\n                _this0.charts.robot = echarts.init(_this0.$refs.robotChart);\n                _this0.charts.robot.setOption({\n                  title: {\n                    text: '机器人充电行为分析 (加载失败)',\n                    textStyle: {\n                      color: '#ff0000'\n                    },\n                    left: 'center'\n                  }\n                });\n              }\n            case 24:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, null, [[0, 20]]);\n      }))();\n    },\n    // 充电高峰期分析\n    renderPeakChart: function renderPeakChart(params) {\n      var _this1 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return energyEfficiencyApi.getChargingPeakAnalysis(params);\n            case 3:\n              response = _context8.sent;\n              if (_this1.$refs.peakChart) {\n                _context8.next = 7;\n                break;\n              }\n              console.error('充电高峰期图表DOM元素不存在');\n              return _context8.abrupt(\"return\");\n            case 7:\n              if (!(!response.data || !response.data.timeSlots || !response.data.requestCounts || !response.data.avgWaitingTimes)) {\n                _context8.next = 13;\n                break;\n              }\n              console.error('充电高峰期数据异常:', response.data);\n              // 创建空图表以避免错误\n              if (_this1.charts.peak) {\n                _this1.charts.peak.dispose();\n              }\n              _this1.charts.peak = echarts.init(_this1.$refs.peakChart);\n              _this1.charts.peak.setOption({\n                title: {\n                  text: '充电高峰期分析 (暂无数据)',\n                  left: 'center'\n                }\n              });\n              return _context8.abrupt(\"return\");\n            case 13:\n              // 销毁旧的图表实例\n              if (_this1.charts.peak) {\n                try {\n                  _this1.charts.peak.dispose();\n                  _this1.charts.peak = null;\n                } catch (error) {\n                  console.error('销毁旧充电高峰期图表失败:', error);\n                }\n              }\n              _this1.charts.peak = echarts.init(_this1.$refs.peakChart);\n              option = {\n                title: {\n                  text: '充电高峰期分析'\n                },\n                tooltip: {\n                  trigger: 'axis',\n                  axisPointer: {\n                    type: 'shadow'\n                  }\n                },\n                legend: {\n                  data: ['充电请求数', '平均等待时间'],\n                  selectedMode: false\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  containLabel: true\n                },\n                xAxis: [{\n                  type: 'category',\n                  data: response.data.timeSlots,\n                  axisLabel: {\n                    formatter: '{value}时'\n                  }\n                }],\n                yAxis: [{\n                  type: 'value',\n                  name: '请求数',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value}'\n                  }\n                }, {\n                  type: 'value',\n                  name: '等待时间 (分钟)',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value} min'\n                  }\n                }],\n                series: [{\n                  name: '充电请求数',\n                  type: 'bar',\n                  data: response.data.requestCounts\n                }, {\n                  name: '平均等待时间',\n                  type: 'line',\n                  yAxisIndex: 1,\n                  data: response.data.avgWaitingTimes\n                }]\n              };\n              _this1.charts.peak.setOption(option);\n\n              // 取消图表的点击事件\n              _this1.charts.peak.off('click');\n              _context8.next = 24;\n              break;\n            case 20:\n              _context8.prev = 20;\n              _context8.t0 = _context8[\"catch\"](0);\n              console.error('渲染充电高峰期图表失败:', _context8.t0);\n\n              // 错误情况下，显示错误信息\n              if (_this1.$refs.peakChart) {\n                if (_this1.charts.peak) {\n                  _this1.charts.peak.dispose();\n                }\n                _this1.charts.peak = echarts.init(_this1.$refs.peakChart);\n                _this1.charts.peak.setOption({\n                  title: {\n                    text: '充电高峰期分析 (加载失败)',\n                    textStyle: {\n                      color: '#ff0000'\n                    },\n                    left: 'center'\n                  }\n                });\n              }\n            case 24:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, null, [[0, 20]]);\n      }))();\n    },\n    // 获取筛选参数\n    getFilterParams: function getFilterParams() {\n      return {\n        startDate: this.dateRange[0] ? this.dateRange[0].toISOString() : null,\n        endDate: this.dateRange[1] ? this.dateRange[1].toISOString() : null,\n        stationIds: this.selectedStations.length > 0 ? this.selectedStations : null,\n        robotIds: this.selectedRobots.length > 0 ? this.selectedRobots : null\n      };\n    },\n    // 处理图表切换\n    handleChartChange: function handleChartChange(chartType) {\n      var _this10 = this;\n      var titles = {\n        efficiency: '充电效率趋势分析',\n        consumption: '能耗分布热力图',\n        utilization: '充电站利用率对比',\n        robot: '机器人充电行为分析',\n        peak: '充电高峰期分析'\n      };\n      this.currentChartTitle = titles[chartType];\n\n      // 在切换图表前先清理旧图表实例，避免内存泄漏和DOM冲突\n      if (this.charts[this.currentChart]) {\n        try {\n          // 移除所有事件监听器\n          this.charts[this.currentChart].off();\n          this.charts[this.currentChart].dispose();\n          this.charts[this.currentChart] = null;\n        } catch (error) {\n          console.error(\"\\u6E05\\u7406\\u56FE\\u8868\\u5931\\u8D25: \".concat(error));\n        }\n      }\n\n      // 使用nextTick确保DOM已更新\n      this.$nextTick(function () {\n        _this10.fetchChartData();\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","energyEfficiencyApi","formatDateTime","calculateDuration","ArrowUp","ArrowDown","name","components","data","dateRange","Date","getTime","selectedStations","selectedRobots","stations","robots","currentChart","currentChartTitle","charts","efficiency","consumption","utilization","robot","peak","kpiData","title","value","unit","change","trend","mounted","initData","window","addEventListener","handleResize","$root","$on","handleStationDataChanged","e","console","error","beforeUnmount","removeEventListener","$off","disposeAllCharts","methods","_this","log","$nextTick","_this2","Object","keys","forEach","key","resize","concat","dispose","disposeError","_this3","off","_this4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","stationsResponse","robotsResponse","wrap","_callee$","_context","prev","next","getStations","sent","getRobots","fetchKpiData","fetchChartData","t0","$message","stop","refreshData","_this5","_callee2","params","response","_callee2$","_context2","getFilterParams","getKpiData","avgEfficiency","toFixed","efficiencyChange","totalEnergy","energyChange","utilizationChange","avgWaitTime","waitTimeChange","successRate","successRateChange","totalOrders","ordersChange","_this6","_callee3","chartKey","_callee3$","_context3","renderEfficiencyChart","abrupt","renderConsumptionChart","renderUtilizationChart","renderRobotChart","renderPeakChart","t1","cleanupError","_this7","_callee4","option","_callee4$","_context4","getEfficiencyTrend","$refs","efficiencyChart","timeline","init","setOption","text","left","top","tooltip","trigger","legend","map","station","selected","reduce","acc","type","orient","selectedMode","grid","right","bottom","containLabel","xAxis","boundaryGap","yAxis","min","max","series","efficiencyData","smooth","textStyle","color","_this8","_callee5","days","hours","i","formattedData","minValue","maxValue","dayIndex","hour","visualMaxValue","pieces","stepCount","step","_i","startValue","endValue","_callee5$","_context5","getEnergyConsumptionDistribution","consumptionChart","length","warn","style","width","height","push","toString","Infinity","Array","isArray","item","day","parseInt","parseFloat","isNaN","Math","indexOf","ceil","label","position","formatter","axisLabel","interval","index","parts","split","visualMap","precision","calculable","inRange","splitNumber","emphasis","itemStyle","shadowBlur","shadowColor","_this9","_callee6","processedData","_callee6$","_context6","getStationUtilization","utilizationChart","stationName","busyHours","abs","idleHours","maintenanceHours","errorHours","total","factor","axisPointer","param","seriesName","stack","show","focus","_this0","_callee7","_callee7$","_context7","getRobotChargingBehavior","robotChart","chargingCount","yAxisIndex","avgChargingDuration","avgWaitingTime","_this1","_callee8","_callee8$","_context8","getChargingPeakAnalysis","peakChart","timeSlots","requestCounts","avgWaitingTimes","startDate","toISOString","endDate","stationIds","robotIds","handleChartChange","chartType","_this10","titles"],"sources":["D:\\software_data\\Project\\Y0527\\CODE_BAK\\frontend\\src\\views\\EnergyEfficiency.vue"],"sourcesContent":["<template>\r\n  <div class=\"energy-efficiency-analysis\">\r\n    <!-- KPI指标卡片 -->\r\n    <el-row :gutter=\"20\" class=\"kpi-container\">\r\n      <el-col :span=\"4\" v-for=\"(kpi, index) in kpiData\" :key=\"index\">\r\n        <el-card class=\"kpi-card\">\r\n          <div class=\"kpi-title\">{{ kpi.title }}</div>\r\n          <div class=\"kpi-value\">{{ kpi.value }}{{ kpi.unit }}</div>\r\n          <div class=\"kpi-change\" :class=\"kpi.trend\">\r\n            <el-icon v-if=\"kpi.trend === 'up'\"><ArrowUp /></el-icon>\r\n            <el-icon v-else><ArrowDown /></el-icon>\r\n            {{ kpi.change }}%\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 分析图表区域 -->\r\n    <el-card class=\"chart-container\">\r\n      <div class=\"chart-header\">\r\n        <h3>{{ currentChartTitle }}</h3>\r\n        <el-radio-group v-model=\"currentChart\" @change=\"handleChartChange\">\r\n          <el-radio-button :value=\"'efficiency'\">充电效率趋势</el-radio-button>\r\n          <el-radio-button :value=\"'consumption'\">能耗分布</el-radio-button>\r\n          <el-radio-button :value=\"'utilization'\">充电站利用率</el-radio-button>\r\n          <el-radio-button :value=\"'robot'\">机器人充电分析</el-radio-button>\r\n          <el-radio-button :value=\"'peak'\">充电高峰期</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n      <div class=\"chart-content\">\r\n        <!-- 不同图表的容器 -->\r\n        <div v-show=\"currentChart === 'efficiency'\" class=\"chart-item\">\r\n          <div ref=\"efficiencyChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'consumption'\" class=\"chart-item\">\r\n          <div ref=\"consumptionChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'utilization'\" class=\"chart-item\">\r\n          <div ref=\"utilizationChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'robot'\" class=\"chart-item\">\r\n          <div ref=\"robotChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'peak'\" class=\"chart-item\">\r\n          <div ref=\"peakChart\" class=\"chart\"></div>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport energyEfficiencyApi from '@/api/energyEfficiency';\r\nimport { formatDateTime, calculateDuration } from '@/utils/dateTime';\r\nimport { ArrowUp, ArrowDown } from '@element-plus/icons-vue';\r\n\r\nexport default {\r\n  name: 'EnergyEfficiencyAnalysis',\r\n  components: {\r\n    ArrowUp,\r\n    ArrowDown\r\n  },\r\n  data() {\r\n    return {\r\n      // 固定的默认筛选条件（不再显示在UI上）\r\n      dateRange: [new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000), new Date()],\r\n      selectedStations: [],\r\n      selectedRobots: [],\r\n      \r\n      // 数据列表\r\n      stations: [],\r\n      robots: [],\r\n      \r\n      // 图表相关\r\n      currentChart: 'efficiency',\r\n      currentChartTitle: '充电效率趋势分析',\r\n      charts: {\r\n        efficiency: null,\r\n        consumption: null,\r\n        utilization: null,\r\n        robot: null,\r\n        peak: null\r\n      },\r\n      \r\n      // KPI数据\r\n      kpiData: [\r\n        { title: '平均充电效率', value: 0, unit: '%', change: 0, trend: 'up' },\r\n        { title: '总能耗', value: 0, unit: 'kWh', change: 0, trend: 'up' },\r\n        { title: '充电器利用率', value: 0, unit: '%', change: 0, trend: 'up' },\r\n        { title: '平均等待时间', value: 0, unit: 'min', change: 0, trend: 'down' },\r\n        { title: '充电成功率', value: 0, unit: '%', change: 0, trend: 'up' },\r\n        { title: '总充电次数', value: 0, unit: '次', change: 0, trend: 'up' }\r\n      ]\r\n    };\r\n  },\r\n  \r\n  mounted() {\r\n    this.initData();\r\n    \r\n    // 添加窗口resize监听器，确保图表大小适应窗口变化\r\n    window.addEventListener('resize', this.handleResize);\r\n    \r\n    // 监听充电站数据变化事件\r\n    try {\r\n      if (this.$root && this.$root.$on) {\r\n        this.$root.$on('station-data-changed', this.handleStationDataChanged);\r\n      }\r\n    } catch (e) {\r\n      console.error('注册全局事件监听失败:', e);\r\n    }\r\n  },\r\n  \r\n  beforeUnmount() {\r\n    // 移除resize监听器\r\n    window.removeEventListener('resize', this.handleResize);\r\n    \r\n    // 移除充电站数据变化事件监听\r\n    try {\r\n      if (this.$root && this.$root.$off) {\r\n        this.$root.$off('station-data-changed', this.handleStationDataChanged);\r\n      }\r\n    } catch (e) {\r\n      console.error('移除全局事件监听失败:', e);\r\n    }\r\n    \r\n    // 销毁所有图表实例，避免内存泄漏\r\n    this.disposeAllCharts();\r\n  },\r\n  \r\n  methods: {\r\n    // 处理充电站数据变化事件\r\n    handleStationDataChanged() {\r\n      console.log('检测到充电站数据变化，刷新图表');\r\n      // 先清理所有图表实例\r\n      this.disposeAllCharts();\r\n      // 然后重新获取数据并渲染\r\n      this.$nextTick(() => {\r\n        this.initData();\r\n      });\r\n    },\r\n    \r\n    // 处理窗口调整大小事件\r\n    handleResize() {\r\n      // 调整所有已创建的图表\r\n      Object.keys(this.charts).forEach(key => {\r\n        if (this.charts[key]) {\r\n          try {\r\n            this.charts[key].resize();\r\n          } catch (error) {\r\n            console.error(`调整图表 ${key} 大小失败:`, error);\r\n            // 如果调整大小失败，尝试销毁图表以避免进一步的错误\r\n            try {\r\n              this.charts[key].dispose();\r\n              this.charts[key] = null;\r\n            } catch (disposeError) {\r\n              console.error(`销毁图表 ${key} 失败:`, disposeError);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n    \r\n    // 销毁所有图表实例\r\n    disposeAllCharts() {\r\n      Object.keys(this.charts).forEach(key => {\r\n        if (this.charts[key]) {\r\n          try {\r\n            // 移除所有事件监听器\r\n            this.charts[key].off('click');\r\n            this.charts[key].off('resize');\r\n            // 销毁图表实例\r\n            this.charts[key].dispose();\r\n            this.charts[key] = null;\r\n          } catch (error) {\r\n            console.error(`销毁图表 ${key} 失败:`, error);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    \r\n    async initData() {\r\n      try {\r\n        // 获取充电站列表\r\n        const stationsResponse = await energyEfficiencyApi.getStations();\r\n        this.stations = stationsResponse.data;\r\n        \r\n        // 获取机器人列表\r\n        const robotsResponse = await energyEfficiencyApi.getRobots();\r\n        this.robots = robotsResponse.data;\r\n        \r\n        // 获取初始数据\r\n        this.fetchKpiData();\r\n        this.fetchChartData();\r\n      } catch (error) {\r\n        console.error('初始化数据失败:', error);\r\n        this.$message.error('加载数据失败，请重试');\r\n      }\r\n    },\r\n    \r\n    // 刷新所有数据\r\n    refreshData() {\r\n      this.fetchKpiData();\r\n      this.fetchChartData();\r\n    },\r\n    \r\n    // 获取KPI数据\r\n    async fetchKpiData() {\r\n      try {\r\n        const params = this.getFilterParams();\r\n        const response = await energyEfficiencyApi.getKpiData(params);\r\n        \r\n        this.kpiData = [\r\n          { \r\n            title: '平均充电效率', \r\n            value: response.data.avgEfficiency.toFixed(2), \r\n            unit: '%', \r\n            change: response.data.efficiencyChange.toFixed(2), \r\n            trend: response.data.efficiencyChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '总能耗', \r\n            value: response.data.totalEnergy.toFixed(2), \r\n            unit: 'kWh', \r\n            change: response.data.energyChange.toFixed(2), \r\n            trend: response.data.energyChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '充电器利用率', \r\n            value: response.data.utilization.toFixed(2), \r\n            unit: '%', \r\n            change: response.data.utilizationChange.toFixed(2), \r\n            trend: response.data.utilizationChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '平均等待时间', \r\n            value: response.data.avgWaitTime.toFixed(2), \r\n            unit: 'min', \r\n            change: response.data.waitTimeChange.toFixed(2), \r\n            trend: response.data.waitTimeChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '充电成功率', \r\n            value: response.data.successRate.toFixed(2), \r\n            unit: '%', \r\n            change: response.data.successRateChange.toFixed(2), \r\n            trend: response.data.successRateChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '总充电次数', \r\n            value: response.data.totalOrders || 0, \r\n            unit: '次', \r\n            change: response.data.ordersChange || 0, \r\n            trend: (response.data.ordersChange || 0) >= 0 ? 'up' : 'down' \r\n          }\r\n        ];\r\n      } catch (error) {\r\n        console.error('获取KPI数据失败:', error);\r\n        this.$message.error('获取KPI数据失败');\r\n      }\r\n    },\r\n    \r\n    // 获取图表数据并渲染\r\n    async fetchChartData() {\r\n      try {\r\n        const params = this.getFilterParams();\r\n        \r\n        // 根据当前选择的图表类型获取数据\r\n        switch (this.currentChart) {\r\n          case 'efficiency':\r\n            await this.renderEfficiencyChart(params);\r\n            break;\r\n          case 'consumption':\r\n            await this.renderConsumptionChart(params);\r\n            break;\r\n          case 'utilization':\r\n            await this.renderUtilizationChart(params);\r\n            break;\r\n          case 'robot':\r\n            await this.renderRobotChart(params);\r\n            break;\r\n          case 'peak':\r\n            await this.renderPeakChart(params);\r\n            break;\r\n        }\r\n      } catch (error) {\r\n        console.error('获取图表数据失败:', error);\r\n        this.$message.error('获取图表数据失败');\r\n        \r\n        // 清理错误的图表实例\r\n        const chartKey = this.currentChart;\r\n        if (this.charts[chartKey]) {\r\n          try {\r\n            this.charts[chartKey].dispose();\r\n            this.charts[chartKey] = null;\r\n          } catch (cleanupError) {\r\n            console.error(`清理图表失败: ${cleanupError}`);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 充电效率趋势图\r\n    async renderEfficiencyChart(params) {\r\n      try {\r\n        const response = await energyEfficiencyApi.getEfficiencyTrend(params);\r\n        \r\n        // 确保DOM元素存在\r\n        if (!this.$refs.efficiencyChart) {\r\n          console.error('效率趋势图DOM元素不存在');\r\n          return;\r\n        }\r\n        \r\n        // 检查返回的数据\r\n        if (!response.data || !response.data.stations || !response.data.timeline) {\r\n          console.error('效率趋势数据异常:', response.data);\r\n          // 创建空图表以避免错误\r\n          if (this.charts.efficiency) {\r\n            this.charts.efficiency.dispose();\r\n          }\r\n          this.charts.efficiency = echarts.init(this.$refs.efficiencyChart);\r\n          this.charts.efficiency.setOption({\r\n            title: {\r\n              text: '充电效率趋势分析 (暂无数据)',\r\n              left: 'center'\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        \r\n        // 销毁旧的图表实例\r\n        if (this.charts.efficiency) {\r\n          try {\r\n            this.charts.efficiency.dispose();\r\n            this.charts.efficiency = null;\r\n          } catch (error) {\r\n            console.error('销毁旧效率趋势图失败:', error);\r\n          }\r\n        }\r\n        \r\n        this.charts.efficiency = echarts.init(this.$refs.efficiencyChart);\r\n      \r\n        const option = {\r\n          title: {\r\n            text: '充电效率趋势分析',\r\n            left: 'center',\r\n            top: '10px'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          },\r\n          legend: {\r\n            data: response.data.stations.map(station => station.name),\r\n            selected: response.data.stations.reduce((acc, station) => {\r\n              acc[station.name] = true;\r\n              return acc;\r\n            }, {}),\r\n            top: '40px',\r\n            type: 'scroll',\r\n            orient: 'horizontal',\r\n            selectedMode: false\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            top: '100px',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: response.data.timeline\r\n          },\r\n          yAxis: {\r\n            type: 'value',\r\n            name: '充电效率 (%)',\r\n            min: 50,\r\n            max: 100\r\n          },\r\n          series: response.data.stations.map(station => ({\r\n            name: station.name,\r\n            type: 'line',\r\n            data: station.efficiencyData,\r\n            smooth: true\r\n          }))\r\n        };\r\n        \r\n        this.charts.efficiency.setOption(option);\r\n        \r\n        // 取消图表的点击事件\r\n        this.charts.efficiency.off('click');\r\n      } catch (error) {\r\n        console.error('渲染效率趋势图失败:', error);\r\n        \r\n        // 错误情况下，显示错误信息\r\n        if (this.$refs.efficiencyChart) {\r\n          if (this.charts.efficiency) {\r\n            this.charts.efficiency.dispose();\r\n          }\r\n          this.charts.efficiency = echarts.init(this.$refs.efficiencyChart);\r\n          this.charts.efficiency.setOption({\r\n            title: {\r\n              text: '充电效率趋势分析 (加载失败)',\r\n              textStyle: { color: '#ff0000' },\r\n              left: 'center'\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 能耗分布热力图\r\n    async renderConsumptionChart(params) {\r\n      try {\r\n        console.log('获取能耗分布数据，参数:', params);\r\n        const response = await energyEfficiencyApi.getEnergyConsumptionDistribution(params);\r\n        console.log('能耗分布数据响应:', response.data);\r\n        \r\n        // 确保DOM元素存在\r\n        if (!this.$refs.consumptionChart) {\r\n          console.error('热力图DOM元素不存在');\r\n          return;\r\n        }\r\n        \r\n        // 检查返回的数据\r\n        if (!response.data || !response.data.days || !response.data.data) {\r\n          console.error('能耗分布数据异常:', response.data);\r\n          // 创建空图表以避免错误\r\n          if (this.charts.consumption) {\r\n            this.charts.consumption.dispose();\r\n          }\r\n          this.charts.consumption = echarts.init(this.$refs.consumptionChart);\r\n          this.charts.consumption.setOption({\r\n            title: {\r\n              text: '能耗分布热力图 (暂无数据)',\r\n              left: 'center'\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        \r\n        // 检查数据是否为空数组\r\n        if (response.data.days.length === 0 || response.data.data.length === 0) {\r\n          console.warn('能耗分布数据为空');\r\n          // 创建空图表以避免错误\r\n          if (this.charts.consumption) {\r\n            this.charts.consumption.dispose();\r\n          }\r\n          this.charts.consumption = echarts.init(this.$refs.consumptionChart);\r\n          this.charts.consumption.setOption({\r\n            title: {\r\n              text: '能耗分布热力图 (暂无数据)',\r\n              left: 'center'\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        \r\n        console.log('能耗分布数据:', response.data.data);\r\n        \r\n        // 销毁旧的图表实例\r\n        if (this.charts.consumption) {\r\n          try {\r\n            this.charts.consumption.dispose();\r\n            this.charts.consumption = null;\r\n          } catch (error) {\r\n            console.error('销毁旧热力图失败:', error);\r\n          }\r\n        }\r\n        \r\n        // 设置明确的宽高\r\n        if (this.$refs.consumptionChart) {\r\n          this.$refs.consumptionChart.style.width = '100%';\r\n          this.$refs.consumptionChart.style.height = '500px';\r\n          \r\n          // 重新创建图表实例\r\n          this.charts.consumption = echarts.init(this.$refs.consumptionChart);\r\n        } else {\r\n          console.error('热力图DOM元素已不存在，无法创建图表');\r\n          return;\r\n        }\r\n        \r\n        // 直接使用后端返回的日期作为Y轴\r\n        const days = response.data.days;\r\n        \r\n        // 提取所有小时作为X轴（0-23）\r\n        const hours = [];\r\n        for (let i = 0; i < 24; i++) {\r\n          hours.push(i.toString());\r\n        }\r\n        \r\n        // 将API返回的数据转换为ECharts需要的格式 [x索引, y索引, 值]\r\n        const formattedData = [];\r\n        \r\n        // 找出数据中的最小值和最大值，用于设置图例刻度\r\n        let minValue = Infinity;\r\n        let maxValue = 0;\r\n        \r\n        if (Array.isArray(response.data.data)) {\r\n          response.data.data.forEach(item => {\r\n            if (Array.isArray(item) && item.length === 3) {\r\n              const day = item[0];\r\n              const hour = parseInt(item[1]);\r\n              const value = parseFloat(item[2] || 0);\r\n              \r\n              // 更新最小值和最大值\r\n              if (!isNaN(value)) {\r\n                minValue = Math.min(minValue, value);\r\n                maxValue = Math.max(maxValue, value);\r\n              }\r\n              \r\n              // 确保值是有效的数字\r\n              if (!isNaN(value) && hour >= 0 && hour < 24) {\r\n                // 找到日期在Y轴中的索引\r\n                const dayIndex = days.indexOf(day);\r\n                \r\n                // 只有当日期在Y轴中存在时才添加数据点\r\n                if (dayIndex !== -1) {\r\n                  formattedData.push([hour, dayIndex, value]);\r\n                }\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          console.error('能耗数据不是数组格式');\r\n          // 创建默认数据以避免图表崩溃\r\n          for (let dayIndex = 0; dayIndex < days.length; dayIndex++) {\r\n            for (let hour = 0; hour < 24; hour++) {\r\n              formattedData.push([hour, dayIndex, 0]);\r\n            }\r\n          }\r\n        }\r\n        \r\n        console.log('格式化后的数据点数:', formattedData.length);\r\n        console.log('数据范围:', minValue, '至', maxValue);\r\n        \r\n        // 如果没有有效数据，设置默认值避免图表错误\r\n        if (formattedData.length === 0 || minValue === Infinity) {\r\n          minValue = 0;\r\n          maxValue = 100;\r\n        }\r\n        \r\n        // 使用后端返回的最大值或计算得到的最大值\r\n        const visualMaxValue = response.data.maxValue || Math.ceil(maxValue) || 100;\r\n        \r\n        // 创建均匀分布的刻度值数组\r\n        const pieces = [];\r\n        const stepCount = 10; // 分成10个刻度\r\n        const step = visualMaxValue / stepCount;\r\n        \r\n        for (let i = 0; i < stepCount; i++) {\r\n          const startValue = i * step;\r\n          const endValue = (i + 1) * step;\r\n          pieces.push({\r\n            min: startValue,\r\n            max: endValue,\r\n            label: `${startValue.toFixed(0)}-${endValue.toFixed(0)}`\r\n          });\r\n        }\r\n        \r\n        // 使用简单的配置\r\n        const option = {\r\n          title: {\r\n            text: '能耗分布热力图',\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            position: 'top',\r\n            formatter: function (params) {\r\n              const hour = params.data[0];\r\n              const day = days[params.data[1]];\r\n              const value = params.data[2];\r\n              return `${hour}:00 - ${(parseInt(hour) + 1) % 24}:00<br>日期: ${day}<br>能耗: ${value.toFixed(2)} kWh`;\r\n            }\r\n          },\r\n          grid: {\r\n            height: '70%',\r\n            top: '60px',\r\n            left: '80px',\r\n            right: '30px',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: hours,\r\n            axisLabel: {\r\n              formatter: '{value}:00',\r\n              interval: function (index, value) {\r\n                // 每2小时显示一个标签\r\n                return index % 2 === 0;\r\n              }\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            data: days,\r\n            axisLabel: {\r\n              formatter: function (value) {\r\n                const parts = value.split('-');\r\n                return parts[1] + '-' + parts[2]; // 只显示月-日\r\n              }\r\n            }\r\n          },\r\n          visualMap: {\r\n            type: 'continuous',\r\n            min: 0,\r\n            max: visualMaxValue,\r\n            precision: 0,\r\n            calculable: true,\r\n            orient: 'horizontal',\r\n            left: 'center',\r\n            bottom: '5%',\r\n            inRange: {\r\n              color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\r\n            },\r\n            // 添加具体的数字刻度\r\n            splitNumber: 10, // 分割段数\r\n            formatter: function (value) {\r\n              return value.toFixed(0) + ' kWh';\r\n            },\r\n            textStyle: {\r\n              color: '#333'\r\n            }\r\n          },\r\n          series: [\r\n            {\r\n              name: '能耗 (kWh)',\r\n              type: 'heatmap',\r\n              data: formattedData,\r\n              emphasis: {\r\n                itemStyle: {\r\n                  shadowBlur: 10,\r\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        };\r\n        \r\n        // 应用配置并渲染\r\n        this.charts.consumption.setOption(option);\r\n        console.log('热力图渲染成功');\r\n        \r\n        // 取消图表的点击事件\r\n        this.charts.consumption.off('click');\r\n      } catch (error) {\r\n        console.error('渲染能耗分布热力图失败:', error);\r\n        \r\n        // 尝试显示错误信息\r\n        if (this.$refs.consumptionChart && this.charts.consumption) {\r\n          this.charts.consumption.dispose();\r\n          this.charts.consumption = echarts.init(this.$refs.consumptionChart);\r\n          this.charts.consumption.setOption({\r\n            title: {\r\n              text: '能耗分布热力图 (加载失败)',\r\n              textStyle: { color: '#ff0000' },\r\n              left: 'center'\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 充电站利用率对比\r\n    async renderUtilizationChart(params) {\r\n      try {\r\n        const response = await energyEfficiencyApi.getStationUtilization(params);\r\n        \r\n        // 确保DOM元素存在\r\n        if (!this.$refs.utilizationChart) {\r\n          console.error('利用率图表DOM元素不存在');\r\n          return;\r\n        }\r\n        \r\n        // 检查返回数据\r\n        if (!response.data || !Array.isArray(response.data) || response.data.length === 0) {\r\n          console.error('充电站利用率数据异常:', response.data);\r\n          // 创建没有数据的图表以避免错误\r\n          if (this.charts.utilization) {\r\n            this.charts.utilization.dispose();\r\n          }\r\n          this.charts.utilization = echarts.init(this.$refs.utilizationChart);\r\n          this.charts.utilization.setOption({\r\n            title: {\r\n              text: '充电站利用率对比 (暂无数据)',\r\n              left: 'center'\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        \r\n        // 销毁旧图表实例\r\n        if (this.charts.utilization) {\r\n          try {\r\n            this.charts.utilization.dispose();\r\n            this.charts.utilization = null;\r\n          } catch (error) {\r\n            console.error('销毁旧利用率图表失败:', error);\r\n          }\r\n        }\r\n        \r\n        // 重新创建图表实例\r\n        this.charts.utilization = echarts.init(this.$refs.utilizationChart);\r\n        \r\n        // 数据处理：确保所有数据都是正数，且单位一致\r\n        const processedData = response.data.map(item => {\r\n          return {\r\n            stationName: item.stationName || '未知充电站',\r\n            busyHours: Math.abs(parseFloat(item.busyHours || 0)),\r\n            idleHours: Math.abs(parseFloat(item.idleHours || 0)),\r\n            maintenanceHours: Math.abs(parseFloat(item.maintenanceHours || 0)),\r\n            errorHours: Math.abs(parseFloat(item.errorHours || 0))\r\n          };\r\n        });\r\n        \r\n        // 验证数据总和是否合理，如果总和异常大，则进行归一化处理\r\n        processedData.forEach(item => {\r\n          const total = item.busyHours + item.idleHours + item.maintenanceHours + item.errorHours;\r\n          // 如果总时间超过48小时（允许一定误差），则认为数据异常，需要归一化\r\n          if (total > 48) {\r\n            const factor = 24 / total;\r\n            item.busyHours *= factor;\r\n            item.idleHours *= factor;\r\n            item.maintenanceHours *= factor;\r\n            item.errorHours *= factor;\r\n          }\r\n        });\r\n        \r\n        console.log('处理后的充电站利用率数据:', processedData);\r\n        \r\n        const option = {\r\n          title: {\r\n            text: '充电站利用率对比',\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            },\r\n            formatter: function(params) {\r\n              let tooltip = params[0].name + '<br/>';\r\n              let total = 0;\r\n              \r\n              params.forEach(param => {\r\n                tooltip += param.seriesName + ': ' + param.value.toFixed(2) + ' 小时<br/>';\r\n                total += param.value;\r\n              });\r\n              \r\n              tooltip += '<br/>总计: ' + total.toFixed(2) + ' 小时';\r\n              return tooltip;\r\n            }\r\n          },\r\n          legend: {\r\n            data: ['忙碌时间', '空闲时间', '维护时间', '故障时间'],\r\n            selectedMode: false,\r\n            top: '30px'\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            top: '80px',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'value',\r\n            name: '小时',\r\n            min: 0,\r\n            max: 24,\r\n            axisLabel: {\r\n              formatter: '{value} h'\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            data: processedData.map(item => item.stationName)\r\n          },\r\n          series: [\r\n            {\r\n              name: '忙碌时间',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              label: {\r\n                show: true,\r\n                formatter: '{c} h'\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: processedData.map(item => parseFloat(item.busyHours.toFixed(2)))\r\n            },\r\n            {\r\n              name: '空闲时间',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              label: {\r\n                show: true,\r\n                formatter: '{c} h'\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: processedData.map(item => parseFloat(item.idleHours.toFixed(2)))\r\n            },\r\n            {\r\n              name: '维护时间',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              label: {\r\n                show: true,\r\n                formatter: '{c} h'\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: processedData.map(item => parseFloat(item.maintenanceHours.toFixed(2)))\r\n            },\r\n            {\r\n              name: '故障时间',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              label: {\r\n                show: true,\r\n                formatter: '{c} h'\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: processedData.map(item => parseFloat(item.errorHours.toFixed(2)))\r\n            }\r\n          ]\r\n        };\r\n        \r\n        this.charts.utilization.setOption(option);\r\n        \r\n        // 取消图表的点击事件\r\n        this.charts.utilization.off('click');\r\n      } catch (error) {\r\n        console.error('渲染充电站利用率图表失败:', error);\r\n        \r\n        // 错误情况下，显示错误信息\r\n        if (this.$refs.utilizationChart) {\r\n          if (this.charts.utilization) {\r\n            this.charts.utilization.dispose();\r\n          }\r\n          this.charts.utilization = echarts.init(this.$refs.utilizationChart);\r\n          this.charts.utilization.setOption({\r\n            title: {\r\n              text: '充电站利用率对比 (加载失败)',\r\n              textStyle: { color: '#ff0000' },\r\n              left: 'center'\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 机器人充电行为分析\r\n    async renderRobotChart(params) {\r\n      try {\r\n        const response = await energyEfficiencyApi.getRobotChargingBehavior(params);\r\n        \r\n        // 确保DOM元素存在\r\n        if (!this.$refs.robotChart) {\r\n          console.error('机器人充电行为图表DOM元素不存在');\r\n          return;\r\n        }\r\n        \r\n        // 检查返回的数据\r\n        if (!response.data || !response.data.robots || !Array.isArray(response.data.robots) || response.data.robots.length === 0) {\r\n          console.error('机器人充电行为数据异常:', response.data);\r\n          // 创建空图表以避免错误\r\n          if (this.charts.robot) {\r\n            this.charts.robot.dispose();\r\n          }\r\n          this.charts.robot = echarts.init(this.$refs.robotChart);\r\n          this.charts.robot.setOption({\r\n            title: {\r\n              text: '机器人充电行为分析 (暂无数据)',\r\n              left: 'center'\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        \r\n        // 销毁旧的图表实例\r\n        if (this.charts.robot) {\r\n          try {\r\n            this.charts.robot.dispose();\r\n            this.charts.robot = null;\r\n          } catch (error) {\r\n            console.error('销毁旧机器人充电行为图表失败:', error);\r\n          }\r\n        }\r\n        \r\n        this.charts.robot = echarts.init(this.$refs.robotChart);\r\n      \r\n        const option = {\r\n          title: {\r\n            text: '机器人充电行为分析'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          },\r\n          legend: {\r\n            data: ['充电次数', '平均充电时长', '平均等待时间'],\r\n            selectedMode: false\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: [\r\n            {\r\n              type: 'category',\r\n              data: response.data.robots.map(robot => robot.name),\r\n              axisPointer: {\r\n                type: 'shadow'\r\n              }\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              type: 'value',\r\n              name: '次数',\r\n              min: 0,\r\n              axisLabel: {\r\n                formatter: '{value}'\r\n              }\r\n            },\r\n            {\r\n              type: 'value',\r\n              name: '时间 (分钟)',\r\n              min: 0,\r\n              axisLabel: {\r\n                formatter: '{value} min'\r\n              }\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '充电次数',\r\n              type: 'bar',\r\n              data: response.data.robots.map(robot => robot.chargingCount)\r\n            },\r\n            {\r\n              name: '平均充电时长',\r\n              type: 'line',\r\n              yAxisIndex: 1,\r\n              data: response.data.robots.map(robot => robot.avgChargingDuration)\r\n            },\r\n            {\r\n              name: '平均等待时间',\r\n              type: 'line',\r\n              yAxisIndex: 1,\r\n              data: response.data.robots.map(robot => robot.avgWaitingTime)\r\n            }\r\n          ]\r\n        };\r\n        \r\n        this.charts.robot.setOption(option);\r\n        \r\n        // 取消图表的点击事件\r\n        this.charts.robot.off('click');\r\n      } catch (error) {\r\n        console.error('渲染机器人充电行为图表失败:', error);\r\n        \r\n        // 错误情况下，显示错误信息\r\n        if (this.$refs.robotChart) {\r\n          if (this.charts.robot) {\r\n            this.charts.robot.dispose();\r\n          }\r\n          this.charts.robot = echarts.init(this.$refs.robotChart);\r\n          this.charts.robot.setOption({\r\n            title: {\r\n              text: '机器人充电行为分析 (加载失败)',\r\n              textStyle: { color: '#ff0000' },\r\n              left: 'center'\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 充电高峰期分析\r\n    async renderPeakChart(params) {\r\n      try {\r\n        const response = await energyEfficiencyApi.getChargingPeakAnalysis(params);\r\n        \r\n        // 确保DOM元素存在\r\n        if (!this.$refs.peakChart) {\r\n          console.error('充电高峰期图表DOM元素不存在');\r\n          return;\r\n        }\r\n        \r\n        // 检查返回的数据\r\n        if (!response.data || !response.data.timeSlots || !response.data.requestCounts || !response.data.avgWaitingTimes) {\r\n          console.error('充电高峰期数据异常:', response.data);\r\n          // 创建空图表以避免错误\r\n          if (this.charts.peak) {\r\n            this.charts.peak.dispose();\r\n          }\r\n          this.charts.peak = echarts.init(this.$refs.peakChart);\r\n          this.charts.peak.setOption({\r\n            title: {\r\n              text: '充电高峰期分析 (暂无数据)',\r\n              left: 'center'\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        \r\n        // 销毁旧的图表实例\r\n        if (this.charts.peak) {\r\n          try {\r\n            this.charts.peak.dispose();\r\n            this.charts.peak = null;\r\n          } catch (error) {\r\n            console.error('销毁旧充电高峰期图表失败:', error);\r\n          }\r\n        }\r\n        \r\n        this.charts.peak = echarts.init(this.$refs.peakChart);\r\n      \r\n        const option = {\r\n          title: {\r\n            text: '充电高峰期分析'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n          },\r\n          legend: {\r\n            data: ['充电请求数', '平均等待时间'],\r\n            selectedMode: false\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: [\r\n            {\r\n              type: 'category',\r\n              data: response.data.timeSlots,\r\n              axisLabel: {\r\n                formatter: '{value}时'\r\n              }\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              type: 'value',\r\n              name: '请求数',\r\n              min: 0,\r\n              axisLabel: {\r\n                formatter: '{value}'\r\n              }\r\n            },\r\n            {\r\n              type: 'value',\r\n              name: '等待时间 (分钟)',\r\n              min: 0,\r\n              axisLabel: {\r\n                formatter: '{value} min'\r\n              }\r\n            }\r\n          ],\r\n          series: [\r\n            {\r\n              name: '充电请求数',\r\n              type: 'bar',\r\n              data: response.data.requestCounts\r\n            },\r\n            {\r\n              name: '平均等待时间',\r\n              type: 'line',\r\n              yAxisIndex: 1,\r\n              data: response.data.avgWaitingTimes\r\n            }\r\n          ]\r\n        };\r\n        \r\n        this.charts.peak.setOption(option);\r\n        \r\n        // 取消图表的点击事件\r\n        this.charts.peak.off('click');\r\n      } catch (error) {\r\n        console.error('渲染充电高峰期图表失败:', error);\r\n        \r\n        // 错误情况下，显示错误信息\r\n        if (this.$refs.peakChart) {\r\n          if (this.charts.peak) {\r\n            this.charts.peak.dispose();\r\n          }\r\n          this.charts.peak = echarts.init(this.$refs.peakChart);\r\n          this.charts.peak.setOption({\r\n            title: {\r\n              text: '充电高峰期分析 (加载失败)',\r\n              textStyle: { color: '#ff0000' },\r\n              left: 'center'\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 获取筛选参数\r\n    getFilterParams() {\r\n      return {\r\n        startDate: this.dateRange[0] ? this.dateRange[0].toISOString() : null,\r\n        endDate: this.dateRange[1] ? this.dateRange[1].toISOString() : null,\r\n        stationIds: this.selectedStations.length > 0 ? this.selectedStations : null,\r\n        robotIds: this.selectedRobots.length > 0 ? this.selectedRobots : null\r\n      };\r\n    },\r\n    \r\n    // 处理图表切换\r\n    handleChartChange(chartType) {\r\n      const titles = {\r\n        efficiency: '充电效率趋势分析',\r\n        consumption: '能耗分布热力图',\r\n        utilization: '充电站利用率对比',\r\n        robot: '机器人充电行为分析',\r\n        peak: '充电高峰期分析'\r\n      };\r\n      \r\n      this.currentChartTitle = titles[chartType];\r\n      \r\n      // 在切换图表前先清理旧图表实例，避免内存泄漏和DOM冲突\r\n      if (this.charts[this.currentChart]) {\r\n        try {\r\n          // 移除所有事件监听器\r\n          this.charts[this.currentChart].off();\r\n          this.charts[this.currentChart].dispose();\r\n          this.charts[this.currentChart] = null;\r\n        } catch (error) {\r\n          console.error(`清理图表失败: ${error}`);\r\n        }\r\n      }\r\n      \r\n      // 使用nextTick确保DOM已更新\r\n      this.$nextTick(() => {\r\n        this.fetchChartData();\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.energy-efficiency-analysis {\r\n  padding: 20px;\r\n}\r\n\r\n.kpi-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.kpi-card {\r\n  text-align: center;\r\n  padding: 10px;\r\n}\r\n\r\n.kpi-title {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.kpi-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.kpi-change {\r\n  font-size: 12px;\r\n}\r\n\r\n.kpi-change.up {\r\n  color: #67c23a;\r\n}\r\n\r\n.kpi-change.down {\r\n  color: #f56c6c;\r\n}\r\n\r\n.chart-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-content {\r\n  position: relative;\r\n}\r\n\r\n.chart-item {\r\n  position: relative;\r\n}\r\n\r\n.chart {\r\n  height: 400px;\r\n  width: 100%;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}