{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\n/**\r\n * 自定义错误处理工具\r\n * 用于处理和抑制开发环境中的特定错误\r\n */\n\n// 处理并隐藏ResizeObserver错误\nexport var suppressResizeObserverErrors = function suppressResizeObserverErrors() {\n  // 覆盖原生控制台错误输出\n  var originalConsoleError = console.error;\n  console.error = function (message) {\n    // 过滤掉ResizeObserver的错误\n    if (typeof message === 'string' && (message.includes('ResizeObserver') || message.includes('ResizeObserver loop limit exceeded') || message.includes('ResizeObserver loop completed with undelivered notifications'))) {\n      // 忽略这些错误\n      return;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    originalConsoleError.apply(console, [message].concat(args));\n  };\n\n  // 修改window.onerror以过滤ResizeObserver错误\n  var originalOnError = window.onerror;\n  window.onerror = function (message, source, lineno, colno, error) {\n    // 过滤掉ResizeObserver的错误\n    if (message && typeof message === 'string' && message.includes('ResizeObserver')) {\n      // 阻止错误冒泡\n      return true;\n    }\n    // 对于其他错误，调用原始的onerror\n    return originalOnError ? originalOnError(message, source, lineno, colno, error) : false;\n  };\n\n  // 修改webpack-dev-server的错误覆盖层\n  try {\n    // 查找webpack-dev-server的错误覆盖层元素\n    var findAndRemoveOverlay = function findAndRemoveOverlay() {\n      var overlays = document.querySelectorAll('div[id^=\"webpack-dev-server-client-overlay\"]');\n      overlays.forEach(function (overlay) {\n        // 检查覆盖层内容是否包含ResizeObserver错误\n        if (overlay.textContent && overlay.textContent.includes('ResizeObserver')) {\n          // 隐藏覆盖层\n          overlay.style.display = 'none';\n          // 或者完全移除\n          overlay.parentNode.removeChild(overlay);\n        }\n      });\n    };\n\n    // 定期检查并移除错误覆盖层\n    setInterval(findAndRemoveOverlay, 1000);\n\n    // 使用MutationObserver监听DOM变化\n    var observer = new MutationObserver(function (mutations) {\n      mutations.forEach(function (mutation) {\n        if (mutation.addedNodes.length) {\n          findAndRemoveOverlay();\n        }\n      });\n    });\n\n    // 开始观察body的变化\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n  } catch (e) {\n    console.warn('无法修改webpack-dev-server的错误覆盖层:', e);\n  }\n};\n\n// 应用所有错误抑制措施\nexport var applyErrorSuppressions = function applyErrorSuppressions() {\n  // 只在开发环境中应用\n  if (process.env.NODE_ENV === 'development') {\n    suppressResizeObserverErrors();\n  }\n};\nexport default {\n  suppressResizeObserverErrors: suppressResizeObserverErrors,\n  applyErrorSuppressions: applyErrorSuppressions\n};","map":{"version":3,"names":["suppressResizeObserverErrors","originalConsoleError","console","error","message","includes","_len","arguments","length","args","Array","_key","apply","concat","originalOnError","window","onerror","source","lineno","colno","findAndRemoveOverlay","overlays","document","querySelectorAll","forEach","overlay","textContent","style","display","parentNode","removeChild","setInterval","observer","MutationObserver","mutations","mutation","addedNodes","observe","body","childList","subtree","e","warn","applyErrorSuppressions","process","env","NODE_ENV"],"sources":["C:/Users/jiaronghao/Desktop/Documents/本科论文编写/5、货仓机器人激光充电和能效管理云平台的设计与实现/Y0527-final/frontend/src/utils/errorHandler.js"],"sourcesContent":["/**\r\n * 自定义错误处理工具\r\n * 用于处理和抑制开发环境中的特定错误\r\n */\r\n\r\n// 处理并隐藏ResizeObserver错误\r\nexport const suppressResizeObserverErrors = () => {\r\n  // 覆盖原生控制台错误输出\r\n  const originalConsoleError = console.error;\r\n  console.error = function(message, ...args) {\r\n    // 过滤掉ResizeObserver的错误\r\n    if (typeof message === 'string' && \r\n        (message.includes('ResizeObserver') || \r\n         message.includes('ResizeObserver loop limit exceeded') || \r\n         message.includes('ResizeObserver loop completed with undelivered notifications'))) {\r\n      // 忽略这些错误\r\n      return;\r\n    }\r\n    originalConsoleError.apply(console, [message, ...args]);\r\n  };\r\n\r\n  // 修改window.onerror以过滤ResizeObserver错误\r\n  const originalOnError = window.onerror;\r\n  window.onerror = function(message, source, lineno, colno, error) {\r\n    // 过滤掉ResizeObserver的错误\r\n    if (message && typeof message === 'string' && message.includes('ResizeObserver')) {\r\n      // 阻止错误冒泡\r\n      return true;\r\n    }\r\n    // 对于其他错误，调用原始的onerror\r\n    return originalOnError ? originalOnError(message, source, lineno, colno, error) : false;\r\n  };\r\n\r\n  // 修改webpack-dev-server的错误覆盖层\r\n  try {\r\n    // 查找webpack-dev-server的错误覆盖层元素\r\n    const findAndRemoveOverlay = () => {\r\n      const overlays = document.querySelectorAll('div[id^=\"webpack-dev-server-client-overlay\"]');\r\n      overlays.forEach(overlay => {\r\n        // 检查覆盖层内容是否包含ResizeObserver错误\r\n        if (overlay.textContent && overlay.textContent.includes('ResizeObserver')) {\r\n          // 隐藏覆盖层\r\n          overlay.style.display = 'none';\r\n          // 或者完全移除\r\n          overlay.parentNode.removeChild(overlay);\r\n        }\r\n      });\r\n    };\r\n\r\n    // 定期检查并移除错误覆盖层\r\n    setInterval(findAndRemoveOverlay, 1000);\r\n\r\n    // 使用MutationObserver监听DOM变化\r\n    const observer = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        if (mutation.addedNodes.length) {\r\n          findAndRemoveOverlay();\r\n        }\r\n      });\r\n    });\r\n\r\n    // 开始观察body的变化\r\n    observer.observe(document.body, { childList: true, subtree: true });\r\n  } catch (e) {\r\n    console.warn('无法修改webpack-dev-server的错误覆盖层:', e);\r\n  }\r\n};\r\n\r\n// 应用所有错误抑制措施\r\nexport const applyErrorSuppressions = () => {\r\n  // 只在开发环境中应用\r\n  if (process.env.NODE_ENV === 'development') {\r\n    suppressResizeObserverErrors();\r\n  }\r\n};\r\n\r\nexport default {\r\n  suppressResizeObserverErrors,\r\n  applyErrorSuppressions\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}