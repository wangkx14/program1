{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, createBlock as _createBlock, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"stations-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"toolbar\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"error-message\"\n};\nvar _hoisted_4 = {\n  key: 2,\n  \"class\": \"no-data\"\n};\nvar _hoisted_5 = {\n  key: 3,\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_6 = {\n  \"class\": \"dialog-content-wrapper\"\n};\nvar _hoisted_7 = {\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_alert = _resolveComponent(\"el-alert\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_progress = _resolveComponent(\"el-progress\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_empty = _resolveComponent(\"el-empty\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_input_number = _resolveComponent(\"el-input-number\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  var _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"充电站管理\", -1 /* HOISTED */)), _createVNode(_component_el_card, {\n    \"class\": \"box-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.showAddDialog\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[5] || (_cache[5] = [_createTextVNode(\"添加充电站\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [5]\n      }, 8 /* PROPS */, [\"onClick\"])]), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_alert, {\n        title: \"加载数据出错\",\n        type: \"error\",\n        description: $data.error,\n        \"show-icon\": \"\"\n      }, null, 8 /* PROPS */, [\"description\"])])) : _createCommentVNode(\"v-if\", true), $data.stations && $data.stations.length > 0 ? _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n        key: 1,\n        data: $options.paginatedStations,\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_table_column, {\n            prop: \"id\",\n            label: \"充电站ID\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"名称\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"location\",\n            label: \"位置\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"status\",\n            label: \"状态\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_tag, {\n                type: $options.getStatusType(scope.row.status)\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($options.getStatusText(scope.row.status)), 1 /* TEXT */)];\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"power_rating\",\n            label: \"输出功率\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"efficiency\",\n            label: \"充电效率\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_progress, {\n                percentage: scope.row.efficiency\n              }, null, 8 /* PROPS */, [\"percentage\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            label: \"操作\",\n            width: \"200\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_button, {\n                size: \"small\",\n                onClick: function onClick($event) {\n                  return $options.handleEdit(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[6] || (_cache[6] = [_createTextVNode(\"编辑\")]);\n                }),\n                _: 2 /* DYNAMIC */,\n                __: [6]\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                size: \"small\",\n                type: \"danger\",\n                onClick: function onClick($event) {\n                  return $options.handleDelete(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[7] || (_cache[7] = [_createTextVNode(\"删除\")]);\n                }),\n                _: 2 /* DYNAMIC */,\n                __: [7]\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $data.loading]]) : !$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_empty, {\n        description: \"暂无数据\"\n      })])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 分页控件 \"), $data.stations && $data.stations.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_el_pagination, {\n        \"current-page\": $data.currentPage,\n        \"onUpdate:currentPage\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.currentPage = $event;\n        }),\n        \"page-size\": $data.pageSize,\n        total: $options.totalItems,\n        layout: \"total, prev, pager, next, jumper\",\n        onCurrentChange: $options.handleCurrentChange\n      }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\", \"onCurrentChange\"])])) : _createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 添加/编辑对话框 \"), _createVNode(_component_el_dialog, {\n    title: $data.dialogTitle,\n    modelValue: $data.dialogVisible,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n      return $data.dialogVisible = $event;\n    }),\n    \"close-on-click-modal\": false,\n    \"destroy-on-close\": true,\n    \"append-to-body\": \"\",\n    \"modal-append-to-body\": false,\n    width: \"500px\",\n    \"lock-scroll\": false,\n    onOpen: $options.handleDialogOpen\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_7, [_createVNode(_component_el_button, {\n        onClick: $options.closeDialog\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[8] || (_cache[8] = [_createTextVNode(\"取消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [8]\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.handleSave\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[9] || (_cache[9] = [_createTextVNode(\"确定\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [9]\n      }, 8 /* PROPS */, [\"onClick\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_6, [(_openBlock(), _createBlock(_component_el_form, {\n        model: $data.stationForm,\n        \"label-width\": \"120px\",\n        ref: \"stationFormRef\",\n        key: \"station-form-\".concat($data.dialogVisible)\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"充电站名称\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $data.stationForm.name,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $data.stationForm.name = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"位置\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $data.stationForm.location,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $data.stationForm.location = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"输出功率\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input_number, {\n                modelValue: $data.stationForm.power_rating,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                  return $data.stationForm.power_rating = $event;\n                }),\n                min: 0,\n                controls: false\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"]))])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\", \"onOpen\"])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_card","_withCtx","_hoisted_2","_component_el_button","type","onClick","$options","showAddDialog","_cache","_createTextVNode","_","__","$data","error","_hoisted_3","_component_el_alert","title","description","_createCommentVNode","stations","length","_createBlock","_component_el_table","data","paginatedStations","style","_component_el_table_column","prop","label","width","scope","_component_el_tag","getStatusType","row","status","_toDisplayString","getStatusText","_component_el_progress","percentage","efficiency","size","$event","handleEdit","handleDelete","loading","_hoisted_4","_component_el_empty","_hoisted_5","_component_el_pagination","currentPage","pageSize","total","totalItems","layout","onCurrentChange","handleCurrentChange","_component_el_dialog","dialogTitle","modelValue","dialogVisible","onOpen","handleDialogOpen","footer","_hoisted_7","closeDialog","handleSave","_hoisted_6","_component_el_form","model","stationForm","ref","concat","_component_el_form_item","_component_el_input","name","location","_component_el_input_number","power_rating","min","controls"],"sources":["D:\\software_data\\Project\\Y0527\\CODE\\frontend\\src\\views\\Stations.vue"],"sourcesContent":["<template>\r\n  <div class=\"stations-container\">\r\n    <h2>充电站管理</h2>\r\n    <el-card class=\"box-card\">\r\n      <div class=\"toolbar\">\r\n        <el-button type=\"primary\" @click=\"showAddDialog\">添加充电站</el-button>\r\n      </div>\r\n      \r\n      <div v-if=\"error\" class=\"error-message\">\r\n        <el-alert\r\n          title=\"加载数据出错\"\r\n          type=\"error\"\r\n          :description=\"error\"\r\n          show-icon\r\n        />\r\n      </div>\r\n      \r\n      <el-table \r\n        v-if=\"stations && stations.length > 0\" \r\n        :data=\"paginatedStations\" \r\n        style=\"width: 100%\" \r\n        v-loading=\"loading\">\r\n        <el-table-column prop=\"id\" label=\"充电站ID\" width=\"180\" />\r\n        <el-table-column prop=\"name\" label=\"名称\" width=\"180\" />\r\n        <el-table-column prop=\"location\" label=\"位置\" />\r\n        <el-table-column prop=\"status\" label=\"状态\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getStatusType(scope.row.status)\">\r\n              {{ getStatusText(scope.row.status) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"power_rating\" label=\"输出功率\" />\r\n        <el-table-column prop=\"efficiency\" label=\"充电效率\">\r\n          <template #default=\"scope\">\r\n            <el-progress :percentage=\"scope.row.efficiency\" />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"200\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button size=\"small\" type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      \r\n      <div v-else-if=\"!loading\" class=\"no-data\">\r\n        <el-empty description=\"暂无数据\" />\r\n      </div>\r\n      \r\n      <!-- 分页控件 -->\r\n      <div class=\"pagination-container\" v-if=\"stations && stations.length > 0\">\r\n        <el-pagination\r\n          v-model:current-page=\"currentPage\"\r\n          :page-size=\"pageSize\"\r\n          :total=\"totalItems\"\r\n          layout=\"total, prev, pager, next, jumper\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 添加/编辑对话框 -->\r\n    <el-dialog \r\n      :title=\"dialogTitle\" \r\n      v-model=\"dialogVisible\"\r\n      :close-on-click-modal=\"false\"\r\n      :destroy-on-close=\"true\"\r\n      append-to-body\r\n      :modal-append-to-body=\"false\"\r\n      width=\"500px\"\r\n      :lock-scroll=\"false\"\r\n      @open=\"handleDialogOpen\">\r\n      <div class=\"dialog-content-wrapper\">\r\n        <el-form \r\n          :model=\"stationForm\" \r\n          label-width=\"120px\" \r\n          ref=\"stationFormRef\" \r\n          :key=\"`station-form-${dialogVisible}`\">\r\n          <el-form-item label=\"充电站名称\">\r\n            <el-input v-model=\"stationForm.name\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"位置\">\r\n            <el-input v-model=\"stationForm.location\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"输出功率\">\r\n            <el-input-number v-model=\"stationForm.power_rating\" :min=\"0\" :controls=\"false\" />\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"closeDialog\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSave\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { stationApi } from '@/api'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'Stations',\r\n  data() {\r\n    return {\r\n      stations: [],\r\n      loading: false,\r\n      error: null,\r\n      dialogVisible: false,\r\n      dialogTitle: '添加充电站',\r\n      stationForm: {\r\n        name: '',\r\n        location: '',\r\n        power_rating: 0\r\n      },\r\n      isEdit: false,\r\n      currentId: null,\r\n      // 分页相关\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      // 防止表单重复提交\r\n      isSaving: false\r\n    }\r\n  },\r\n  computed: {\r\n    totalItems() {\r\n      return this.stations.length\r\n    },\r\n    paginatedStations() {\r\n      const startIndex = (this.currentPage - 1) * this.pageSize\r\n      const endIndex = startIndex + this.pageSize\r\n      return this.stations.slice(startIndex, endIndex)\r\n    }\r\n  },\r\n  created() {\r\n    console.log('Stations组件已创建，准备获取数据')\r\n    this.fetchStations()\r\n  },\r\n  methods: {\r\n    async fetchStations() {\r\n      try {\r\n        this.loading = true\r\n        this.error = null\r\n        console.log('开始获取充电站数据')\r\n        \r\n        try {\r\n          const response = await stationApi.getAll()\r\n          // 打印原始响应\r\n          console.log('获取到充电站数据(原始):', response)\r\n          console.log('获取到充电站数据:', response.data)\r\n          console.log('充电站数据类型:', typeof response.data, Array.isArray(response.data))\r\n          \r\n          // 确保数据是数组\r\n          if (Array.isArray(response.data)) {\r\n            // 检查每个充电站对象的字段\r\n            const validStations = response.data.filter(station => {\r\n              const isValid = station && \r\n                            typeof station === 'object' && \r\n                            'id' in station && \r\n                            'name' in station && \r\n                            'location' in station && \r\n                            'status' in station;\r\n              \r\n              // 处理可能的NaN或undefined值\r\n              if (isValid) {\r\n                // 确保power_rating字段存在且为数字\r\n                if (!('power_rating' in station) || station.power_rating === null || isNaN(station.power_rating)) {\r\n                  station.power_rating = 0;\r\n                }\r\n                \r\n                // 确保efficiency字段存在且为数字\r\n                if (!('efficiency' in station) || station.efficiency === null || isNaN(station.efficiency)) {\r\n                  station.efficiency = 80; // 默认效率\r\n                }\r\n              } else {\r\n                console.warn('过滤掉无效的充电站数据:', station);\r\n              }\r\n              return isValid;\r\n            });\r\n            \r\n            console.log('有效的充电站数据:', validStations);\r\n            this.stations = validStations;\r\n            // 重置为第一页\r\n            this.currentPage = 1;\r\n            console.log('成功设置充电站数据，数量:', this.stations.length)\r\n          } else {\r\n            console.error('API返回的充电站数据不是数组:', response.data)\r\n            this.stations = [] // 设置为空数组\r\n            this.error = '充电站数据格式错误，请联系管理员'\r\n            ElMessage.error('充电站数据格式错误')\r\n          }\r\n        } catch (apiError) {\r\n          console.error('API调用出错:', apiError)\r\n          this.stations = [] // 确保错误时也设置为空数组\r\n          this.error = `API调用出错: ${apiError.message || '未知错误'}`\r\n          ElMessage.error('获取充电站数据失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取充电站列表失败:', error)\r\n        this.stations = [] // 确保错误时也设置为空数组\r\n        this.error = `获取数据失败: ${error.message || '未知错误'}`\r\n        ElMessage.error('获取充电站列表失败')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    // 分页相关方法\r\n    handleCurrentChange(page) {\r\n      this.currentPage = page\r\n      console.log(`当前页: ${this.currentPage}`)\r\n    },\r\n    getStatusType(status) {\r\n      const types = {\r\n        'idle': 'info',\r\n        'charging': 'primary',\r\n        'maintenance': 'warning',\r\n        'error': 'danger'\r\n      }\r\n      return types[status] || 'info'\r\n    },\r\n    getStatusText(status) {\r\n      const texts = {\r\n        'idle': '空闲',\r\n        'charging': '充电中',\r\n        'maintenance': '维护中',\r\n        'error': '故障'\r\n      }\r\n      return texts[status] || status\r\n    },\r\n    showAddDialog() {\r\n      this.dialogTitle = '添加充电站'\r\n      this.isEdit = false\r\n      this.stationForm = {\r\n        name: '',\r\n        location: '',\r\n        power_rating: 0\r\n      }\r\n      this.isSaving = false\r\n      // 使用nextTick确保DOM更新后再显示对话框\r\n      this.$nextTick(() => {\r\n        this.dialogVisible = true\r\n      })\r\n    },\r\n    handleEdit(row) {\r\n      this.dialogTitle = '编辑充电站'\r\n      this.isEdit = true\r\n      this.currentId = row.id\r\n      this.stationForm = { ...row }\r\n      this.isSaving = false\r\n      // 使用nextTick确保DOM更新后再显示对话框\r\n      this.$nextTick(() => {\r\n        this.dialogVisible = true\r\n      })\r\n    },\r\n    async handleDelete(row) {\r\n      try {\r\n        await ElMessageBox.confirm('确定要删除这个充电站吗？', '提示', {\r\n          type: 'warning'\r\n        })\r\n        await stationApi.delete(row.id)\r\n        ElMessage.success('删除成功')\r\n        this.fetchStations()\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          ElMessage.error('删除失败')\r\n          console.error(error)\r\n        }\r\n      }\r\n    },\r\n    handleDialogOpen() {\r\n      // 对话框打开时重置表单状态\r\n      this.isSaving = false\r\n      console.log('对话框已打开')\r\n    },\r\n    closeDialog() {\r\n      // 先隐藏内容，延迟关闭对话框，避免ResizeObserver错误\r\n      const dialogContent = document.querySelector('.dialog-content-wrapper');\r\n      if (dialogContent) {\r\n        dialogContent.style.display = 'none';\r\n      }\r\n      \r\n      // 使用较长的延时确保DOM完全稳定\r\n      setTimeout(() => {\r\n        this.dialogVisible = false\r\n      }, 300)\r\n    },\r\n    async handleSave() {\r\n      // 防止重复提交\r\n      if (this.isSaving) return\r\n      \r\n      try {\r\n        this.isSaving = true\r\n        \r\n        // 先隐藏内容，减少DOM重排\r\n        const dialogContent = document.querySelector('.dialog-content-wrapper');\r\n        if (dialogContent) {\r\n          dialogContent.style.display = 'none';\r\n        }\r\n        \r\n        if (this.isEdit) {\r\n          await stationApi.update(this.currentId, this.stationForm)\r\n          ElMessage.success('更新成功')\r\n        } else {\r\n          await stationApi.add(this.stationForm)\r\n          ElMessage.success('添加成功')\r\n        }\r\n        \r\n        // 延迟关闭对话框，避免ResizeObserver错误\r\n        setTimeout(() => {\r\n          this.dialogVisible = false\r\n          this.fetchStations()\r\n        }, 300)\r\n      } catch (error) {\r\n        // 出错时也恢复显示内容\r\n        if (dialogContent) {\r\n          dialogContent.style.display = 'block';\r\n        }\r\n        \r\n        ElMessage.error(this.isEdit ? '更新失败' : '添加失败')\r\n        console.error(error)\r\n        this.isSaving = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.stations-container {\r\n  padding: 20px;\r\n}\r\n.toolbar {\r\n  margin-bottom: 20px;\r\n}\r\n.error-message {\r\n  margin-bottom: 20px;\r\n}\r\n.no-data {\r\n  padding: 20px 0;\r\n}\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n/* 添加以下样式以解决对话框调整大小问题 */\r\n:deep(.el-dialog) {\r\n  overflow: hidden;\r\n  max-width: 500px;\r\n  min-width: 400px;\r\n  margin: 0 auto !important;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 4px;\r\n  height: auto !important;\r\n  \r\n  /* 禁用对话框的大多数动画和过渡效果 */\r\n  transition: none !important;\r\n  animation: none !important;\r\n  transform: none !important;\r\n}\r\n\r\n:deep(.el-dialog__body) {\r\n  padding: 20px;\r\n  overflow: hidden; /* 防止内容溢出导致resize事件 */\r\n  position: relative;\r\n  flex: 1;\r\n  height: auto !important;\r\n}\r\n\r\n:deep(.el-input-number) {\r\n  width: 100%;\r\n}\r\n\r\n/* 在移动设备上的样式调整 */\r\n@media screen and (max-width: 768px) {\r\n  :deep(.el-dialog) {\r\n    width: 90% !important;\r\n    min-width: 300px;\r\n  }\r\n}\r\n\r\n:deep(.el-dialog__headerbtn) {\r\n  transition: none !important;\r\n}\r\n\r\n:deep(.el-dialog__wrapper) {\r\n  overflow: hidden !important;\r\n  display: flex !important;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n/* 包装对话框内容，便于隐藏处理 */\r\n.dialog-content-wrapper {\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 全局禁用部分可能导致resize循环的动画 */\r\n:deep(.el-dialog),\r\n:deep(.el-form-item),\r\n:deep(.el-input),\r\n:deep(.el-input-number),\r\n:deep(.el-form) {\r\n  animation: none !important;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}