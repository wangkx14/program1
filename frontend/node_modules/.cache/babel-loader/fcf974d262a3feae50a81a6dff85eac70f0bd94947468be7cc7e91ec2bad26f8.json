{"ast":null,"code":"import _regeneratorRuntime from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport * as echarts from 'echarts';\nimport energyEfficiencyApi from '@/api/energyEfficiency';\nimport { formatDateTime, calculateDuration } from '@/utils/dateTime';\nimport { ArrowUp, ArrowDown } from '@element-plus/icons-vue';\nexport default {\n  name: 'EnergyEfficiencyAnalysis',\n  components: {\n    ArrowUp: ArrowUp,\n    ArrowDown: ArrowDown\n  },\n  data: function data() {\n    return {\n      // 固定的默认筛选条件（不再显示在UI上）\n      dateRange: [new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000), new Date()],\n      selectedStations: [],\n      selectedRobots: [],\n      // 数据列表\n      stations: [],\n      robots: [],\n      // 图表相关\n      currentChart: 'efficiency',\n      currentChartTitle: '充电效率趋势分析',\n      charts: {\n        efficiency: null,\n        consumption: null,\n        utilization: null,\n        robot: null,\n        peak: null\n      },\n      // KPI数据\n      kpiData: [{\n        title: '平均充电效率',\n        value: 0,\n        unit: '%',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '总能耗',\n        value: 0,\n        unit: 'kWh',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '充电器利用率',\n        value: 0,\n        unit: '%',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '平均等待时间',\n        value: 0,\n        unit: 'min',\n        change: 0,\n        trend: 'down'\n      }, {\n        title: '充电成功率',\n        value: 0,\n        unit: '%',\n        change: 0,\n        trend: 'up'\n      }, {\n        title: '总充电次数',\n        value: 0,\n        unit: '次',\n        change: 0,\n        trend: 'up'\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    initData: function initData() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var stationsResponse, robotsResponse;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return energyEfficiencyApi.getStations();\n            case 3:\n              stationsResponse = _context.sent;\n              _this.stations = stationsResponse.data;\n\n              // 获取机器人列表\n              _context.next = 7;\n              return energyEfficiencyApi.getRobots();\n            case 7:\n              robotsResponse = _context.sent;\n              _this.robots = robotsResponse.data;\n\n              // 获取初始数据\n              _this.fetchKpiData();\n              _this.fetchChartData();\n              _context.next = 17;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('初始化数据失败:', _context.t0);\n              _this.$message.error('加载数据失败，请重试');\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 13]]);\n      }))();\n    },\n    // 刷新所有数据\n    refreshData: function refreshData() {\n      this.fetchKpiData();\n      this.fetchChartData();\n    },\n    // 获取KPI数据\n    fetchKpiData: function fetchKpiData() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var params, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              params = _this2.getFilterParams();\n              _context2.next = 4;\n              return energyEfficiencyApi.getKpiData(params);\n            case 4:\n              response = _context2.sent;\n              _this2.kpiData = [{\n                title: '平均充电效率',\n                value: response.data.avgEfficiency.toFixed(2),\n                unit: '%',\n                change: response.data.efficiencyChange.toFixed(2),\n                trend: response.data.efficiencyChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '总能耗',\n                value: response.data.totalEnergy.toFixed(2),\n                unit: 'kWh',\n                change: response.data.energyChange.toFixed(2),\n                trend: response.data.energyChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '充电器利用率',\n                value: response.data.utilization.toFixed(2),\n                unit: '%',\n                change: response.data.utilizationChange.toFixed(2),\n                trend: response.data.utilizationChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '平均等待时间',\n                value: response.data.avgWaitTime.toFixed(2),\n                unit: 'min',\n                change: response.data.waitTimeChange.toFixed(2),\n                trend: response.data.waitTimeChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '充电成功率',\n                value: response.data.successRate.toFixed(2),\n                unit: '%',\n                change: response.data.successRateChange.toFixed(2),\n                trend: response.data.successRateChange >= 0 ? 'up' : 'down'\n              }, {\n                title: '总充电次数',\n                value: response.data.totalOrders || 0,\n                unit: '次',\n                change: response.data.ordersChange || 0,\n                trend: (response.data.ordersChange || 0) >= 0 ? 'up' : 'down'\n              }];\n              _context2.next = 12;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('获取KPI数据失败:', _context2.t0);\n              _this2.$message.error('获取KPI数据失败');\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 8]]);\n      }))();\n    },\n    // 获取图表数据并渲染\n    fetchChartData: function fetchChartData() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var params;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              params = _this3.getFilterParams(); // 根据当前选择的图表类型获取数据\n              _context3.t0 = _this3.currentChart;\n              _context3.next = _context3.t0 === 'efficiency' ? 5 : _context3.t0 === 'consumption' ? 8 : _context3.t0 === 'utilization' ? 11 : _context3.t0 === 'robot' ? 14 : _context3.t0 === 'peak' ? 17 : 20;\n              break;\n            case 5:\n              _context3.next = 7;\n              return _this3.renderEfficiencyChart(params);\n            case 7:\n              return _context3.abrupt(\"break\", 20);\n            case 8:\n              _context3.next = 10;\n              return _this3.renderConsumptionChart(params);\n            case 10:\n              return _context3.abrupt(\"break\", 20);\n            case 11:\n              _context3.next = 13;\n              return _this3.renderUtilizationChart(params);\n            case 13:\n              return _context3.abrupt(\"break\", 20);\n            case 14:\n              _context3.next = 16;\n              return _this3.renderRobotChart(params);\n            case 16:\n              return _context3.abrupt(\"break\", 20);\n            case 17:\n              _context3.next = 19;\n              return _this3.renderPeakChart(params);\n            case 19:\n              return _context3.abrupt(\"break\", 20);\n            case 20:\n              _context3.next = 26;\n              break;\n            case 22:\n              _context3.prev = 22;\n              _context3.t1 = _context3[\"catch\"](0);\n              console.error('获取图表数据失败:', _context3.t1);\n              _this3.$message.error('获取图表数据失败');\n            case 26:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 22]]);\n      }))();\n    },\n    // 充电效率趋势图\n    renderEfficiencyChart: function renderEfficiencyChart(params) {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return energyEfficiencyApi.getEfficiencyTrend(params);\n            case 2:\n              response = _context4.sent;\n              if (!_this4.charts.efficiency) {\n                _this4.charts.efficiency = echarts.init(_this4.$refs.efficiencyChart);\n              }\n              option = {\n                title: {\n                  text: '充电效率趋势分析',\n                  left: 'center',\n                  top: '10px'\n                },\n                tooltip: {\n                  trigger: 'axis'\n                },\n                legend: {\n                  data: response.data.stations.map(function (station) {\n                    return station.name;\n                  }),\n                  selected: response.data.stations.reduce(function (acc, station) {\n                    acc[station.name] = true;\n                    return acc;\n                  }, {}),\n                  top: '40px',\n                  type: 'scroll',\n                  orient: 'horizontal',\n                  selectedMode: false\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  top: '100px',\n                  containLabel: true\n                },\n                xAxis: {\n                  type: 'category',\n                  boundaryGap: false,\n                  data: response.data.timeline\n                },\n                yAxis: {\n                  type: 'value',\n                  name: '充电效率 (%)',\n                  min: 50,\n                  max: 100\n                },\n                series: response.data.stations.map(function (station) {\n                  return {\n                    name: station.name,\n                    type: 'line',\n                    data: station.efficiencyData,\n                    smooth: true\n                  };\n                })\n              };\n              _this4.charts.efficiency.setOption(option);\n\n              // 取消图表的点击事件\n              _this4.charts.efficiency.off('click');\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    },\n    // 能耗分布热力图\n    renderConsumptionChart: function renderConsumptionChart(params) {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response, hours, days, fixedMaxValue, dayIndexMap, formattedData, option;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              console.log('获取能耗分布数据，参数:', params);\n              _context5.next = 4;\n              return energyEfficiencyApi.getEnergyConsumptionDistribution(params);\n            case 4:\n              response = _context5.sent;\n              console.log('能耗分布数据响应:', response.data);\n              if (!_this5.charts.consumption) {\n                _this5.charts.consumption = echarts.init(_this5.$refs.consumptionChart);\n              }\n\n              // 检查返回的数据\n              if (!(!response.data || !response.data.days || !response.data.data || response.data.days.length === 0)) {\n                _context5.next = 11;\n                break;\n              }\n              console.error('能耗分布数据异常:', response.data);\n              // 显示一个空的图表\n              _this5.charts.consumption.setOption({\n                title: {\n                  text: '能耗分布热力图 (无数据)',\n                  left: 'center',\n                  top: '10px'\n                },\n                grid: {\n                  height: '70%',\n                  top: '10%'\n                }\n              });\n              return _context5.abrupt(\"return\");\n            case 11:\n              hours = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'];\n              days = response.data.days;\n              console.log('天数:', days.length, '数据点:', response.data.data.length);\n\n              // 使用固定的最大值，不再使用动态计算的maxValue\n              fixedMaxValue = 120; // 创建日期和小时的索引映射\n              dayIndexMap = {};\n              days.forEach(function (day, index) {\n                dayIndexMap[day] = index;\n              });\n\n              // 确保数据格式正确 - 热力图需要的数据格式是 [列索引, 行索引, 值]\n              formattedData = []; // 处理数据，将[日期, 小时, 值]转换为[x索引, y索引, 值]\n              response.data.data.forEach(function (item) {\n                if (Array.isArray(item) && item.length === 3) {\n                  var day = item[0];\n                  var hour = parseInt(item[1]);\n                  var value = parseFloat(item[2] || 0);\n\n                  // 确保值是有效的数字且日期和小时都有效\n                  if (!isNaN(value) && dayIndexMap[day] !== undefined && hour >= 0 && hour < 24) {\n                    // 使用小时作为x轴索引，日期索引作为y轴索引\n                    formattedData.push([hour, dayIndexMap[day], value]);\n                  }\n                }\n              });\n              console.log('格式化后的数据点数:', formattedData.length);\n              console.log('格式化后的数据示例:', formattedData.slice(0, 3));\n\n              // 添加详细调试日志\n              console.log('热力图数据详情:');\n              console.log('- X轴类别数据:', hours);\n              console.log('- Y轴类别数据:', days);\n              console.log('- 第一个数据点:', formattedData[0]);\n              if (formattedData[0]) {\n                console.log('  - X索引:', formattedData[0][0], '对应值:', hours[formattedData[0][0]]);\n                console.log('  - Y索引:', formattedData[0][1], '对应值:', days[formattedData[0][1]]);\n                console.log('  - 数值:', formattedData[0][2]);\n              }\n              option = {\n                animation: false,\n                // 禁用动画，避免渲染问题\n                title: {\n                  text: '能耗分布热力图',\n                  left: 'center',\n                  top: '10px'\n                },\n                tooltip: {\n                  position: 'top',\n                  formatter: function formatter(params) {\n                    var hour = params.data[0];\n                    var day = days[params.data[1]];\n                    var value = params.data[2];\n                    return \"\".concat(hour, \":00 - \").concat((hour + 1) % 24, \":00<br>\\u65E5\\u671F: \").concat(day, \"<br>\\u80FD\\u8017: \").concat(value.toFixed(2), \" kWh\");\n                  }\n                },\n                grid: {\n                  height: '70%',\n                  top: '60px',\n                  left: '80px',\n                  right: '30px'\n                },\n                xAxis: {\n                  type: 'category',\n                  data: hours,\n                  splitArea: {\n                    show: true\n                  },\n                  axisLabel: {\n                    formatter: '{value}:00',\n                    interval: 2 // 每隔2个显示一个标签\n                  }\n                },\n                yAxis: {\n                  type: 'category',\n                  data: days,\n                  splitArea: {\n                    show: true\n                  }\n                },\n                visualMap: {\n                  type: 'continuous',\n                  min: 0,\n                  max: fixedMaxValue,\n                  calculable: false,\n                  // 禁用拖动调节\n                  realtime: false,\n                  // 禁用实时更新\n                  orient: 'horizontal',\n                  left: 'center',\n                  bottom: '5%',\n                  inRange: {\n                    color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\n                  },\n                  text: ['高', '低'],\n                  // 两端的文本\n                  itemWidth: 15,\n                  // 图形的宽度\n                  itemHeight: 120,\n                  // 图形的高度\n                  precision: 0 // 数据展示的小数精度\n                },\n                series: [{\n                  name: '能耗 (kWh)',\n                  type: 'heatmap',\n                  data: formattedData,\n                  label: {\n                    show: false\n                  },\n                  emphasis: {\n                    itemStyle: {\n                      shadowBlur: 10,\n                      shadowColor: 'rgba(0, 0, 0, 0.5)'\n                    }\n                  }\n                }]\n              }; // 尝试设置图表选项\n              try {\n                // 完全销毁并重新创建图表实例\n                if (_this5.charts.consumption) {\n                  _this5.charts.consumption.dispose();\n                }\n\n                // 确保DOM元素存在且有尺寸\n                if (_this5.$refs.consumptionChart) {\n                  // 设置明确的宽高\n                  _this5.$refs.consumptionChart.style.width = '100%';\n                  _this5.$refs.consumptionChart.style.height = '400px';\n\n                  // 初始化图表\n                  _this5.charts.consumption = echarts.init(_this5.$refs.consumptionChart);\n\n                  // 强制应用选项\n                  _this5.charts.consumption.setOption(option, true);\n                  console.log('热力图渲染成功');\n\n                  // 强制重绘\n                  _this5.$nextTick(function () {\n                    if (_this5.charts.consumption) {\n                      _this5.charts.consumption.resize();\n                    }\n                  });\n\n                  // 取消图表的点击事件\n                  _this5.charts.consumption.off('click');\n                } else {\n                  console.error('热力图DOM元素不存在');\n                }\n              } catch (chartError) {\n                console.error('设置热力图选项失败:', chartError);\n                console.error('错误详情:', chartError.stack);\n                // 尝试重新创建图表实例\n                if (_this5.$refs.consumptionChart) {\n                  if (_this5.charts.consumption) {\n                    _this5.charts.consumption.dispose();\n                  }\n                  _this5.charts.consumption = echarts.init(_this5.$refs.consumptionChart);\n                  _this5.charts.consumption.setOption({\n                    title: {\n                      text: '能耗分布热力图 (渲染失败)',\n                      textStyle: {\n                        color: '#ff0000'\n                      },\n                      left: 'center',\n                      top: '10px'\n                    }\n                  });\n                }\n              }\n              _context5.next = 35;\n              break;\n            case 30:\n              _context5.prev = 30;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('渲染能耗分布热力图失败:', _context5.t0);\n              console.error('错误详情:', _context5.t0.stack);\n              // 显示错误信息\n              if (_this5.charts.consumption) {\n                _this5.charts.consumption.setOption({\n                  title: {\n                    text: '能耗分布热力图 (加载失败)',\n                    textStyle: {\n                      color: '#ff0000'\n                    },\n                    left: 'center',\n                    top: '10px'\n                  }\n                });\n              }\n            case 35:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[0, 30]]);\n      }))();\n    },\n    // 充电站利用率对比\n    renderUtilizationChart: function renderUtilizationChart(params) {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return energyEfficiencyApi.getStationUtilization(params);\n            case 2:\n              response = _context6.sent;\n              if (!_this6.charts.utilization) {\n                _this6.charts.utilization = echarts.init(_this6.$refs.utilizationChart);\n              }\n              option = {\n                title: {\n                  text: '充电站利用率对比'\n                },\n                tooltip: {\n                  trigger: 'axis',\n                  axisPointer: {\n                    type: 'shadow'\n                  }\n                },\n                legend: {\n                  data: ['忙碌时间', '空闲时间', '维护时间', '故障时间'],\n                  selectedMode: false\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  containLabel: true\n                },\n                xAxis: {\n                  type: 'value',\n                  name: '小时',\n                  max: 24\n                },\n                yAxis: {\n                  type: 'category',\n                  data: response.data.map(function (item) {\n                    return item.stationName;\n                  })\n                },\n                series: [{\n                  name: '忙碌时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: response.data.map(function (item) {\n                    return item.busyHours;\n                  })\n                }, {\n                  name: '空闲时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: response.data.map(function (item) {\n                    return item.idleHours;\n                  })\n                }, {\n                  name: '维护时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: response.data.map(function (item) {\n                    return item.maintenanceHours;\n                  })\n                }, {\n                  name: '故障时间',\n                  type: 'bar',\n                  stack: 'total',\n                  label: {\n                    show: true\n                  },\n                  emphasis: {\n                    focus: 'series'\n                  },\n                  data: response.data.map(function (item) {\n                    return item.errorHours;\n                  })\n                }]\n              };\n              _this6.charts.utilization.setOption(option);\n\n              // 取消图表的点击事件\n              _this6.charts.utilization.off('click');\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }))();\n    },\n    // 机器人充电行为分析\n    renderRobotChart: function renderRobotChart(params) {\n      var _this7 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return energyEfficiencyApi.getRobotChargingBehavior(params);\n            case 2:\n              response = _context7.sent;\n              if (!_this7.charts.robot) {\n                _this7.charts.robot = echarts.init(_this7.$refs.robotChart);\n              }\n              option = {\n                title: {\n                  text: '机器人充电行为分析'\n                },\n                tooltip: {\n                  trigger: 'axis'\n                },\n                legend: {\n                  data: ['充电次数', '平均充电时长', '平均等待时间'],\n                  selectedMode: false\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  containLabel: true\n                },\n                xAxis: [{\n                  type: 'category',\n                  data: response.data.robots.map(function (robot) {\n                    return robot.name;\n                  }),\n                  axisPointer: {\n                    type: 'shadow'\n                  }\n                }],\n                yAxis: [{\n                  type: 'value',\n                  name: '次数',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value}'\n                  }\n                }, {\n                  type: 'value',\n                  name: '时间 (分钟)',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value} min'\n                  }\n                }],\n                series: [{\n                  name: '充电次数',\n                  type: 'bar',\n                  data: response.data.robots.map(function (robot) {\n                    return robot.chargingCount;\n                  })\n                }, {\n                  name: '平均充电时长',\n                  type: 'line',\n                  yAxisIndex: 1,\n                  data: response.data.robots.map(function (robot) {\n                    return robot.avgChargingDuration;\n                  })\n                }, {\n                  name: '平均等待时间',\n                  type: 'line',\n                  yAxisIndex: 1,\n                  data: response.data.robots.map(function (robot) {\n                    return robot.avgWaitingTime;\n                  })\n                }]\n              };\n              _this7.charts.robot.setOption(option);\n\n              // 取消图表的点击事件\n              _this7.charts.robot.off('click');\n            case 7:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }))();\n    },\n    // 充电高峰期分析\n    renderPeakChart: function renderPeakChart(params) {\n      var _this8 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var response, option;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return energyEfficiencyApi.getChargingPeakAnalysis(params);\n            case 2:\n              response = _context8.sent;\n              if (!_this8.charts.peak) {\n                _this8.charts.peak = echarts.init(_this8.$refs.peakChart);\n              }\n              option = {\n                title: {\n                  text: '充电高峰期分析'\n                },\n                tooltip: {\n                  trigger: 'axis',\n                  axisPointer: {\n                    type: 'shadow'\n                  }\n                },\n                legend: {\n                  data: ['充电请求数', '平均等待时间'],\n                  selectedMode: false\n                },\n                grid: {\n                  left: '3%',\n                  right: '4%',\n                  bottom: '3%',\n                  containLabel: true\n                },\n                xAxis: [{\n                  type: 'category',\n                  data: ['0-2', '2-4', '4-6', '6-8', '8-10', '10-12', '12-14', '14-16', '16-18', '18-20', '20-22', '22-24'],\n                  axisLabel: {\n                    formatter: '{value}时'\n                  }\n                }],\n                yAxis: [{\n                  type: 'value',\n                  name: '请求数',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value}'\n                  }\n                }, {\n                  type: 'value',\n                  name: '等待时间 (分钟)',\n                  min: 0,\n                  axisLabel: {\n                    formatter: '{value} min'\n                  }\n                }],\n                series: [{\n                  name: '充电请求数',\n                  type: 'bar',\n                  data: response.data.requestCounts\n                }, {\n                  name: '平均等待时间',\n                  type: 'line',\n                  yAxisIndex: 1,\n                  data: response.data.avgWaitingTimes\n                }]\n              };\n              _this8.charts.peak.setOption(option);\n\n              // 取消图表的点击事件\n              _this8.charts.peak.off('click');\n            case 7:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }))();\n    },\n    // 获取筛选参数\n    getFilterParams: function getFilterParams() {\n      return {\n        startDate: this.dateRange[0] ? this.dateRange[0].toISOString() : null,\n        endDate: this.dateRange[1] ? this.dateRange[1].toISOString() : null,\n        stationIds: this.selectedStations.length > 0 ? this.selectedStations : null,\n        robotIds: this.selectedRobots.length > 0 ? this.selectedRobots : null\n      };\n    },\n    // 处理图表切换\n    handleChartChange: function handleChartChange(chartType) {\n      var titles = {\n        efficiency: '充电效率趋势分析',\n        consumption: '能耗分布热力图',\n        utilization: '充电站利用率对比',\n        robot: '机器人充电行为分析',\n        peak: '充电高峰期分析'\n      };\n      this.currentChartTitle = titles[chartType];\n      this.fetchChartData();\n    }\n  }\n};","map":{"version":3,"names":["echarts","energyEfficiencyApi","formatDateTime","calculateDuration","ArrowUp","ArrowDown","name","components","data","dateRange","Date","getTime","selectedStations","selectedRobots","stations","robots","currentChart","currentChartTitle","charts","efficiency","consumption","utilization","robot","peak","kpiData","title","value","unit","change","trend","mounted","initData","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","stationsResponse","robotsResponse","wrap","_callee$","_context","prev","next","getStations","sent","getRobots","fetchKpiData","fetchChartData","t0","console","error","$message","stop","refreshData","_this2","_callee2","params","response","_callee2$","_context2","getFilterParams","getKpiData","avgEfficiency","toFixed","efficiencyChange","totalEnergy","energyChange","utilizationChange","avgWaitTime","waitTimeChange","successRate","successRateChange","totalOrders","ordersChange","_this3","_callee3","_callee3$","_context3","renderEfficiencyChart","abrupt","renderConsumptionChart","renderUtilizationChart","renderRobotChart","renderPeakChart","t1","_this4","_callee4","option","_callee4$","_context4","getEfficiencyTrend","init","$refs","efficiencyChart","text","left","top","tooltip","trigger","legend","map","station","selected","reduce","acc","type","orient","selectedMode","grid","right","bottom","containLabel","xAxis","boundaryGap","timeline","yAxis","min","max","series","efficiencyData","smooth","setOption","off","_this5","_callee5","hours","days","fixedMaxValue","dayIndexMap","formattedData","_callee5$","_context5","log","getEnergyConsumptionDistribution","consumptionChart","length","height","forEach","day","index","item","Array","isArray","hour","parseInt","parseFloat","isNaN","undefined","push","slice","animation","position","formatter","concat","splitArea","show","axisLabel","interval","visualMap","calculable","realtime","inRange","color","itemWidth","itemHeight","precision","label","emphasis","itemStyle","shadowBlur","shadowColor","dispose","style","width","$nextTick","resize","chartError","stack","textStyle","_this6","_callee6","_callee6$","_context6","getStationUtilization","utilizationChart","axisPointer","stationName","focus","busyHours","idleHours","maintenanceHours","errorHours","_this7","_callee7","_callee7$","_context7","getRobotChargingBehavior","robotChart","chargingCount","yAxisIndex","avgChargingDuration","avgWaitingTime","_this8","_callee8","_callee8$","_context8","getChargingPeakAnalysis","peakChart","requestCounts","avgWaitingTimes","startDate","toISOString","endDate","stationIds","robotIds","handleChartChange","chartType","titles"],"sources":["D:\\software_data\\Project\\Y0527\\CODE_BAK\\frontend\\src\\views\\EnergyEfficiency.vue"],"sourcesContent":["<template>\r\n  <div class=\"energy-efficiency-analysis\">\r\n    <!-- KPI指标卡片 -->\r\n    <el-row :gutter=\"20\" class=\"kpi-container\">\r\n      <el-col :span=\"4\" v-for=\"(kpi, index) in kpiData\" :key=\"index\">\r\n        <el-card class=\"kpi-card\">\r\n          <div class=\"kpi-title\">{{ kpi.title }}</div>\r\n          <div class=\"kpi-value\">{{ kpi.value }}{{ kpi.unit }}</div>\r\n          <div class=\"kpi-change\" :class=\"kpi.trend\">\r\n            <el-icon v-if=\"kpi.trend === 'up'\"><ArrowUp /></el-icon>\r\n            <el-icon v-else><ArrowDown /></el-icon>\r\n            {{ kpi.change }}%\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 分析图表区域 -->\r\n    <el-card class=\"chart-container\">\r\n      <div class=\"chart-header\">\r\n        <h3>{{ currentChartTitle }}</h3>\r\n        <el-radio-group v-model=\"currentChart\" @change=\"handleChartChange\">\r\n          <el-radio-button :value=\"'efficiency'\">充电效率趋势</el-radio-button>\r\n          <el-radio-button :value=\"'consumption'\">能耗分布</el-radio-button>\r\n          <el-radio-button :value=\"'utilization'\">充电站利用率</el-radio-button>\r\n          <el-radio-button :value=\"'robot'\">机器人充电分析</el-radio-button>\r\n          <el-radio-button :value=\"'peak'\">充电高峰期</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n      <div class=\"chart-content\">\r\n        <!-- 不同图表的容器 -->\r\n        <div v-show=\"currentChart === 'efficiency'\" class=\"chart-item\">\r\n          <div ref=\"efficiencyChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'consumption'\" class=\"chart-item\">\r\n          <div ref=\"consumptionChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'utilization'\" class=\"chart-item\">\r\n          <div ref=\"utilizationChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'robot'\" class=\"chart-item\">\r\n          <div ref=\"robotChart\" class=\"chart\"></div>\r\n        </div>\r\n        <div v-show=\"currentChart === 'peak'\" class=\"chart-item\">\r\n          <div ref=\"peakChart\" class=\"chart\"></div>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport energyEfficiencyApi from '@/api/energyEfficiency';\r\nimport { formatDateTime, calculateDuration } from '@/utils/dateTime';\r\nimport { ArrowUp, ArrowDown } from '@element-plus/icons-vue';\r\n\r\nexport default {\r\n  name: 'EnergyEfficiencyAnalysis',\r\n  components: {\r\n    ArrowUp,\r\n    ArrowDown\r\n  },\r\n  data() {\r\n    return {\r\n      // 固定的默认筛选条件（不再显示在UI上）\r\n      dateRange: [new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000), new Date()],\r\n      selectedStations: [],\r\n      selectedRobots: [],\r\n      \r\n      // 数据列表\r\n      stations: [],\r\n      robots: [],\r\n      \r\n      // 图表相关\r\n      currentChart: 'efficiency',\r\n      currentChartTitle: '充电效率趋势分析',\r\n      charts: {\r\n        efficiency: null,\r\n        consumption: null,\r\n        utilization: null,\r\n        robot: null,\r\n        peak: null\r\n      },\r\n      \r\n      // KPI数据\r\n      kpiData: [\r\n        { title: '平均充电效率', value: 0, unit: '%', change: 0, trend: 'up' },\r\n        { title: '总能耗', value: 0, unit: 'kWh', change: 0, trend: 'up' },\r\n        { title: '充电器利用率', value: 0, unit: '%', change: 0, trend: 'up' },\r\n        { title: '平均等待时间', value: 0, unit: 'min', change: 0, trend: 'down' },\r\n        { title: '充电成功率', value: 0, unit: '%', change: 0, trend: 'up' },\r\n        { title: '总充电次数', value: 0, unit: '次', change: 0, trend: 'up' }\r\n      ]\r\n    };\r\n  },\r\n  \r\n  mounted() {\r\n    this.initData();\r\n  },\r\n  \r\n  methods: {\r\n    async initData() {\r\n      try {\r\n        // 获取充电站列表\r\n        const stationsResponse = await energyEfficiencyApi.getStations();\r\n        this.stations = stationsResponse.data;\r\n        \r\n        // 获取机器人列表\r\n        const robotsResponse = await energyEfficiencyApi.getRobots();\r\n        this.robots = robotsResponse.data;\r\n        \r\n        // 获取初始数据\r\n        this.fetchKpiData();\r\n        this.fetchChartData();\r\n      } catch (error) {\r\n        console.error('初始化数据失败:', error);\r\n        this.$message.error('加载数据失败，请重试');\r\n      }\r\n    },\r\n    \r\n    // 刷新所有数据\r\n    refreshData() {\r\n      this.fetchKpiData();\r\n      this.fetchChartData();\r\n    },\r\n    \r\n    // 获取KPI数据\r\n    async fetchKpiData() {\r\n      try {\r\n        const params = this.getFilterParams();\r\n        const response = await energyEfficiencyApi.getKpiData(params);\r\n        \r\n        this.kpiData = [\r\n          { \r\n            title: '平均充电效率', \r\n            value: response.data.avgEfficiency.toFixed(2), \r\n            unit: '%', \r\n            change: response.data.efficiencyChange.toFixed(2), \r\n            trend: response.data.efficiencyChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '总能耗', \r\n            value: response.data.totalEnergy.toFixed(2), \r\n            unit: 'kWh', \r\n            change: response.data.energyChange.toFixed(2), \r\n            trend: response.data.energyChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '充电器利用率', \r\n            value: response.data.utilization.toFixed(2), \r\n            unit: '%', \r\n            change: response.data.utilizationChange.toFixed(2), \r\n            trend: response.data.utilizationChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '平均等待时间', \r\n            value: response.data.avgWaitTime.toFixed(2), \r\n            unit: 'min', \r\n            change: response.data.waitTimeChange.toFixed(2), \r\n            trend: response.data.waitTimeChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '充电成功率', \r\n            value: response.data.successRate.toFixed(2), \r\n            unit: '%', \r\n            change: response.data.successRateChange.toFixed(2), \r\n            trend: response.data.successRateChange >= 0 ? 'up' : 'down' \r\n          },\r\n          { \r\n            title: '总充电次数', \r\n            value: response.data.totalOrders || 0, \r\n            unit: '次', \r\n            change: response.data.ordersChange || 0, \r\n            trend: (response.data.ordersChange || 0) >= 0 ? 'up' : 'down' \r\n          }\r\n        ];\r\n      } catch (error) {\r\n        console.error('获取KPI数据失败:', error);\r\n        this.$message.error('获取KPI数据失败');\r\n      }\r\n    },\r\n    \r\n    // 获取图表数据并渲染\r\n    async fetchChartData() {\r\n      try {\r\n        const params = this.getFilterParams();\r\n        \r\n        // 根据当前选择的图表类型获取数据\r\n        switch (this.currentChart) {\r\n          case 'efficiency':\r\n            await this.renderEfficiencyChart(params);\r\n            break;\r\n          case 'consumption':\r\n            await this.renderConsumptionChart(params);\r\n            break;\r\n          case 'utilization':\r\n            await this.renderUtilizationChart(params);\r\n            break;\r\n          case 'robot':\r\n            await this.renderRobotChart(params);\r\n            break;\r\n          case 'peak':\r\n            await this.renderPeakChart(params);\r\n            break;\r\n        }\r\n      } catch (error) {\r\n        console.error('获取图表数据失败:', error);\r\n        this.$message.error('获取图表数据失败');\r\n      }\r\n    },\r\n    \r\n    // 充电效率趋势图\r\n    async renderEfficiencyChart(params) {\r\n      const response = await energyEfficiencyApi.getEfficiencyTrend(params);\r\n      \r\n      if (!this.charts.efficiency) {\r\n        this.charts.efficiency = echarts.init(this.$refs.efficiencyChart);\r\n      }\r\n      \r\n      const option = {\r\n        title: {\r\n          text: '充电效率趋势分析',\r\n          left: 'center',\r\n          top: '10px'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: response.data.stations.map(station => station.name),\r\n          selected: response.data.stations.reduce((acc, station) => {\r\n            acc[station.name] = true;\r\n            return acc;\r\n          }, {}),\r\n          top: '40px',\r\n          type: 'scroll',\r\n          orient: 'horizontal',\r\n          selectedMode: false\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          top: '100px',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: response.data.timeline\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          name: '充电效率 (%)',\r\n          min: 50,\r\n          max: 100\r\n        },\r\n        series: response.data.stations.map(station => ({\r\n          name: station.name,\r\n          type: 'line',\r\n          data: station.efficiencyData,\r\n          smooth: true\r\n        }))\r\n      };\r\n      \r\n      this.charts.efficiency.setOption(option);\r\n      \r\n      // 取消图表的点击事件\r\n      this.charts.efficiency.off('click');\r\n    },\r\n    \r\n    // 能耗分布热力图\r\n    async renderConsumptionChart(params) {\r\n      try {\r\n        console.log('获取能耗分布数据，参数:', params);\r\n        const response = await energyEfficiencyApi.getEnergyConsumptionDistribution(params);\r\n        console.log('能耗分布数据响应:', response.data);\r\n        \r\n        if (!this.charts.consumption) {\r\n          this.charts.consumption = echarts.init(this.$refs.consumptionChart);\r\n        }\r\n        \r\n        // 检查返回的数据\r\n        if (!response.data || !response.data.days || !response.data.data || response.data.days.length === 0) {\r\n          console.error('能耗分布数据异常:', response.data);\r\n          // 显示一个空的图表\r\n          this.charts.consumption.setOption({\r\n            title: {\r\n              text: '能耗分布热力图 (无数据)',\r\n              left: 'center',\r\n              top: '10px'\r\n            },\r\n            grid: {\r\n              height: '70%',\r\n              top: '10%'\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        \r\n        const hours = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'];\r\n        const days = response.data.days;\r\n        \r\n        console.log('天数:', days.length, '数据点:', response.data.data.length);\r\n        \r\n        // 使用固定的最大值，不再使用动态计算的maxValue\r\n        const fixedMaxValue = 120;\r\n        \r\n        // 创建日期和小时的索引映射\r\n        const dayIndexMap = {};\r\n        days.forEach((day, index) => {\r\n          dayIndexMap[day] = index;\r\n        });\r\n        \r\n        // 确保数据格式正确 - 热力图需要的数据格式是 [列索引, 行索引, 值]\r\n        const formattedData = [];\r\n        \r\n        // 处理数据，将[日期, 小时, 值]转换为[x索引, y索引, 值]\r\n        response.data.data.forEach(item => {\r\n          if (Array.isArray(item) && item.length === 3) {\r\n            const day = item[0];\r\n            const hour = parseInt(item[1]);\r\n            const value = parseFloat(item[2] || 0);\r\n            \r\n            // 确保值是有效的数字且日期和小时都有效\r\n            if (!isNaN(value) && dayIndexMap[day] !== undefined && hour >= 0 && hour < 24) {\r\n              // 使用小时作为x轴索引，日期索引作为y轴索引\r\n              formattedData.push([hour, dayIndexMap[day], value]);\r\n            }\r\n          }\r\n        });\r\n        \r\n        console.log('格式化后的数据点数:', formattedData.length);\r\n        console.log('格式化后的数据示例:', formattedData.slice(0, 3));\r\n        \r\n        // 添加详细调试日志\r\n        console.log('热力图数据详情:');\r\n        console.log('- X轴类别数据:', hours);\r\n        console.log('- Y轴类别数据:', days);\r\n        console.log('- 第一个数据点:', formattedData[0]);\r\n        if (formattedData[0]) {\r\n          console.log('  - X索引:', formattedData[0][0], '对应值:', hours[formattedData[0][0]]);\r\n          console.log('  - Y索引:', formattedData[0][1], '对应值:', days[formattedData[0][1]]);\r\n          console.log('  - 数值:', formattedData[0][2]);\r\n        }\r\n        \r\n        const option = {\r\n          animation: false,  // 禁用动画，避免渲染问题\r\n          title: {\r\n            text: '能耗分布热力图',\r\n            left: 'center',\r\n            top: '10px'\r\n          },\r\n          tooltip: {\r\n            position: 'top',\r\n            formatter: function (params) {\r\n              const hour = params.data[0];\r\n              const day = days[params.data[1]];\r\n              const value = params.data[2];\r\n              return `${hour}:00 - ${(hour + 1) % 24}:00<br>日期: ${day}<br>能耗: ${value.toFixed(2)} kWh`;\r\n            }\r\n          },\r\n          grid: {\r\n            height: '70%',\r\n            top: '60px',\r\n            left: '80px',\r\n            right: '30px'\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: hours,\r\n            splitArea: {\r\n              show: true\r\n            },\r\n            axisLabel: {\r\n              formatter: '{value}:00',\r\n              interval: 2  // 每隔2个显示一个标签\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            data: days,\r\n            splitArea: {\r\n              show: true\r\n            }\r\n          },\r\n          visualMap: {\r\n            type: 'continuous',\r\n            min: 0,\r\n            max: fixedMaxValue,\r\n            calculable: false, // 禁用拖动调节\r\n            realtime: false,   // 禁用实时更新\r\n            orient: 'horizontal',\r\n            left: 'center',\r\n            bottom: '5%',\r\n            inRange: {\r\n              color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\r\n            },\r\n            text: ['高', '低'],     // 两端的文本\r\n            itemWidth: 15,         // 图形的宽度\r\n            itemHeight: 120,       // 图形的高度\r\n            precision: 0           // 数据展示的小数精度\r\n          },\r\n          series: [{\r\n            name: '能耗 (kWh)',\r\n            type: 'heatmap',\r\n            data: formattedData,\r\n            label: {\r\n              show: false\r\n            },\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }]\r\n        };\r\n        \r\n        // 尝试设置图表选项\r\n        try {\r\n          // 完全销毁并重新创建图表实例\r\n          if (this.charts.consumption) {\r\n            this.charts.consumption.dispose();\r\n          }\r\n          \r\n          // 确保DOM元素存在且有尺寸\r\n          if (this.$refs.consumptionChart) {\r\n            // 设置明确的宽高\r\n            this.$refs.consumptionChart.style.width = '100%';\r\n            this.$refs.consumptionChart.style.height = '400px';\r\n            \r\n            // 初始化图表\r\n            this.charts.consumption = echarts.init(this.$refs.consumptionChart);\r\n            \r\n            // 强制应用选项\r\n            this.charts.consumption.setOption(option, true);\r\n            console.log('热力图渲染成功');\r\n            \r\n            // 强制重绘\r\n            this.$nextTick(() => {\r\n              if (this.charts.consumption) {\r\n                this.charts.consumption.resize();\r\n              }\r\n            });\r\n            \r\n            // 取消图表的点击事件\r\n            this.charts.consumption.off('click');\r\n          } else {\r\n            console.error('热力图DOM元素不存在');\r\n          }\r\n        } catch (chartError) {\r\n          console.error('设置热力图选项失败:', chartError);\r\n          console.error('错误详情:', chartError.stack);\r\n          // 尝试重新创建图表实例\r\n          if (this.$refs.consumptionChart) {\r\n            if (this.charts.consumption) {\r\n              this.charts.consumption.dispose();\r\n            }\r\n            this.charts.consumption = echarts.init(this.$refs.consumptionChart);\r\n            this.charts.consumption.setOption({\r\n              title: {\r\n                text: '能耗分布热力图 (渲染失败)',\r\n                textStyle: {\r\n                  color: '#ff0000'\r\n                },\r\n                left: 'center',\r\n                top: '10px'\r\n              }\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('渲染能耗分布热力图失败:', error);\r\n        console.error('错误详情:', error.stack);\r\n        // 显示错误信息\r\n        if (this.charts.consumption) {\r\n          this.charts.consumption.setOption({\r\n            title: {\r\n              text: '能耗分布热力图 (加载失败)',\r\n              textStyle: {\r\n                color: '#ff0000'\r\n              },\r\n              left: 'center',\r\n              top: '10px'\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    // 充电站利用率对比\r\n    async renderUtilizationChart(params) {\r\n      const response = await energyEfficiencyApi.getStationUtilization(params);\r\n      \r\n      if (!this.charts.utilization) {\r\n        this.charts.utilization = echarts.init(this.$refs.utilizationChart);\r\n      }\r\n      \r\n      const option = {\r\n        title: {\r\n          text: '充电站利用率对比'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['忙碌时间', '空闲时间', '维护时间', '故障时间'],\r\n          selectedMode: false\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value',\r\n          name: '小时',\r\n          max: 24\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: response.data.map(item => item.stationName)\r\n        },\r\n        series: [\r\n          {\r\n            name: '忙碌时间',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: {\r\n              show: true\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: response.data.map(item => item.busyHours)\r\n          },\r\n          {\r\n            name: '空闲时间',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: {\r\n              show: true\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: response.data.map(item => item.idleHours)\r\n          },\r\n          {\r\n            name: '维护时间',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: {\r\n              show: true\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: response.data.map(item => item.maintenanceHours)\r\n          },\r\n          {\r\n            name: '故障时间',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: {\r\n              show: true\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: response.data.map(item => item.errorHours)\r\n          }\r\n        ]\r\n      };\r\n      \r\n      this.charts.utilization.setOption(option);\r\n      \r\n      // 取消图表的点击事件\r\n      this.charts.utilization.off('click');\r\n    },\r\n    \r\n    // 机器人充电行为分析\r\n    async renderRobotChart(params) {\r\n      const response = await energyEfficiencyApi.getRobotChargingBehavior(params);\r\n      \r\n      if (!this.charts.robot) {\r\n        this.charts.robot = echarts.init(this.$refs.robotChart);\r\n      }\r\n      \r\n      const option = {\r\n        title: {\r\n          text: '机器人充电行为分析'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['充电次数', '平均充电时长', '平均等待时间'],\r\n          selectedMode: false\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            data: response.data.robots.map(robot => robot.name),\r\n            axisPointer: {\r\n              type: 'shadow'\r\n            }\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n            name: '次数',\r\n            min: 0,\r\n            axisLabel: {\r\n              formatter: '{value}'\r\n            }\r\n          },\r\n          {\r\n            type: 'value',\r\n            name: '时间 (分钟)',\r\n            min: 0,\r\n            axisLabel: {\r\n              formatter: '{value} min'\r\n            }\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: '充电次数',\r\n            type: 'bar',\r\n            data: response.data.robots.map(robot => robot.chargingCount)\r\n          },\r\n          {\r\n            name: '平均充电时长',\r\n            type: 'line',\r\n            yAxisIndex: 1,\r\n            data: response.data.robots.map(robot => robot.avgChargingDuration)\r\n          },\r\n          {\r\n            name: '平均等待时间',\r\n            type: 'line',\r\n            yAxisIndex: 1,\r\n            data: response.data.robots.map(robot => robot.avgWaitingTime)\r\n          }\r\n        ]\r\n      };\r\n      \r\n      this.charts.robot.setOption(option);\r\n      \r\n      // 取消图表的点击事件\r\n      this.charts.robot.off('click');\r\n    },\r\n    \r\n    // 充电高峰期分析\r\n    async renderPeakChart(params) {\r\n      const response = await energyEfficiencyApi.getChargingPeakAnalysis(params);\r\n      \r\n      if (!this.charts.peak) {\r\n        this.charts.peak = echarts.init(this.$refs.peakChart);\r\n      }\r\n      \r\n      const option = {\r\n        title: {\r\n          text: '充电高峰期分析'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['充电请求数', '平均等待时间'],\r\n          selectedMode: false\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            data: ['0-2', '2-4', '4-6', '6-8', '8-10', '10-12', '12-14', '14-16', '16-18', '18-20', '20-22', '22-24'],\r\n            axisLabel: {\r\n              formatter: '{value}时'\r\n            }\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n            name: '请求数',\r\n            min: 0,\r\n            axisLabel: {\r\n              formatter: '{value}'\r\n            }\r\n          },\r\n          {\r\n            type: 'value',\r\n            name: '等待时间 (分钟)',\r\n            min: 0,\r\n            axisLabel: {\r\n              formatter: '{value} min'\r\n            }\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: '充电请求数',\r\n            type: 'bar',\r\n            data: response.data.requestCounts\r\n          },\r\n          {\r\n            name: '平均等待时间',\r\n            type: 'line',\r\n            yAxisIndex: 1,\r\n            data: response.data.avgWaitingTimes\r\n          }\r\n        ]\r\n      };\r\n      \r\n      this.charts.peak.setOption(option);\r\n      \r\n      // 取消图表的点击事件\r\n      this.charts.peak.off('click');\r\n    },\r\n    \r\n    // 获取筛选参数\r\n    getFilterParams() {\r\n      return {\r\n        startDate: this.dateRange[0] ? this.dateRange[0].toISOString() : null,\r\n        endDate: this.dateRange[1] ? this.dateRange[1].toISOString() : null,\r\n        stationIds: this.selectedStations.length > 0 ? this.selectedStations : null,\r\n        robotIds: this.selectedRobots.length > 0 ? this.selectedRobots : null\r\n      };\r\n    },\r\n    \r\n    // 处理图表切换\r\n    handleChartChange(chartType) {\r\n      const titles = {\r\n        efficiency: '充电效率趋势分析',\r\n        consumption: '能耗分布热力图',\r\n        utilization: '充电站利用率对比',\r\n        robot: '机器人充电行为分析',\r\n        peak: '充电高峰期分析'\r\n      };\r\n      \r\n      this.currentChartTitle = titles[chartType];\r\n      this.fetchChartData();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.energy-efficiency-analysis {\r\n  padding: 20px;\r\n}\r\n\r\n.kpi-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.kpi-card {\r\n  text-align: center;\r\n  padding: 10px;\r\n}\r\n\r\n.kpi-title {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.kpi-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.kpi-change {\r\n  font-size: 12px;\r\n}\r\n\r\n.kpi-change.up {\r\n  color: #67c23a;\r\n}\r\n\r\n.kpi-change.down {\r\n  color: #f56c6c;\r\n}\r\n\r\n.chart-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-content {\r\n  position: relative;\r\n}\r\n\r\n.chart-item {\r\n  position: relative;\r\n}\r\n\r\n.chart {\r\n  height: 400px;\r\n  width: 100%;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}