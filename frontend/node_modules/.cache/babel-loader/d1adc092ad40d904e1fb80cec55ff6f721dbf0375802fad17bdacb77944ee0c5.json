{"ast":null,"code":"import _regeneratorRuntime from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { stationApi, robotApi, orderApi } from '@/api';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'TestApi',\n  data: function data() {\n    return {\n      loading: false,\n      result: null,\n      error: null\n    };\n  },\n  methods: {\n    testStations: function testStations() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _this.loading = true;\n              _this.result = null;\n              _this.error = null;\n              console.log('测试充电站API');\n              _context.next = 7;\n              return stationApi.getAll();\n            case 7:\n              response = _context.sent;\n              _this.result = response.data;\n              ElMessage.success('充电站API测试成功');\n              _context.next = 17;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              _this.error = _context.t0.message || '未知错误';\n              ElMessage.error('充电站API测试失败');\n              console.error('测试充电站API出错:', _context.t0);\n            case 17:\n              _context.prev = 17;\n              _this.loading = false;\n              return _context.finish(17);\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 12, 17, 20]]);\n      }))();\n    },\n    testRobots: function testRobots() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _this2.loading = true;\n              _this2.result = null;\n              _this2.error = null;\n              console.log('测试机器人API');\n              _context2.next = 7;\n              return robotApi.getAll();\n            case 7:\n              response = _context2.sent;\n              _this2.result = response.data;\n              ElMessage.success('机器人API测试成功');\n              _context2.next = 17;\n              break;\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              _this2.error = _context2.t0.message || '未知错误';\n              ElMessage.error('机器人API测试失败');\n              console.error('测试机器人API出错:', _context2.t0);\n            case 17:\n              _context2.prev = 17;\n              _this2.loading = false;\n              return _context2.finish(17);\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 12, 17, 20]]);\n      }))();\n    },\n    testOrders: function testOrders() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _this3.loading = true;\n              _this3.result = null;\n              _this3.error = null;\n              console.log('测试订单API');\n              _context3.next = 7;\n              return orderApi.getAll();\n            case 7:\n              response = _context3.sent;\n              _this3.result = response.data;\n              ElMessage.success('订单API测试成功');\n              _context3.next = 17;\n              break;\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](0);\n              _this3.error = _context3.t0.message || '未知错误';\n              ElMessage.error('订单API测试失败');\n              console.error('测试订单API出错:', _context3.t0);\n            case 17:\n              _context3.prev = 17;\n              _this3.loading = false;\n              return _context3.finish(17);\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 12, 17, 20]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["stationApi","robotApi","orderApi","ElMessage","name","data","loading","result","error","methods","testStations","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","console","log","getAll","sent","success","t0","message","finish","stop","testRobots","_this2","_callee2","_callee2$","_context2","testOrders","_this3","_callee3","_callee3$","_context3"],"sources":["D:\\software_data\\Project\\Y0527\\CODE_BAK\\frontend\\src\\views\\TestApi.vue"],"sourcesContent":["<template>\r\n  <div class=\"test-api-container\">\r\n    <h2>API 测试页面</h2>\r\n    \r\n    <el-card class=\"box-card\" v-loading=\"loading\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>API 连接测试</span>\r\n        </div>\r\n      </template>\r\n      \r\n      <div class=\"button-group\">\r\n        <el-button type=\"success\" @click=\"testStations\">测试充电站API</el-button>\r\n        <el-button type=\"info\" @click=\"testRobots\">测试机器人API</el-button>\r\n        <el-button type=\"warning\" @click=\"testOrders\">测试订单API</el-button>\r\n      </div>\r\n      \r\n      <div v-if=\"result\" class=\"result-container\">\r\n        <h3>测试结果：</h3>\r\n        <pre>{{ JSON.stringify(result, null, 2) }}</pre>\r\n      </div>\r\n      \r\n      <div v-if=\"error\" class=\"error-container\">\r\n        <h3>错误信息：</h3>\r\n        <pre>{{ error }}</pre>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { stationApi, robotApi, orderApi } from '@/api'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'TestApi',\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      result: null,\r\n      error: null\r\n    }\r\n  },\r\n  methods: {\r\n    async testStations() {\r\n      try {\r\n        this.loading = true\r\n        this.result = null\r\n        this.error = null\r\n        \r\n        console.log('测试充电站API')\r\n        const response = await stationApi.getAll()\r\n        this.result = response.data\r\n        ElMessage.success('充电站API测试成功')\r\n      } catch (error) {\r\n        this.error = error.message || '未知错误'\r\n        ElMessage.error('充电站API测试失败')\r\n        console.error('测试充电站API出错:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    async testRobots() {\r\n      try {\r\n        this.loading = true\r\n        this.result = null\r\n        this.error = null\r\n        \r\n        console.log('测试机器人API')\r\n        const response = await robotApi.getAll()\r\n        this.result = response.data\r\n        ElMessage.success('机器人API测试成功')\r\n      } catch (error) {\r\n        this.error = error.message || '未知错误'\r\n        ElMessage.error('机器人API测试失败')\r\n        console.error('测试机器人API出错:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    async testOrders() {\r\n      try {\r\n        this.loading = true\r\n        this.result = null\r\n        this.error = null\r\n        \r\n        console.log('测试订单API')\r\n        const response = await orderApi.getAll()\r\n        this.result = response.data\r\n        ElMessage.success('订单API测试成功')\r\n      } catch (error) {\r\n        this.error = error.message || '未知错误'\r\n        ElMessage.error('订单API测试失败')\r\n        console.error('测试订单API出错:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.test-api-container {\r\n  padding: 20px;\r\n}\r\n\r\n.button-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.button-group .el-button {\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.result-container, .error-container {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.result-container {\r\n  background-color: #f0f9eb;\r\n}\r\n\r\n.error-container {\r\n  background-color: #fef0f0;\r\n}\r\n\r\npre {\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  background-color: #f5f5f5;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}