{"ast":null,"code":"import \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveDirective as _resolveDirective, createBlock as _createBlock, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"test-api-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"button-group\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"result-container\"\n};\nvar _hoisted_4 = {\n  key: 1,\n  \"class\": \"error-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"API 测试页面\", -1 /* HOISTED */)), _withDirectives((_openBlock(), _createBlock(_component_el_card, {\n    \"class\": \"box-card\"\n  }, {\n    header: _withCtx(function () {\n      return _cache[0] || (_cache[0] = [_createElementVNode(\"div\", {\n        \"class\": \"card-header\"\n      }, [_createElementVNode(\"span\", null, \"API 连接测试\")], -1 /* HOISTED */)]);\n    }),\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_button, {\n        type: \"success\",\n        onClick: $options.testStations\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[1] || (_cache[1] = [_createTextVNode(\"测试充电站API\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [1]\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"info\",\n        onClick: $options.testRobots\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[2] || (_cache[2] = [_createTextVNode(\"测试机器人API\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [2]\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"warning\",\n        onClick: $options.testOrders\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[3] || (_cache[3] = [_createTextVNode(\"测试订单API\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [3]\n      }, 8 /* PROPS */, [\"onClick\"])]), $data.result ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"测试结果：\", -1 /* HOISTED */)), _createElementVNode(\"pre\", null, _toDisplayString(JSON.stringify($data.result, null, 2)), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"错误信息：\", -1 /* HOISTED */)), _createElementVNode(\"pre\", null, _toDisplayString($data.error), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1 /* STABLE */\n  })), [[_directive_loading, $data.loading]])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_createBlock","_component_el_card","header","_withCtx","_cache","_hoisted_2","_createVNode","_component_el_button","type","onClick","$options","testStations","_createTextVNode","_","__","testRobots","testOrders","$data","result","_hoisted_3","_toDisplayString","JSON","stringify","_createCommentVNode","error","_hoisted_4","loading"],"sources":["C:\\Users\\jiaronghao\\Desktop\\Documents\\本科论文编写\\5、货仓机器人激光充电和能效管理云平台的设计与实现\\Y0527-final\\frontend\\src\\views\\TestApi.vue"],"sourcesContent":["<template>\r\n  <div class=\"test-api-container\">\r\n    <h2>API 测试页面</h2>\r\n    \r\n    <el-card class=\"box-card\" v-loading=\"loading\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>API 连接测试</span>\r\n        </div>\r\n      </template>\r\n      \r\n      <div class=\"button-group\">\r\n        <el-button type=\"success\" @click=\"testStations\">测试充电站API</el-button>\r\n        <el-button type=\"info\" @click=\"testRobots\">测试机器人API</el-button>\r\n        <el-button type=\"warning\" @click=\"testOrders\">测试订单API</el-button>\r\n      </div>\r\n      \r\n      <div v-if=\"result\" class=\"result-container\">\r\n        <h3>测试结果：</h3>\r\n        <pre>{{ JSON.stringify(result, null, 2) }}</pre>\r\n      </div>\r\n      \r\n      <div v-if=\"error\" class=\"error-container\">\r\n        <h3>错误信息：</h3>\r\n        <pre>{{ error }}</pre>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { stationApi, robotApi, orderApi } from '@/api'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'TestApi',\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      result: null,\r\n      error: null\r\n    }\r\n  },\r\n  methods: {\r\n    async testStations() {\r\n      try {\r\n        this.loading = true\r\n        this.result = null\r\n        this.error = null\r\n        \r\n        console.log('测试充电站API')\r\n        const response = await stationApi.getAll()\r\n        this.result = response.data\r\n        ElMessage.success('充电站API测试成功')\r\n      } catch (error) {\r\n        this.error = error.message || '未知错误'\r\n        ElMessage.error('充电站API测试失败')\r\n        console.error('测试充电站API出错:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    async testRobots() {\r\n      try {\r\n        this.loading = true\r\n        this.result = null\r\n        this.error = null\r\n        \r\n        console.log('测试机器人API')\r\n        const response = await robotApi.getAll()\r\n        this.result = response.data\r\n        ElMessage.success('机器人API测试成功')\r\n      } catch (error) {\r\n        this.error = error.message || '未知错误'\r\n        ElMessage.error('机器人API测试失败')\r\n        console.error('测试机器人API出错:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    async testOrders() {\r\n      try {\r\n        this.loading = true\r\n        this.result = null\r\n        this.error = null\r\n        \r\n        console.log('测试订单API')\r\n        const response = await orderApi.getAll()\r\n        this.result = response.data\r\n        ElMessage.success('订单API测试成功')\r\n      } catch (error) {\r\n        this.error = error.message || '未知错误'\r\n        ElMessage.error('订单API测试失败')\r\n        console.error('测试订单API出错:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.test-api-container {\r\n  padding: 20px;\r\n}\r\n\r\n.button-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.button-group .el-button {\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.result-container, .error-container {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.result-container {\r\n  background-color: #f0f9eb;\r\n}\r\n\r\n.error-container {\r\n  background-color: #fef0f0;\r\n}\r\n\r\npre {\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  background-color: #f5f5f5;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n</style> "],"mappings":";;;;EACO,SAAM;AAAoB;;EAUtB,SAAM;AAAc;;EAX/BA,GAAA;EAiByB,SAAM;;;EAjB/BA,GAAA;EAsBwB,SAAM;;;;;;uBArB5BC,mBAAA,CA0BM,OA1BNC,UA0BM,G,0BAzBJC,mBAAA,CAAiB,YAAb,UAAQ,sB,+BAEZC,YAAA,CAsBUC,kBAAA;IAtBD,SAAM;EAAU;IACZC,MAAM,EAAAC,QAAA,CACf;MAAA,OAEMC,MAAA,QAAAA,MAAA,OAFNL,mBAAA,CAEM;QAFD,SAAM;MAAa,IACtBA,mBAAA,CAAqB,cAAf,UAAQ,E;;IAPxB,WAAAI,QAAA,CAWM;MAAA,OAIM,CAJNJ,mBAAA,CAIM,OAJNM,UAIM,GAHJC,YAAA,CAAoEC,oBAAA;QAAzDC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAEC,QAAA,CAAAC;;QAZ1C,WAAAR,QAAA,CAYwD;UAAA,OAAQC,MAAA,QAAAA,MAAA,OAZhEQ,gBAAA,CAYwD,UAAQ,E;;QAZhEC,CAAA;QAAAC,EAAA;sCAaQR,YAAA,CAA+DC,oBAAA;QAApDC,IAAI,EAAC,MAAM;QAAEC,OAAK,EAAEC,QAAA,CAAAK;;QAbvC,WAAAZ,QAAA,CAamD;UAAA,OAAQC,MAAA,QAAAA,MAAA,OAb3DQ,gBAAA,CAamD,UAAQ,E;;QAb3DC,CAAA;QAAAC,EAAA;sCAcQR,YAAA,CAAiEC,oBAAA;QAAtDC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAEC,QAAA,CAAAM;;QAd1C,WAAAb,QAAA,CAcsD;UAAA,OAAOC,MAAA,QAAAA,MAAA,OAd7DQ,gBAAA,CAcsD,SAAO,E;;QAd7DC,CAAA;QAAAC,EAAA;wCAiBiBG,KAAA,CAAAC,MAAM,I,cAAjBrB,mBAAA,CAGM,OAHNsB,UAGM,G,0BAFJpB,mBAAA,CAAc,YAAV,OAAK,sBACTA,mBAAA,CAAgD,aAAAqB,gBAAA,CAAxCC,IAAI,CAACC,SAAS,CAACL,KAAA,CAAAC,MAAM,2B,KAnBrCK,mBAAA,gBAsBiBN,KAAA,CAAAO,KAAK,I,cAAhB3B,mBAAA,CAGM,OAHN4B,UAGM,G,0BAFJ1B,mBAAA,CAAc,YAAV,OAAK,sBACTA,mBAAA,CAAsB,aAAAqB,gBAAA,CAAdH,KAAA,CAAAO,KAAK,iB,KAxBrBD,mBAAA,e;;IAAAV,CAAA;6BAIyCI,KAAA,CAAAS,OAAO,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}