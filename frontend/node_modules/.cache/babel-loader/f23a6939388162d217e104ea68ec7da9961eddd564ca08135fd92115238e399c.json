{"ast":null,"code":"import _objectSpread from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref, reactive, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { Search, Plus, Refresh } from '@element-plus/icons-vue';\n\n// 模拟数据，实际项目中应该从API获取\nvar mockStations = [{\n  id: '1',\n  stationCode: 'CS001',\n  name: '一号充电站',\n  location: 'A区域-1号仓库',\n  chargingPower: 7.5,\n  maxCurrent: 32,\n  voltage: 220,\n  interfaceType: 'Type-A',\n  status: 'active',\n  avgEfficiency: 92.5,\n  notes: '主要服务A区域的AGV机器人'\n}, {\n  id: '2',\n  stationCode: 'CS002',\n  name: '二号充电站',\n  location: 'B区域-2号仓库',\n  chargingPower: 11.0,\n  maxCurrent: 50,\n  voltage: 220,\n  interfaceType: 'Type-B',\n  status: 'maintenance',\n  avgEfficiency: 89.3,\n  notes: '计划于下周进行例行维护'\n}];\nexport default {\n  name: 'ChargingStations',\n  components: {\n    Search: Search,\n    Plus: Plus,\n    Refresh: Refresh\n  },\n  setup: function setup() {\n    var loading = ref(false);\n    var stations = ref([]);\n    var searchQuery = ref('');\n    var currentPage = ref(1);\n    var pageSize = ref(10);\n    var total = ref(0);\n    var dialogVisible = ref(false);\n    var isEdit = ref(false);\n    var stationForm = ref({\n      id: '',\n      stationCode: '',\n      name: '',\n      location: '',\n      chargingPower: 7.5,\n      maxCurrent: 32,\n      voltage: 220,\n      interfaceType: 'Type-A',\n      status: 'active',\n      notes: ''\n    });\n    var stationFormRef = ref(null);\n    var stationRules = {\n      name: [{\n        required: true,\n        message: '请输入充电站名称',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 50,\n        message: '长度在 2 到 50 个字符',\n        trigger: 'blur'\n      }],\n      stationCode: [{\n        required: true,\n        message: '请输入充电站编号',\n        trigger: 'blur'\n      }, {\n        pattern: /^[A-Za-z0-9-_]+$/,\n        message: '编号只能包含字母、数字、横线和下划线',\n        trigger: 'blur'\n      }],\n      location: [{\n        required: true,\n        message: '请输入充电站位置',\n        trigger: 'blur'\n      }],\n      chargingPower: [{\n        required: true,\n        message: '请输入充电功率',\n        trigger: 'blur'\n      }, {\n        type: 'number',\n        min: 0,\n        message: '功率必须大于0',\n        trigger: 'blur'\n      }],\n      interfaceType: [{\n        required: true,\n        message: '请选择接口类型',\n        trigger: 'change'\n      }],\n      status: [{\n        required: true,\n        message: '请选择状态',\n        trigger: 'change'\n      }]\n    };\n\n    // 获取充电站列表\n    var fetchStations = function fetchStations() {\n      loading.value = true;\n\n      // 模拟API请求\n      setTimeout(function () {\n        stations.value = mockStations;\n        total.value = mockStations.length;\n        loading.value = false;\n      }, 500);\n    };\n\n    // 搜索充电站\n    var handleSearch = function handleSearch() {\n      if (!searchQuery.value) {\n        fetchStations();\n        return;\n      }\n      var query = searchQuery.value.toLowerCase();\n      stations.value = mockStations.filter(function (station) {\n        return station.name.toLowerCase().includes(query) || station.stationCode.toLowerCase().includes(query) || station.location.toLowerCase().includes(query);\n      });\n    };\n\n    // 刷新数据\n    var refreshData = function refreshData() {\n      searchQuery.value = '';\n      currentPage.value = 1;\n      fetchStations();\n    };\n\n    // 打开添加对话框\n    var openAddDialog = function openAddDialog() {\n      isEdit.value = false;\n      stationForm.value = {\n        id: '',\n        stationCode: '',\n        name: '',\n        location: '',\n        chargingPower: 7.5,\n        maxCurrent: 32,\n        voltage: 220,\n        interfaceType: 'Type-A',\n        status: 'active',\n        notes: ''\n      };\n      dialogVisible.value = true;\n    };\n\n    // 编辑充电站\n    var editStation = function editStation(row) {\n      isEdit.value = true;\n      stationForm.value = _objectSpread({}, row);\n      dialogVisible.value = true;\n    };\n\n    // 查看充电站详情\n    var viewStationDetail = function viewStationDetail(row) {\n      ElMessage.info(\"\\u67E5\\u770B\\u5145\\u7535\\u7AD9\\u8BE6\\u60C5: \".concat(row.name));\n      // 实际项目中应该跳转到详情页或打开详情对话框\n    };\n\n    // 确认删除\n    var confirmDelete = function confirmDelete(row) {\n      ElMessageBox.confirm(\"\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u5145\\u7535\\u7AD9 \".concat(row.name, \" \\u5417\\uFF1F\"), '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        // 模拟删除操作\n        stations.value = stations.value.filter(function (item) {\n          return item.id !== row.id;\n        });\n        ElMessage.success('删除成功');\n      })[\"catch\"](function () {\n        // 取消删除\n      });\n    };\n\n    // 提交表单\n    var submitStationForm = function submitStationForm() {\n      stationFormRef.value.validate(function (valid) {\n        if (!valid) return;\n        if (isEdit.value) {\n          // 模拟更新操作\n          var index = stations.value.findIndex(function (item) {\n            return item.id === stationForm.value.id;\n          });\n          if (index !== -1) {\n            stations.value[index] = _objectSpread({}, stationForm.value);\n          }\n          ElMessage.success('更新成功');\n        } else {\n          // 模拟添加操作\n          var newStation = _objectSpread(_objectSpread({}, stationForm.value), {}, {\n            id: Date.now().toString(),\n            avgEfficiency: 0\n          });\n          stations.value.unshift(newStation);\n          ElMessage.success('添加成功');\n        }\n        dialogVisible.value = false;\n      });\n    };\n\n    // 获取状态类型\n    var getStatusType = function getStatusType(status) {\n      var types = {\n        active: 'success',\n        maintenance: 'warning',\n        error: 'danger',\n        offline: 'info'\n      };\n      return types[status] || 'info';\n    };\n\n    // 获取状态文本\n    var getStatusText = function getStatusText(status) {\n      var texts = {\n        active: '正常',\n        maintenance: '维护中',\n        error: '故障',\n        offline: '离线'\n      };\n      return texts[status] || '未知';\n    };\n\n    // 分页处理\n    var handleSizeChange = function handleSizeChange(val) {\n      pageSize.value = val;\n      fetchStations();\n    };\n    var handleCurrentChange = function handleCurrentChange(val) {\n      currentPage.value = val;\n      fetchStations();\n    };\n    onMounted(function () {\n      fetchStations();\n    });\n    return {\n      loading: loading,\n      stations: stations,\n      searchQuery: searchQuery,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      total: total,\n      dialogVisible: dialogVisible,\n      isEdit: isEdit,\n      stationForm: stationForm,\n      stationFormRef: stationFormRef,\n      stationRules: stationRules,\n      fetchStations: fetchStations,\n      handleSearch: handleSearch,\n      refreshData: refreshData,\n      openAddDialog: openAddDialog,\n      editStation: editStation,\n      viewStationDetail: viewStationDetail,\n      confirmDelete: confirmDelete,\n      submitStationForm: submitStationForm,\n      getStatusType: getStatusType,\n      getStatusText: getStatusText,\n      handleSizeChange: handleSizeChange,\n      handleCurrentChange: handleCurrentChange\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","ElMessage","ElMessageBox","Search","Plus","Refresh","mockStations","id","stationCode","name","location","chargingPower","maxCurrent","voltage","interfaceType","status","avgEfficiency","notes","components","setup","loading","stations","searchQuery","currentPage","pageSize","total","dialogVisible","isEdit","stationForm","stationFormRef","stationRules","required","message","trigger","min","max","pattern","type","fetchStations","value","setTimeout","length","handleSearch","query","toLowerCase","filter","station","includes","refreshData","openAddDialog","editStation","row","_objectSpread","viewStationDetail","info","concat","confirmDelete","confirm","confirmButtonText","cancelButtonText","then","item","success","submitStationForm","validate","valid","index","findIndex","newStation","Date","now","toString","unshift","getStatusType","types","active","maintenance","error","offline","getStatusText","texts","handleSizeChange","val","handleCurrentChange"],"sources":["D:\\software_data\\Project\\Y0527\\CODE_BAK\\frontend\\src\\views\\ChargingStations.vue"],"sourcesContent":["<template>\r\n  <div class=\"charging-stations\">\r\n    <h1 class=\"page-title\">充电站管理</h1>\r\n    \r\n    <!-- 搜索和操作区域 -->\r\n    <div class=\"action-bar\">\r\n      <el-input\r\n        v-model=\"searchQuery\"\r\n        placeholder=\"搜索充电站\"\r\n        class=\"search-input\"\r\n        clearable\r\n        @clear=\"fetchStations\"\r\n        @input=\"handleSearch\"\r\n      >\r\n        <template #prefix>\r\n          <el-icon><Search /></el-icon>\r\n        </template>\r\n      </el-input>\r\n      \r\n      <div class=\"action-buttons\">\r\n        <el-button type=\"primary\" @click=\"openAddDialog\">\r\n          <el-icon><Plus /></el-icon>\r\n          添加充电站\r\n        </el-button>\r\n        <el-button @click=\"refreshData\">\r\n          <el-icon><Refresh /></el-icon>\r\n          刷新\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 充电站列表 -->\r\n    <el-table\r\n      v-loading=\"loading\"\r\n      :data=\"stations\"\r\n      border\r\n      style=\"width: 100%\"\r\n      row-key=\"id\"\r\n    >\r\n      <el-table-column prop=\"stationCode\" label=\"编号\" width=\"120\" />\r\n      <el-table-column prop=\"name\" label=\"名称\" width=\"180\" />\r\n      <el-table-column prop=\"location\" label=\"位置\" />\r\n      <el-table-column prop=\"chargingPower\" label=\"充电功率(kW)\" width=\"120\" />\r\n      <el-table-column prop=\"interfaceType\" label=\"接口类型\" width=\"120\" />\r\n      <el-table-column label=\"状态\" width=\"100\">\r\n        <template #default=\"scope\">\r\n          <el-tag :type=\"getStatusType(scope.row.status)\">\r\n            {{ getStatusText(scope.row.status) }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"avgEfficiency\" label=\"平均效率\" width=\"100\">\r\n        <template #default=\"scope\">\r\n          {{ scope.row.avgEfficiency ? scope.row.avgEfficiency.toFixed(2) + '%' : '暂无数据' }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"220\" fixed=\"right\">\r\n        <template #default=\"scope\">\r\n          <el-button size=\"small\" @click=\"viewStationDetail(scope.row)\">\r\n            详情\r\n          </el-button>\r\n          <el-button size=\"small\" type=\"primary\" @click=\"editStation(scope.row)\">\r\n            编辑\r\n          </el-button>\r\n          <el-button size=\"small\" type=\"danger\" @click=\"confirmDelete(scope.row)\">\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    \r\n    <!-- 分页 -->\r\n    <div class=\"pagination-container\">\r\n      <el-pagination\r\n        v-model:currentPage=\"currentPage\"\r\n        v-model:page-size=\"pageSize\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n      />\r\n    </div>\r\n    \r\n    <!-- 添加/编辑充电站对话框 -->\r\n    <el-dialog\r\n      v-model=\"dialogVisible\"\r\n      :title=\"isEdit ? '编辑充电站' : '添加充电站'\"\r\n      width=\"600px\"\r\n    >\r\n      <el-form\r\n        ref=\"stationForm\"\r\n        :model=\"stationForm\"\r\n        :rules=\"stationRules\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"充电站名称\" prop=\"name\">\r\n          <el-input v-model=\"stationForm.name\" placeholder=\"请输入充电站名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"充电站编号\" prop=\"stationCode\">\r\n          <el-input v-model=\"stationForm.stationCode\" placeholder=\"请输入充电站编号\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"位置\" prop=\"location\">\r\n          <el-input v-model=\"stationForm.location\" placeholder=\"请输入充电站位置\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"充电功率\" prop=\"chargingPower\">\r\n          <el-input-number v-model=\"stationForm.chargingPower\" :min=\"0\" :precision=\"2\" :step=\"0.5\" />\r\n          <span class=\"unit\">kW</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"最大电流\" prop=\"maxCurrent\">\r\n          <el-input-number v-model=\"stationForm.maxCurrent\" :min=\"0\" :precision=\"1\" :step=\"1\" />\r\n          <span class=\"unit\">A</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"电压\" prop=\"voltage\">\r\n          <el-input-number v-model=\"stationForm.voltage\" :min=\"0\" :precision=\"1\" :step=\"1\" />\r\n          <span class=\"unit\">V</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"接口类型\" prop=\"interfaceType\">\r\n          <el-select v-model=\"stationForm.interfaceType\" placeholder=\"请选择接口类型\">\r\n            <el-option label=\"Type-A\" value=\"Type-A\" />\r\n            <el-option label=\"Type-B\" value=\"Type-B\" />\r\n            <el-option label=\"Type-C\" value=\"Type-C\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"status\">\r\n          <el-select v-model=\"stationForm.status\" placeholder=\"请选择状态\">\r\n            <el-option label=\"正常运行\" value=\"active\" />\r\n            <el-option label=\"维护中\" value=\"maintenance\" />\r\n            <el-option label=\"故障\" value=\"error\" />\r\n            <el-option label=\"离线\" value=\"offline\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\" prop=\"notes\">\r\n          <el-input v-model=\"stationForm.notes\" type=\"textarea\" :rows=\"3\" placeholder=\"请输入备注信息\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitStationForm\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport { Search, Plus, Refresh } from '@element-plus/icons-vue';\r\n\r\n// 模拟数据，实际项目中应该从API获取\r\nconst mockStations = [\r\n  {\r\n    id: '1',\r\n    stationCode: 'CS001',\r\n    name: '一号充电站',\r\n    location: 'A区域-1号仓库',\r\n    chargingPower: 7.5,\r\n    maxCurrent: 32,\r\n    voltage: 220,\r\n    interfaceType: 'Type-A',\r\n    status: 'active',\r\n    avgEfficiency: 92.5,\r\n    notes: '主要服务A区域的AGV机器人'\r\n  },\r\n  {\r\n    id: '2',\r\n    stationCode: 'CS002',\r\n    name: '二号充电站',\r\n    location: 'B区域-2号仓库',\r\n    chargingPower: 11.0,\r\n    maxCurrent: 50,\r\n    voltage: 220,\r\n    interfaceType: 'Type-B',\r\n    status: 'maintenance',\r\n    avgEfficiency: 89.3,\r\n    notes: '计划于下周进行例行维护'\r\n  }\r\n];\r\n\r\nexport default {\r\n  name: 'ChargingStations',\r\n  components: {\r\n    Search,\r\n    Plus,\r\n    Refresh\r\n  },\r\n  setup() {\r\n    const loading = ref(false);\r\n    const stations = ref([]);\r\n    const searchQuery = ref('');\r\n    const currentPage = ref(1);\r\n    const pageSize = ref(10);\r\n    const total = ref(0);\r\n    const dialogVisible = ref(false);\r\n    const isEdit = ref(false);\r\n    const stationForm = ref({\r\n      id: '',\r\n      stationCode: '',\r\n      name: '',\r\n      location: '',\r\n      chargingPower: 7.5,\r\n      maxCurrent: 32,\r\n      voltage: 220,\r\n      interfaceType: 'Type-A',\r\n      status: 'active',\r\n      notes: ''\r\n    });\r\n    const stationFormRef = ref(null);\r\n    \r\n    const stationRules = {\r\n      name: [\r\n        { required: true, message: '请输入充电站名称', trigger: 'blur' },\r\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\r\n      ],\r\n      stationCode: [\r\n        { required: true, message: '请输入充电站编号', trigger: 'blur' },\r\n        { pattern: /^[A-Za-z0-9-_]+$/, message: '编号只能包含字母、数字、横线和下划线', trigger: 'blur' }\r\n      ],\r\n      location: [\r\n        { required: true, message: '请输入充电站位置', trigger: 'blur' }\r\n      ],\r\n      chargingPower: [\r\n        { required: true, message: '请输入充电功率', trigger: 'blur' },\r\n        { type: 'number', min: 0, message: '功率必须大于0', trigger: 'blur' }\r\n      ],\r\n      interfaceType: [\r\n        { required: true, message: '请选择接口类型', trigger: 'change' }\r\n      ],\r\n      status: [\r\n        { required: true, message: '请选择状态', trigger: 'change' }\r\n      ]\r\n    };\r\n    \r\n    // 获取充电站列表\r\n    const fetchStations = () => {\r\n      loading.value = true;\r\n      \r\n      // 模拟API请求\r\n      setTimeout(() => {\r\n        stations.value = mockStations;\r\n        total.value = mockStations.length;\r\n        loading.value = false;\r\n      }, 500);\r\n    };\r\n    \r\n    // 搜索充电站\r\n    const handleSearch = () => {\r\n      if (!searchQuery.value) {\r\n        fetchStations();\r\n        return;\r\n      }\r\n      \r\n      const query = searchQuery.value.toLowerCase();\r\n      stations.value = mockStations.filter(station => \r\n        station.name.toLowerCase().includes(query) || \r\n        station.stationCode.toLowerCase().includes(query) ||\r\n        station.location.toLowerCase().includes(query)\r\n      );\r\n    };\r\n    \r\n    // 刷新数据\r\n    const refreshData = () => {\r\n      searchQuery.value = '';\r\n      currentPage.value = 1;\r\n      fetchStations();\r\n    };\r\n    \r\n    // 打开添加对话框\r\n    const openAddDialog = () => {\r\n      isEdit.value = false;\r\n      stationForm.value = {\r\n        id: '',\r\n        stationCode: '',\r\n        name: '',\r\n        location: '',\r\n        chargingPower: 7.5,\r\n        maxCurrent: 32,\r\n        voltage: 220,\r\n        interfaceType: 'Type-A',\r\n        status: 'active',\r\n        notes: ''\r\n      };\r\n      dialogVisible.value = true;\r\n    };\r\n    \r\n    // 编辑充电站\r\n    const editStation = (row) => {\r\n      isEdit.value = true;\r\n      stationForm.value = { ...row };\r\n      dialogVisible.value = true;\r\n    };\r\n    \r\n    // 查看充电站详情\r\n    const viewStationDetail = (row) => {\r\n      ElMessage.info(`查看充电站详情: ${row.name}`);\r\n      // 实际项目中应该跳转到详情页或打开详情对话框\r\n    };\r\n    \r\n    // 确认删除\r\n    const confirmDelete = (row) => {\r\n      ElMessageBox.confirm(\r\n        `确定要删除充电站 ${row.name} 吗？`,\r\n        '警告',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).then(() => {\r\n        // 模拟删除操作\r\n        stations.value = stations.value.filter(item => item.id !== row.id);\r\n        ElMessage.success('删除成功');\r\n      }).catch(() => {\r\n        // 取消删除\r\n      });\r\n    };\r\n    \r\n    // 提交表单\r\n    const submitStationForm = () => {\r\n      stationFormRef.value.validate((valid) => {\r\n        if (!valid) return;\r\n        \r\n        if (isEdit.value) {\r\n          // 模拟更新操作\r\n          const index = stations.value.findIndex(item => item.id === stationForm.value.id);\r\n          if (index !== -1) {\r\n            stations.value[index] = { ...stationForm.value };\r\n          }\r\n          ElMessage.success('更新成功');\r\n        } else {\r\n          // 模拟添加操作\r\n          const newStation = {\r\n            ...stationForm.value,\r\n            id: Date.now().toString(),\r\n            avgEfficiency: 0\r\n          };\r\n          stations.value.unshift(newStation);\r\n          ElMessage.success('添加成功');\r\n        }\r\n        \r\n        dialogVisible.value = false;\r\n      });\r\n    };\r\n    \r\n    // 获取状态类型\r\n    const getStatusType = (status) => {\r\n      const types = {\r\n        active: 'success',\r\n        maintenance: 'warning',\r\n        error: 'danger',\r\n        offline: 'info'\r\n      };\r\n      return types[status] || 'info';\r\n    };\r\n    \r\n    // 获取状态文本\r\n    const getStatusText = (status) => {\r\n      const texts = {\r\n        active: '正常',\r\n        maintenance: '维护中',\r\n        error: '故障',\r\n        offline: '离线'\r\n      };\r\n      return texts[status] || '未知';\r\n    };\r\n    \r\n    // 分页处理\r\n    const handleSizeChange = (val) => {\r\n      pageSize.value = val;\r\n      fetchStations();\r\n    };\r\n    \r\n    const handleCurrentChange = (val) => {\r\n      currentPage.value = val;\r\n      fetchStations();\r\n    };\r\n    \r\n    onMounted(() => {\r\n      fetchStations();\r\n    });\r\n    \r\n    return {\r\n      loading,\r\n      stations,\r\n      searchQuery,\r\n      currentPage,\r\n      pageSize,\r\n      total,\r\n      dialogVisible,\r\n      isEdit,\r\n      stationForm,\r\n      stationFormRef,\r\n      stationRules,\r\n      fetchStations,\r\n      handleSearch,\r\n      refreshData,\r\n      openAddDialog,\r\n      editStation,\r\n      viewStationDetail,\r\n      confirmDelete,\r\n      submitStationForm,\r\n      getStatusType,\r\n      getStatusText,\r\n      handleSizeChange,\r\n      handleCurrentChange\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.charging-stations {\r\n  padding: 20px;\r\n}\r\n\r\n.page-title {\r\n  margin-bottom: 20px;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n.action-bar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-input {\r\n  width: 300px;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.unit {\r\n  margin-left: 10px;\r\n  color: #606266;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}