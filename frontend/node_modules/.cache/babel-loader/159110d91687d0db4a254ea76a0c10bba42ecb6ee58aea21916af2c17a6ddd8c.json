{"ast":null,"code":"import _typeof from \"D:/software_data/Project/Y0527/CODE/frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nvar api = axios.create({\n  baseURL: '/api',\n  timeout: 5000\n});\n\n// 请求拦截器\napi.interceptors.request.use(function (config) {\n  console.log(\"API\\u8BF7\\u6C42: \".concat(config.method.toUpperCase(), \" \").concat(config.url));\n  var token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = \"Bearer \".concat(token);\n    console.log('已添加认证令牌');\n  } else {\n    console.log('未找到认证令牌');\n  }\n  return config;\n}, function (error) {\n  console.error('请求拦截器错误:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\napi.interceptors.response.use(function (response) {\n  console.log(\"API\\u54CD\\u5E94: \".concat(response.config.method.toUpperCase(), \" \").concat(response.config.url), response.data);\n  return response;\n}, function (error) {\n  console.error('API错误:', error.response ? error.response.data : error.message);\n  return Promise.reject(error);\n});\n\n// 充电站相关 API\nexport var stationApi = {\n  // 获取所有充电站\n  getAll: function getAll() {\n    console.log('调用API: 获取所有充电站');\n    return api.get('/stations');\n  },\n  // 获取单个充电站\n  getById: function getById(id) {\n    return api.get(\"/stations/\".concat(id));\n  },\n  // 更新充电站\n  update: function update(id, data) {\n    return api.put(\"/stations/\".concat(id), data);\n  },\n  // 添加充电站\n  add: function add(data) {\n    return api.post('/stations', data);\n  },\n  // 删除充电站\n  \"delete\": function _delete(id) {\n    return api[\"delete\"](\"/stations/\".concat(id));\n  }\n};\n\n// 机器人相关 API\nexport var robotApi = {\n  // 获取所有机器人\n  getAll: function getAll() {\n    console.log('调用API: 获取所有机器人');\n    return api.get('/robots').then(function (response) {\n      console.log('机器人API响应数据类型:', _typeof(response.data), Array.isArray(response.data));\n      console.log('机器人API响应数据:', response.data);\n\n      // 确保返回的数据是数组\n      if (!Array.isArray(response.data)) {\n        console.error('API返回的机器人数据不是数组，强制转换为空数组');\n        response.data = [];\n      }\n      return response;\n    })[\"catch\"](function (error) {\n      console.error('获取机器人数据出错:', error);\n      // 创建一个包含空数组的响应对象\n      return {\n        data: []\n      };\n    });\n  },\n  // 获取单个机器人\n  getById: function getById(id) {\n    return api.get(\"/robots/\".concat(id));\n  },\n  // 更新机器人\n  update: function update(id, data) {\n    return api.put(\"/robots/\".concat(id), data);\n  },\n  // 添加机器人\n  add: function add(data) {\n    return api.post('/robots', data);\n  },\n  // 删除机器人\n  \"delete\": function _delete(id) {\n    return api[\"delete\"](\"/robots/\".concat(id));\n  }\n};\n\n// 订单相关 API\nexport var orderApi = {\n  // 获取所有订单\n  getAll: function getAll() {\n    console.log('调用API: 获取所有订单');\n    return api.get('/orders');\n  },\n  // 获取单个订单\n  getById: function getById(id) {\n    return api.get(\"/orders/\".concat(id));\n  },\n  // 创建订单\n  create: function create(data) {\n    return api.post('/orders', data);\n  },\n  // 更新订单状态\n  updateStatus: function updateStatus(id, status) {\n    return api.put(\"/orders/\".concat(id, \"/status\"), {\n      status: status\n    });\n  }\n};\n\n// 系统相关 API\nexport var systemApi = {\n  // 获取系统设置\n  getSettings: function getSettings() {\n    return api.get('/system/settings');\n  },\n  // 更新系统设置\n  updateSettings: function updateSettings(data) {\n    return api.put('/system/settings', data);\n  },\n  // 获取仪表盘数据\n  getDashboardData: function getDashboardData() {\n    console.log('调用API: 获取仪表盘数据');\n    return api.get('/system/dashboard');\n  },\n  // 获取系统告警\n  getAlerts: function getAlerts() {\n    return api.get('/system/alerts');\n  },\n  // 获取系统日志\n  getLogs: function getLogs() {\n    return api.get('/system/logs');\n  },\n  // 获取充电效率记录\n  getEfficiencyLogs: function getEfficiencyLogs() {\n    return api.get('/system/efficiency');\n  }\n};\n\n// 测试API连接\nexport var testApi = {\n  checkData: function checkData() {\n    console.log('调用API: 测试数据加载');\n    return api.get('/auth/test-data');\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","interceptors","request","use","config","console","log","concat","method","toUpperCase","url","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","data","message","stationApi","getAll","get","getById","id","update","put","add","post","delete","robotApi","then","_typeof","Array","isArray","orderApi","updateStatus","status","systemApi","getSettings","updateSettings","getDashboardData","getAlerts","getLogs","getEfficiencyLogs","testApi","checkData"],"sources":["D:/software_data/Project/Y0527/CODE/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: '/api',\r\n  timeout: 5000\r\n})\r\n\r\n// 请求拦截器\r\napi.interceptors.request.use(\r\n  config => {\r\n    console.log(`API请求: ${config.method.toUpperCase()} ${config.url}`)\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`\r\n      console.log('已添加认证令牌')\r\n    } else {\r\n      console.log('未找到认证令牌')\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    console.error('请求拦截器错误:', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\napi.interceptors.response.use(\r\n  response => {\r\n    console.log(`API响应: ${response.config.method.toUpperCase()} ${response.config.url}`, response.data)\r\n    return response\r\n  },\r\n  error => {\r\n    console.error('API错误:', error.response ? error.response.data : error.message)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 充电站相关 API\r\nexport const stationApi = {\r\n  // 获取所有充电站\r\n  getAll() {\r\n    console.log('调用API: 获取所有充电站')\r\n    return api.get('/stations')\r\n  },\r\n  // 获取单个充电站\r\n  getById(id) {\r\n    return api.get(`/stations/${id}`)\r\n  },\r\n  // 更新充电站\r\n  update(id, data) {\r\n    return api.put(`/stations/${id}`, data)\r\n  },\r\n  // 添加充电站\r\n  add(data) {\r\n    return api.post('/stations', data)\r\n  },\r\n  // 删除充电站\r\n  delete(id) {\r\n    return api.delete(`/stations/${id}`)\r\n  }\r\n}\r\n\r\n// 机器人相关 API\r\nexport const robotApi = {\r\n  // 获取所有机器人\r\n  getAll() {\r\n    console.log('调用API: 获取所有机器人')\r\n    return api.get('/robots')\r\n      .then(response => {\r\n        console.log('机器人API响应数据类型:', typeof response.data, Array.isArray(response.data))\r\n        console.log('机器人API响应数据:', response.data)\r\n        \r\n        // 确保返回的数据是数组\r\n        if (!Array.isArray(response.data)) {\r\n          console.error('API返回的机器人数据不是数组，强制转换为空数组')\r\n          response.data = []\r\n        }\r\n        \r\n        return response\r\n      })\r\n      .catch(error => {\r\n        console.error('获取机器人数据出错:', error)\r\n        // 创建一个包含空数组的响应对象\r\n        return { data: [] }\r\n      })\r\n  },\r\n  // 获取单个机器人\r\n  getById(id) {\r\n    return api.get(`/robots/${id}`)\r\n  },\r\n  // 更新机器人\r\n  update(id, data) {\r\n    return api.put(`/robots/${id}`, data)\r\n  },\r\n  // 添加机器人\r\n  add(data) {\r\n    return api.post('/robots', data)\r\n  },\r\n  // 删除机器人\r\n  delete(id) {\r\n    return api.delete(`/robots/${id}`)\r\n  }\r\n}\r\n\r\n// 订单相关 API\r\nexport const orderApi = {\r\n  // 获取所有订单\r\n  getAll() {\r\n    console.log('调用API: 获取所有订单')\r\n    return api.get('/orders')\r\n  },\r\n  // 获取单个订单\r\n  getById(id) {\r\n    return api.get(`/orders/${id}`)\r\n  },\r\n  // 创建订单\r\n  create(data) {\r\n    return api.post('/orders', data)\r\n  },\r\n  // 更新订单状态\r\n  updateStatus(id, status) {\r\n    return api.put(`/orders/${id}/status`, { status })\r\n  }\r\n}\r\n\r\n// 系统相关 API\r\nexport const systemApi = {\r\n  // 获取系统设置\r\n  getSettings() {\r\n    return api.get('/system/settings')\r\n  },\r\n  // 更新系统设置\r\n  updateSettings(data) {\r\n    return api.put('/system/settings', data)\r\n  },\r\n  // 获取仪表盘数据\r\n  getDashboardData() {\r\n    console.log('调用API: 获取仪表盘数据')\r\n    return api.get('/system/dashboard')\r\n  },\r\n  // 获取系统告警\r\n  getAlerts() {\r\n    return api.get('/system/alerts')\r\n  },\r\n  // 获取系统日志\r\n  getLogs() {\r\n    return api.get('/system/logs')\r\n  },\r\n  // 获取充电效率记录\r\n  getEfficiencyLogs() {\r\n    return api.get('/system/efficiency')\r\n  }\r\n}\r\n\r\n// 测试API连接\r\nexport const testApi = {\r\n  checkData() {\r\n    console.log('调用API: 测试数据加载')\r\n    return api.get('/auth/test-data')\r\n  }\r\n}\r\n\r\nexport default api "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}