{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/jiaronghao/Desktop/Documents/\\u672C\\u79D1\\u8BBA\\u6587\\u7F16\\u5199/5\\u3001\\u8D27\\u4ED3\\u673A\\u5668\\u4EBA\\u6FC0\\u5149\\u5145\\u7535\\u548C\\u80FD\\u6548\\u7BA1\\u7406\\u4E91\\u5E73\\u53F0\\u7684\\u8BBE\\u8BA1\\u4E0E\\u5B9E\\u73B0/Y0527-final/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _typeof from \"C:/Users/jiaronghao/Desktop/Documents/\\u672C\\u79D1\\u8BBA\\u6587\\u7F16\\u5199/5\\u3001\\u8D27\\u4ED3\\u673A\\u5668\\u4EBA\\u6FC0\\u5149\\u5145\\u7535\\u548C\\u80FD\\u6548\\u7BA1\\u7406\\u4E91\\u5E73\\u53F0\\u7684\\u8BBE\\u8BA1\\u4E0E\\u5B9E\\u73B0/Y0527-final/frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _asyncToGenerator from \"C:/Users/jiaronghao/Desktop/Documents/\\u672C\\u79D1\\u8BBA\\u6587\\u7F16\\u5199/5\\u3001\\u8D27\\u4ED3\\u673A\\u5668\\u4EBA\\u6FC0\\u5149\\u5145\\u7535\\u548C\\u80FD\\u6548\\u7BA1\\u7406\\u4E91\\u5E73\\u53F0\\u7684\\u8BBE\\u8BA1\\u4E0E\\u5B9E\\u73B0/Y0527-final/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { robotApi, stationApi } from '@/api';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { ref, onMounted, computed } from 'vue';\nexport default {\n  name: 'Robots',\n  setup: function setup() {\n    // 数据\n    var robots = ref([]);\n    var stations = ref([]);\n    var loading = ref(false);\n    var error = ref(null);\n    var currentPage = ref(1);\n    var pageSize = ref(10);\n    var bindDialogVisible = ref(false);\n    var selectedRobot = ref(null);\n    var selectedStationId = ref(null);\n\n    // 计算属性\n    var totalItems = computed(function () {\n      return robots.value.length;\n    });\n    var paginatedRobots = computed(function () {\n      var startIndex = (currentPage.value - 1) * pageSize.value;\n      var endIndex = startIndex + pageSize.value;\n      return robots.value.slice(startIndex, endIndex);\n    });\n\n    // 可用的充电站（未绑定的）\n    var availableStations = computed(function () {\n      return stations.value.filter(function (station) {\n        return !station.bound_robot_id && station.status === 'idle';\n      });\n    });\n\n    // 获取充电站名称\n    var getStationName = function getStationName(stationId) {\n      var station = stations.value.find(function (s) {\n        return s.id === stationId;\n      });\n      return station ? station.name : \"\\u5145\\u7535\\u7AD9 \".concat(stationId);\n    };\n\n    // 方法\n    var fetchRobots = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, validRobots;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              loading.value = true;\n              error.value = null;\n              console.log('开始获取机器人数据');\n              _context.prev = 4;\n              _context.next = 7;\n              return robotApi.getAll();\n            case 7:\n              response = _context.sent;\n              console.log('获取到机器人数据:', response.data);\n\n              // 确保数据是数组\n              if (Array.isArray(response.data)) {\n                // 检查每个机器人对象的字段\n                validRobots = response.data.filter(function (robot) {\n                  var isValid = robot && _typeof(robot) === 'object' && 'id' in robot && 'name' in robot && 'battery_level' in robot && 'status' in robot;\n                  if (!isValid) {\n                    console.warn('过滤掉无效的机器人数据:', robot);\n                  }\n                  return isValid;\n                });\n                console.log('有效的机器人数据:', validRobots);\n                robots.value = validRobots;\n                // 重置为第一页\n                currentPage.value = 1;\n                console.log('成功设置机器人数据，数量:', robots.value.length);\n              } else {\n                console.error('API返回的机器人数据不是数组:', response.data);\n                robots.value = []; // 设置为空数组\n                error.value = '机器人数据格式错误，请联系管理员';\n                ElMessage.error('机器人数据格式错误');\n              }\n              _context.next = 18;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](4);\n              console.error('API调用出错:', _context.t0);\n              robots.value = []; // 确保错误时也设置为空数组\n              error.value = \"API\\u8C03\\u7528\\u51FA\\u9519: \".concat(_context.t0.message || '未知错误');\n              ElMessage.error('获取机器人数据失败');\n            case 18:\n              _context.next = 26;\n              break;\n            case 20:\n              _context.prev = 20;\n              _context.t1 = _context[\"catch\"](0);\n              console.error('获取机器人列表失败:', _context.t1);\n              robots.value = []; // 确保错误时也设置为空数组\n              _context.t1.value = \"\\u83B7\\u53D6\\u6570\\u636E\\u5931\\u8D25: \".concat(_context.t1.message || '未知错误');\n              ElMessage.error('获取机器人列表失败');\n            case 26:\n              _context.prev = 26;\n              loading.value = false;\n              return _context.finish(26);\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 20, 26, 29], [4, 12]]);\n      }));\n      return function fetchRobots() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var fetchStations = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              console.log('开始获取充电站数据');\n              _context2.next = 4;\n              return stationApi.getAll();\n            case 4:\n              response = _context2.sent;\n              if (Array.isArray(response.data)) {\n                stations.value = response.data;\n                console.log('成功设置充电站数据，数量:', stations.value.length);\n              } else {\n                console.error('API返回的充电站数据不是数组:', response.data);\n                stations.value = []; // 设置为空数组\n              }\n              _context2.next = 13;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('获取充电站列表失败:', _context2.t0);\n              stations.value = []; // 确保错误时也设置为空数组\n              ElMessage.error('获取充电站列表失败');\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 8]]);\n      }));\n      return function fetchStations() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 分页相关方法\n    var handleCurrentChange = function handleCurrentChange(page) {\n      currentPage.value = page;\n      console.log(\"\\u5F53\\u524D\\u9875: \".concat(currentPage.value));\n    };\n\n    // 显示绑定充电站对话框\n    var showBindStationDialog = function showBindStationDialog(robot) {\n      selectedRobot.value = robot;\n      selectedStationId.value = null;\n      bindDialogVisible.value = true;\n    };\n\n    // 绑定充电站\n    var bindStation = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var robotId, stationId;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(!selectedRobot.value || !selectedStationId.value)) {\n                _context3.next = 3;\n                break;\n              }\n              ElMessage.warning('请先选择充电站');\n              return _context3.abrupt(\"return\");\n            case 3:\n              _context3.prev = 3;\n              robotId = selectedRobot.value.id;\n              stationId = selectedStationId.value;\n              _context3.next = 8;\n              return robotApi.bindToStation(robotId, stationId);\n            case 8:\n              ElMessage.success(\"\\u6210\\u529F\\u7ED1\\u5B9A\\u673A\\u5668\\u4EBA \".concat(selectedRobot.value.name, \" \\u5230\\u5145\\u7535\\u7AD9\"));\n\n              // 关闭对话框\n              bindDialogVisible.value = false;\n\n              // 刷新数据\n              _context3.next = 12;\n              return Promise.all([fetchRobots(), fetchStations()]);\n            case 12:\n              _context3.next = 18;\n              break;\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](3);\n              console.error('绑定充电站失败:', _context3.t0);\n              ElMessage.error(\"\\u7ED1\\u5B9A\\u5145\\u7535\\u7AD9\\u5931\\u8D25: \".concat(_context3.t0.message || '未知错误'));\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[3, 14]]);\n      }));\n      return function bindStation() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // 解绑充电站\n    var unbindStation = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(robot) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (robot.bound_station_id) {\n                _context4.next = 3;\n                break;\n              }\n              ElMessage.warning('该机器人未绑定充电站');\n              return _context4.abrupt(\"return\");\n            case 3:\n              _context4.prev = 3;\n              _context4.next = 6;\n              return ElMessageBox.confirm(\"\\u786E\\u5B9A\\u8981\\u89E3\\u9664\\u673A\\u5668\\u4EBA \".concat(robot.name, \" \\u4E0E\\u5145\\u7535\\u7AD9\\u7684\\u7ED1\\u5B9A\\u5417\\uFF1F\"), '解绑确认', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n              });\n            case 6:\n              _context4.next = 8;\n              return robotApi.unbindFromStation(robot.id, robot.bound_station_id);\n            case 8:\n              ElMessage.success(\"\\u6210\\u529F\\u89E3\\u9664\\u673A\\u5668\\u4EBA \".concat(robot.name, \" \\u4E0E\\u5145\\u7535\\u7AD9\\u7684\\u7ED1\\u5B9A\"));\n\n              // 刷新数据\n              _context4.next = 11;\n              return Promise.all([fetchRobots(), fetchStations()]);\n            case 11:\n              _context4.next = 16;\n              break;\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](3);\n              if (_context4.t0 !== 'cancel') {\n                console.error('解绑充电站失败:', _context4.t0);\n                ElMessage.error(\"\\u89E3\\u7ED1\\u5145\\u7535\\u7AD9\\u5931\\u8D25: \".concat(_context4.t0.message || '未知错误'));\n              }\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[3, 13]]);\n      }));\n      return function unbindStation(_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    // 开始充电\n    var startCharging = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(robot) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (robot.bound_station_id) {\n                _context5.next = 3;\n                break;\n              }\n              ElMessage.warning('请先绑定充电站');\n              return _context5.abrupt(\"return\");\n            case 3:\n              if (!(robot.status === 'charging')) {\n                _context5.next = 6;\n                break;\n              }\n              ElMessage.warning('该机器人已经在充电');\n              return _context5.abrupt(\"return\");\n            case 6:\n              _context5.prev = 6;\n              _context5.next = 9;\n              return robotApi.startCharging(robot.id);\n            case 9:\n              ElMessage.success(\"\\u6210\\u529F\\u5F00\\u59CB\\u673A\\u5668\\u4EBA \".concat(robot.name, \" \\u7684\\u5145\\u7535\"));\n\n              // 刷新数据\n              _context5.next = 12;\n              return Promise.all([fetchRobots(), fetchStations()]);\n            case 12:\n              _context5.next = 18;\n              break;\n            case 14:\n              _context5.prev = 14;\n              _context5.t0 = _context5[\"catch\"](6);\n              console.error('开始充电失败:', _context5.t0);\n              ElMessage.error(\"\\u5F00\\u59CB\\u5145\\u7535\\u5931\\u8D25: \".concat(_context5.t0.message || '未知错误'));\n            case 18:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[6, 14]]);\n      }));\n      return function startCharging(_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    // 模拟低电量\n    var simulateLowBattery = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(robot) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return robotApi.simulateLowBattery(robot.id);\n            case 3:\n              ElMessage.success(\"\\u5DF2\\u5C06\\u673A\\u5668\\u4EBA \".concat(robot.name, \" \\u7684\\u7535\\u91CF\\u964D\\u81F3 15%\"));\n\n              // 刷新数据\n              _context6.next = 6;\n              return fetchRobots();\n            case 6:\n              _context6.next = 12;\n              break;\n            case 8:\n              _context6.prev = 8;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.error('模拟低电量失败:', _context6.t0);\n              ElMessage.error(\"\\u6A21\\u62DF\\u4F4E\\u7535\\u91CF\\u5931\\u8D25: \".concat(_context6.t0.message || '未知错误'));\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[0, 8]]);\n      }));\n      return function simulateLowBattery(_x3) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    // 获取状态类型和文本\n    var getStatusType = function getStatusType(status) {\n      var types = {\n        'idle': 'info',\n        'working': 'success',\n        'charging': 'primary',\n        'error': 'danger'\n      };\n      return types[status] || 'info';\n    };\n    var getStatusText = function getStatusText(status) {\n      var texts = {\n        'idle': '空闲',\n        'working': '工作中',\n        'charging': '充电中',\n        'error': '故障'\n      };\n      return texts[status] || status;\n    };\n\n    // 获取电池状态\n    var getBatteryStatus = function getBatteryStatus(level) {\n      if (level < 20) return 'exception';\n      if (level < 50) return 'warning';\n      return 'success';\n    };\n\n    // 生命周期钩子\n    onMounted(function () {\n      console.log('Robots组件已挂载，准备获取数据');\n      // 添加这个延迟调用以避免可能的ResizeObserver问题\n      setTimeout(function () {\n        Promise.all([fetchRobots(), fetchStations()]);\n      }, 0);\n    });\n    return {\n      robots: robots,\n      stations: stations,\n      loading: loading,\n      error: error,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalItems: totalItems,\n      paginatedRobots: paginatedRobots,\n      bindDialogVisible: bindDialogVisible,\n      selectedRobot: selectedRobot,\n      selectedStationId: selectedStationId,\n      availableStations: availableStations,\n      handleCurrentChange: handleCurrentChange,\n      getStatusType: getStatusType,\n      getStatusText: getStatusText,\n      getBatteryStatus: getBatteryStatus,\n      getStationName: getStationName,\n      showBindStationDialog: showBindStationDialog,\n      bindStation: bindStation,\n      unbindStation: unbindStation,\n      startCharging: startCharging,\n      simulateLowBattery: simulateLowBattery\n    };\n  }\n};","map":{"version":3,"names":["robotApi","stationApi","ElMessage","ElMessageBox","ref","onMounted","computed","name","setup","robots","stations","loading","error","currentPage","pageSize","bindDialogVisible","selectedRobot","selectedStationId","totalItems","value","length","paginatedRobots","startIndex","endIndex","slice","availableStations","filter","station","bound_robot_id","status","getStationName","stationId","find","s","id","concat","fetchRobots","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","validRobots","wrap","_callee$","_context","prev","next","console","log","getAll","sent","data","Array","isArray","robot","isValid","_typeof","warn","t0","message","t1","finish","stop","apply","arguments","fetchStations","_ref2","_callee2","_callee2$","_context2","handleCurrentChange","page","showBindStationDialog","bindStation","_ref3","_callee3","robotId","_callee3$","_context3","warning","abrupt","bindToStation","success","Promise","all","unbindStation","_ref4","_callee4","_callee4$","_context4","bound_station_id","confirm","confirmButtonText","cancelButtonText","type","unbindFromStation","_x","startCharging","_ref5","_callee5","_callee5$","_context5","_x2","simulateLowBattery","_ref6","_callee6","_callee6$","_context6","_x3","getStatusType","types","getStatusText","texts","getBatteryStatus","level","setTimeout"],"sources":["C:\\Users\\jiaronghao\\Desktop\\Documents\\本科论文编写\\5、货仓机器人激光充电和能效管理云平台的设计与实现\\Y0527-final\\frontend\\src\\views\\Robots.vue"],"sourcesContent":["<template>\r\n  <div class=\"robots-container\">\r\n    <h2>机器人管理</h2>\r\n    <el-card class=\"box-card\">\r\n      <div v-if=\"error\" class=\"error-message\">\r\n        <el-alert\r\n          title=\"加载数据出错\"\r\n          type=\"error\"\r\n          :description=\"error\"\r\n          show-icon\r\n        />\r\n      </div>\r\n      <el-table \r\n        v-if=\"robots && robots.length > 0\" \r\n        :data=\"paginatedRobots\" \r\n        style=\"width: 100%\" \r\n        v-loading=\"loading\">\r\n        <el-table-column prop=\"id\" label=\"机器人ID\" width=\"80\" />\r\n        <el-table-column prop=\"name\" label=\"名称\" width=\"150\" />\r\n        <el-table-column prop=\"battery_level\" label=\"电量\" width=\"150\">\r\n          <template #default=\"scope\">\r\n            <el-progress \r\n              :percentage=\"scope.row.battery_level\" \r\n              :status=\"getBatteryStatus(scope.row.battery_level)\" \r\n            />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getStatusType(scope.row.status)\">\r\n              {{ getStatusText(scope.row.status) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"bound_station_id\" label=\"绑定充电站\" width=\"120\">\r\n          <template #default=\"scope\">\r\n            <el-tag v-if=\"scope.row.bound_station_id\" type=\"success\">\r\n              {{ getStationName(scope.row.bound_station_id) }}\r\n            </el-tag>\r\n            <span v-else>未绑定</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"last_charging\" label=\"上次充电时间\" width=\"180\" />\r\n        <el-table-column label=\"操作\">\r\n          <template #default=\"scope\">\r\n            <!-- 绑定充电站按钮 -->\r\n            <el-button \r\n              v-if=\"!scope.row.bound_station_id\" \r\n              size=\"small\" \r\n              type=\"primary\" \r\n              @click=\"showBindStationDialog(scope.row)\"\r\n            >\r\n              绑定充电站\r\n            </el-button>\r\n            \r\n            <!-- 解绑充电站按钮 -->\r\n            <el-button \r\n              v-if=\"scope.row.bound_station_id\" \r\n              size=\"small\" \r\n              type=\"warning\" \r\n              @click=\"unbindStation(scope.row)\"\r\n            >\r\n              解绑充电站\r\n            </el-button>\r\n            \r\n            <!-- 开始充电按钮 -->\r\n            <el-button \r\n              v-if=\"scope.row.bound_station_id && scope.row.status !== 'charging' && scope.row.battery_level < 100\" \r\n              size=\"small\" \r\n              type=\"success\" \r\n              @click=\"startCharging(scope.row)\"\r\n            >\r\n              开始充电\r\n            </el-button>\r\n            \r\n            <!-- 模拟低电量按钮 -->\r\n            <el-button \r\n              v-if=\"scope.row.battery_level > 20\" \r\n              size=\"small\" \r\n              type=\"danger\" \r\n              @click=\"simulateLowBattery(scope.row)\"\r\n            >\r\n              模拟低电量\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div v-else-if=\"!loading\" class=\"no-data\">\r\n        <el-empty description=\"暂无数据\" />\r\n      </div>\r\n      \r\n      <!-- 分页控件 -->\r\n      <div class=\"pagination-container\" v-if=\"robots && robots.length > 0\">\r\n        <el-pagination\r\n          v-model:current-page=\"currentPage\"\r\n          :page-size=\"pageSize\"\r\n          :total=\"totalItems\"\r\n          layout=\"total, prev, pager, next, jumper\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n    \r\n    <!-- 绑定充电站对话框 -->\r\n    <el-dialog \r\n      title=\"绑定充电站\" \r\n      v-model=\"bindDialogVisible\"\r\n      :close-on-click-modal=\"false\"\r\n      width=\"500px\">\r\n      <div v-if=\"availableStations.length > 0\">\r\n        <p>为机器人 <strong>{{ selectedRobot?.name }}</strong> 选择要绑定的充电站：</p>\r\n        <el-select v-model=\"selectedStationId\" placeholder=\"请选择充电站\" style=\"width: 100%\">\r\n          <el-option\r\n            v-for=\"station in availableStations\"\r\n            :key=\"station.id\"\r\n            :label=\"`${station.name} (ID: ${station.id})`\"\r\n            :value=\"station.id\"\r\n          />\r\n        </el-select>\r\n      </div>\r\n      <div v-else>\r\n        <el-alert\r\n          title=\"没有可用的充电站\"\r\n          type=\"warning\"\r\n          description=\"所有充电站已被绑定或不可用\"\r\n          show-icon\r\n        />\r\n      </div>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"bindDialogVisible = false\">取消</el-button>\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"bindStation\" \r\n            :disabled=\"!selectedStationId || availableStations.length === 0\"\r\n          >\r\n            确定\r\n          </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { robotApi, stationApi } from '@/api'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { ref, onMounted, computed } from 'vue'\r\n\r\nexport default {\r\n  name: 'Robots',\r\n  setup() {\r\n    // 数据\r\n    const robots = ref([])\r\n    const stations = ref([])\r\n    const loading = ref(false)\r\n    const error = ref(null)\r\n    const currentPage = ref(1)\r\n    const pageSize = ref(10)\r\n    const bindDialogVisible = ref(false)\r\n    const selectedRobot = ref(null)\r\n    const selectedStationId = ref(null)\r\n    \r\n    // 计算属性\r\n    const totalItems = computed(() => robots.value.length)\r\n    const paginatedRobots = computed(() => {\r\n      const startIndex = (currentPage.value - 1) * pageSize.value\r\n      const endIndex = startIndex + pageSize.value\r\n      return robots.value.slice(startIndex, endIndex)\r\n    })\r\n    \r\n    // 可用的充电站（未绑定的）\r\n    const availableStations = computed(() => {\r\n      return stations.value.filter(station => \r\n        !station.bound_robot_id && station.status === 'idle'\r\n      )\r\n    })\r\n    \r\n    // 获取充电站名称\r\n    const getStationName = (stationId) => {\r\n      const station = stations.value.find(s => s.id === stationId)\r\n      return station ? station.name : `充电站 ${stationId}`\r\n    }\r\n    \r\n    // 方法\r\n    const fetchRobots = async () => {\r\n      try {\r\n        loading.value = true\r\n        error.value = null\r\n        console.log('开始获取机器人数据')\r\n        \r\n        try {\r\n          const response = await robotApi.getAll()\r\n          console.log('获取到机器人数据:', response.data)\r\n          \r\n          // 确保数据是数组\r\n          if (Array.isArray(response.data)) {\r\n            // 检查每个机器人对象的字段\r\n            const validRobots = response.data.filter(robot => {\r\n              const isValid = robot && \r\n                             typeof robot === 'object' && \r\n                             'id' in robot && \r\n                             'name' in robot && \r\n                             'battery_level' in robot && \r\n                             'status' in robot;\r\n              if (!isValid) {\r\n                console.warn('过滤掉无效的机器人数据:', robot);\r\n              }\r\n              return isValid;\r\n            });\r\n            \r\n            console.log('有效的机器人数据:', validRobots);\r\n            robots.value = validRobots;\r\n            // 重置为第一页\r\n            currentPage.value = 1;\r\n            console.log('成功设置机器人数据，数量:', robots.value.length)\r\n          } else {\r\n            console.error('API返回的机器人数据不是数组:', response.data)\r\n            robots.value = [] // 设置为空数组\r\n            error.value = '机器人数据格式错误，请联系管理员'\r\n            ElMessage.error('机器人数据格式错误')\r\n          }\r\n        } catch (apiError) {\r\n          console.error('API调用出错:', apiError)\r\n          robots.value = [] // 确保错误时也设置为空数组\r\n          error.value = `API调用出错: ${apiError.message || '未知错误'}`\r\n          ElMessage.error('获取机器人数据失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取机器人列表失败:', error)\r\n        robots.value = [] // 确保错误时也设置为空数组\r\n        error.value = `获取数据失败: ${error.message || '未知错误'}`\r\n        ElMessage.error('获取机器人列表失败')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    const fetchStations = async () => {\r\n      try {\r\n        console.log('开始获取充电站数据')\r\n        const response = await stationApi.getAll()\r\n        \r\n        if (Array.isArray(response.data)) {\r\n          stations.value = response.data\r\n          console.log('成功设置充电站数据，数量:', stations.value.length)\r\n        } else {\r\n          console.error('API返回的充电站数据不是数组:', response.data)\r\n          stations.value = [] // 设置为空数组\r\n        }\r\n      } catch (error) {\r\n        console.error('获取充电站列表失败:', error)\r\n        stations.value = [] // 确保错误时也设置为空数组\r\n        ElMessage.error('获取充电站列表失败')\r\n      }\r\n    }\r\n    \r\n    // 分页相关方法\r\n    const handleCurrentChange = (page) => {\r\n      currentPage.value = page\r\n      console.log(`当前页: ${currentPage.value}`)\r\n    }\r\n    \r\n    // 显示绑定充电站对话框\r\n    const showBindStationDialog = (robot) => {\r\n      selectedRobot.value = robot\r\n      selectedStationId.value = null\r\n      bindDialogVisible.value = true\r\n    }\r\n    \r\n    // 绑定充电站\r\n    const bindStation = async () => {\r\n      if (!selectedRobot.value || !selectedStationId.value) {\r\n        ElMessage.warning('请先选择充电站')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        const robotId = selectedRobot.value.id\r\n        const stationId = selectedStationId.value\r\n        \r\n        await robotApi.bindToStation(robotId, stationId)\r\n        ElMessage.success(`成功绑定机器人 ${selectedRobot.value.name} 到充电站`)\r\n        \r\n        // 关闭对话框\r\n        bindDialogVisible.value = false\r\n        \r\n        // 刷新数据\r\n        await Promise.all([fetchRobots(), fetchStations()])\r\n      } catch (error) {\r\n        console.error('绑定充电站失败:', error)\r\n        ElMessage.error(`绑定充电站失败: ${error.message || '未知错误'}`)\r\n      }\r\n    }\r\n    \r\n    // 解绑充电站\r\n    const unbindStation = async (robot) => {\r\n      if (!robot.bound_station_id) {\r\n        ElMessage.warning('该机器人未绑定充电站')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        // 显示确认对话框\r\n        await ElMessageBox.confirm(\r\n          `确定要解除机器人 ${robot.name} 与充电站的绑定吗？`,\r\n          '解绑确认',\r\n          {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }\r\n        )\r\n        \r\n        await robotApi.unbindFromStation(robot.id, robot.bound_station_id)\r\n        ElMessage.success(`成功解除机器人 ${robot.name} 与充电站的绑定`)\r\n        \r\n        // 刷新数据\r\n        await Promise.all([fetchRobots(), fetchStations()])\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          console.error('解绑充电站失败:', error)\r\n          ElMessage.error(`解绑充电站失败: ${error.message || '未知错误'}`)\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 开始充电\r\n    const startCharging = async (robot) => {\r\n      if (!robot.bound_station_id) {\r\n        ElMessage.warning('请先绑定充电站')\r\n        return\r\n      }\r\n      \r\n      if (robot.status === 'charging') {\r\n        ElMessage.warning('该机器人已经在充电')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        await robotApi.startCharging(robot.id)\r\n        ElMessage.success(`成功开始机器人 ${robot.name} 的充电`)\r\n        \r\n        // 刷新数据\r\n        await Promise.all([fetchRobots(), fetchStations()])\r\n      } catch (error) {\r\n        console.error('开始充电失败:', error)\r\n        ElMessage.error(`开始充电失败: ${error.message || '未知错误'}`)\r\n      }\r\n    }\r\n    \r\n    // 模拟低电量\r\n    const simulateLowBattery = async (robot) => {\r\n      try {\r\n        await robotApi.simulateLowBattery(robot.id)\r\n        ElMessage.success(`已将机器人 ${robot.name} 的电量降至 15%`)\r\n        \r\n        // 刷新数据\r\n        await fetchRobots()\r\n      } catch (error) {\r\n        console.error('模拟低电量失败:', error)\r\n        ElMessage.error(`模拟低电量失败: ${error.message || '未知错误'}`)\r\n      }\r\n    }\r\n    \r\n    // 获取状态类型和文本\r\n    const getStatusType = (status) => {\r\n      const types = {\r\n        'idle': 'info',\r\n        'working': 'success',\r\n        'charging': 'primary',\r\n        'error': 'danger'\r\n      }\r\n      return types[status] || 'info'\r\n    }\r\n    \r\n    const getStatusText = (status) => {\r\n      const texts = {\r\n        'idle': '空闲',\r\n        'working': '工作中',\r\n        'charging': '充电中',\r\n        'error': '故障'\r\n      }\r\n      return texts[status] || status\r\n    }\r\n    \r\n    // 获取电池状态\r\n    const getBatteryStatus = (level) => {\r\n      if (level < 20) return 'exception'\r\n      if (level < 50) return 'warning'\r\n      return 'success'\r\n    }\r\n    \r\n    // 生命周期钩子\r\n    onMounted(() => {\r\n      console.log('Robots组件已挂载，准备获取数据')\r\n      // 添加这个延迟调用以避免可能的ResizeObserver问题\r\n      setTimeout(() => {\r\n        Promise.all([fetchRobots(), fetchStations()])\r\n      }, 0)\r\n    })\r\n    \r\n    return {\r\n      robots,\r\n      stations,\r\n      loading,\r\n      error,\r\n      currentPage,\r\n      pageSize,\r\n      totalItems,\r\n      paginatedRobots,\r\n      bindDialogVisible,\r\n      selectedRobot,\r\n      selectedStationId,\r\n      availableStations,\r\n      handleCurrentChange,\r\n      getStatusType,\r\n      getStatusText,\r\n      getBatteryStatus,\r\n      getStationName,\r\n      showBindStationDialog,\r\n      bindStation,\r\n      unbindStation,\r\n      startCharging,\r\n      simulateLowBattery\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.robots-container {\r\n  padding: 20px;\r\n}\r\n.error-message {\r\n  margin-bottom: 20px;\r\n}\r\n.no-data {\r\n  padding: 20px 0;\r\n}\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}