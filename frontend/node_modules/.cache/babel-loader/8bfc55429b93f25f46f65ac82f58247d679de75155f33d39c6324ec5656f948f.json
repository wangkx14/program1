{"ast":null,"code":"import _regeneratorRuntime from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref, reactive, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport dayjs from 'dayjs';\nimport { changePassword as apiChangePassword } from '@/api/auth';\n\n// 默认头像\nvar defaultAvatar = 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png';\nexport default {\n  name: 'User',\n  setup: function setup() {\n    var store = useStore();\n    var activeTab = ref('info');\n    var editInfoDialogVisible = ref(false);\n    var passwordLoading = ref(false);\n    var infoLoading = ref(false);\n    var avatarInput = ref(null);\n\n    // 用户信息\n    var userInfo = computed(function () {\n      return store.getters['user/userInfo'];\n    });\n\n    // 用户表单\n    var userForm = ref({\n      name: '',\n      email: '',\n      phone: ''\n    });\n\n    // 密码表单\n    var passwordForm = ref({\n      oldPassword: '',\n      newPassword: '',\n      confirmPassword: ''\n    });\n\n    // 表单引用\n    var userFormRef = ref(null);\n    var passwordFormRef = ref(null);\n\n    // 表单验证规则\n    var userRules = {\n      name: [{\n        required: true,\n        message: '请输入姓名',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 20,\n        message: '长度在 2 到 20 个字符',\n        trigger: 'blur'\n      }],\n      email: [{\n        required: true,\n        message: '请输入邮箱',\n        trigger: 'blur'\n      }, {\n        type: 'email',\n        message: '请输入正确的邮箱地址',\n        trigger: 'blur'\n      }],\n      phone: [{\n        pattern: /^1[3-9]\\d{9}$/,\n        message: '请输入正确的手机号码',\n        trigger: 'blur'\n      }]\n    };\n    var passwordRules = {\n      oldPassword: [{\n        required: true,\n        message: '请输入当前密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        message: '密码长度不能少于6个字符',\n        trigger: 'blur'\n      }],\n      newPassword: [{\n        required: true,\n        message: '请输入新密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        message: '密码长度不能少于6个字符',\n        trigger: 'blur'\n      }],\n      confirmPassword: [{\n        required: true,\n        message: '请再次输入新密码',\n        trigger: 'blur'\n      }, {\n        validator: function validator(rule, value, callback) {\n          if (value !== passwordForm.value.newPassword) {\n            callback(new Error('两次输入的密码不一致'));\n          } else {\n            callback();\n          }\n        },\n        trigger: 'blur'\n      }]\n    };\n\n    // 显示编辑信息对话框\n    var showEditInfoDialog = function showEditInfoDialog() {\n      userForm.value = {\n        name: userInfo.value.name,\n        email: userInfo.value.email,\n        phone: userInfo.value.phone || ''\n      };\n      editInfoDialogVisible.value = true;\n    };\n\n    // 更新用户信息\n    var updateUserInfo = function updateUserInfo() {\n      userFormRef.value.validate(/*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(valid) {\n          var updatedInfo;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                if (valid) {\n                  _context.next = 2;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 2:\n                infoLoading.value = true;\n                _context.prev = 3;\n                _context.next = 6;\n                return new Promise(function (resolve) {\n                  return setTimeout(resolve, 1000);\n                });\n              case 6:\n                // 更新用户信息\n                updatedInfo = _objectSpread(_objectSpread({}, userInfo.value), userForm.value); // 更新Vuex中的用户信息\n                store.commit('user/SET_USER_INFO', updatedInfo);\n                ElMessage.success('个人信息更新成功');\n                editInfoDialogVisible.value = false;\n                _context.next = 16;\n                break;\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](3);\n                console.error('更新个人信息失败:', _context.t0);\n                ElMessage.error('更新个人信息失败，请重试');\n              case 16:\n                _context.prev = 16;\n                infoLoading.value = false;\n                return _context.finish(16);\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, null, [[3, 12, 16, 19]]);\n        }));\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n\n    // 修改密码\n    var changePassword = function changePassword() {\n      passwordFormRef.value.validate(/*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(valid) {\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                if (valid) {\n                  _context2.next = 2;\n                  break;\n                }\n                return _context2.abrupt(\"return\");\n              case 2:\n                passwordLoading.value = true;\n                _context2.prev = 3;\n                _context2.next = 6;\n                return apiChangePassword({\n                  oldPassword: passwordForm.value.oldPassword,\n                  newPassword: passwordForm.value.newPassword\n                });\n              case 6:\n                ElMessage.success('密码修改成功，请重新登录');\n                resetPasswordForm();\n\n                // 退出登录\n                setTimeout(function () {\n                  store.dispatch('user/logout');\n                }, 1500);\n                _context2.next = 15;\n                break;\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](3);\n                console.error('修改密码失败:', _context2.t0);\n                ElMessage.error(_context2.t0.message || '修改密码失败，请重试');\n              case 15:\n                _context2.prev = 15;\n                passwordLoading.value = false;\n                return _context2.finish(15);\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, null, [[3, 11, 15, 18]]);\n        }));\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    };\n\n    // 重置密码表单\n    var resetPasswordForm = function resetPasswordForm() {\n      passwordForm.value = {\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      };\n      passwordFormRef.value.resetFields();\n    };\n\n    // 处理头像点击\n    var handleAvatarClick = function handleAvatarClick() {\n      avatarInput.value.click();\n    };\n\n    // 上传头像\n    var uploadAvatar = function uploadAvatar(e) {\n      var file = e.target.files[0];\n      if (!file) return;\n\n      // 检查文件类型\n      var isImage = /^image\\//.test(file.type);\n      if (!isImage) {\n        ElMessage.error('请上传图片文件');\n        return;\n      }\n\n      // 检查文件大小\n      var isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isLt2M) {\n        ElMessage.error('图片大小不能超过2MB');\n        return;\n      }\n\n      // 模拟上传\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = function () {\n        // 更新用户头像\n        var updatedInfo = _objectSpread(_objectSpread({}, userInfo.value), {}, {\n          avatar: reader.result\n        });\n\n        // 更新Vuex中的用户信息\n        store.commit('user/SET_USER_INFO', updatedInfo);\n        ElMessage.success('头像更新成功');\n      };\n    };\n\n    // 获取角色名称\n    var getRoleName = function getRoleName(role) {\n      var roles = {\n        admin: '管理员',\n        operator: '操作员',\n        viewer: '查看者'\n      };\n      return roles[role] || '未知';\n    };\n\n    // 格式化日期时间\n    var formatDateTime = function formatDateTime(dateTime) {\n      if (!dateTime) return '未登录';\n      return dayjs(dateTime).format('YYYY-MM-DD HH:mm:ss');\n    };\n    onMounted(function () {\n      // 如果用户信息不存在，获取用户信息\n      if (!userInfo.value || !userInfo.value.id) {\n        store.dispatch('user/getUserInfo');\n      }\n    });\n    return {\n      activeTab: activeTab,\n      userInfo: userInfo,\n      defaultAvatar: defaultAvatar,\n      editInfoDialogVisible: editInfoDialogVisible,\n      userForm: userForm,\n      userFormRef: userFormRef,\n      userRules: userRules,\n      passwordForm: passwordForm,\n      passwordFormRef: passwordFormRef,\n      passwordRules: passwordRules,\n      passwordLoading: passwordLoading,\n      infoLoading: infoLoading,\n      avatarInput: avatarInput,\n      showEditInfoDialog: showEditInfoDialog,\n      updateUserInfo: updateUserInfo,\n      changePassword: changePassword,\n      resetPasswordForm: resetPasswordForm,\n      handleAvatarClick: handleAvatarClick,\n      uploadAvatar: uploadAvatar,\n      getRoleName: getRoleName,\n      formatDateTime: formatDateTime\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","useStore","ElMessage","dayjs","changePassword","apiChangePassword","defaultAvatar","name","setup","store","activeTab","editInfoDialogVisible","passwordLoading","infoLoading","avatarInput","userInfo","getters","userForm","email","phone","passwordForm","oldPassword","newPassword","confirmPassword","userFormRef","passwordFormRef","userRules","required","message","trigger","min","max","type","pattern","passwordRules","validator","rule","value","callback","Error","showEditInfoDialog","updateUserInfo","validate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","valid","updatedInfo","wrap","_callee$","_context","prev","next","abrupt","Promise","resolve","setTimeout","_objectSpread","commit","success","t0","console","error","finish","stop","_x","apply","arguments","_ref2","_callee2","_callee2$","_context2","resetPasswordForm","dispatch","_x2","resetFields","handleAvatarClick","click","uploadAvatar","e","file","target","files","isImage","test","isLt2M","size","reader","FileReader","readAsDataURL","onload","avatar","result","getRoleName","role","roles","admin","operator","viewer","formatDateTime","dateTime","format","id"],"sources":["D:\\software_data\\Project\\Y0527\\CODE_BAK\\frontend\\src\\views\\User.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-center\">\r\n    <h1 class=\"page-title\">个人中心</h1>\r\n    \r\n    <el-card class=\"user-info-card\">\r\n      <el-tabs v-model=\"activeTab\">\r\n        <el-tab-pane label=\"基本信息\" name=\"info\">\r\n          <div class=\"user-profile\">\r\n            <div class=\"user-avatar\">\r\n              <el-avatar :size=\"100\" :src=\"userInfo.avatar || defaultAvatar\">\r\n                {{ userInfo.name ? userInfo.name.charAt(0).toUpperCase() : 'U' }}\r\n              </el-avatar>\r\n              <el-button class=\"upload-btn\" size=\"small\" @click=\"handleAvatarClick\">\r\n                更换头像\r\n              </el-button>\r\n              <input\r\n                ref=\"avatarInput\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                style=\"display: none\"\r\n                @change=\"uploadAvatar\"\r\n              />\r\n            </div>\r\n            \r\n            <div class=\"user-details\">\r\n              <el-descriptions :column=\"2\" border>\r\n                <el-descriptions-item label=\"用户名\">{{ userInfo.username }}</el-descriptions-item>\r\n                <el-descriptions-item label=\"姓名\">{{ userInfo.name }}</el-descriptions-item>\r\n                <el-descriptions-item label=\"邮箱\">{{ userInfo.email }}</el-descriptions-item>\r\n                <el-descriptions-item label=\"手机\">{{ userInfo.phone || '未设置' }}</el-descriptions-item>\r\n                <el-descriptions-item label=\"角色\">{{ getRoleName(userInfo.role) }}</el-descriptions-item>\r\n                <el-descriptions-item label=\"最后登录\">{{ formatDateTime(userInfo.lastLogin) }}</el-descriptions-item>\r\n              </el-descriptions>\r\n              \r\n              <div class=\"action-buttons\">\r\n                <el-button type=\"primary\" @click=\"showEditInfoDialog\">\r\n                  编辑个人信息\r\n                </el-button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-tab-pane>\r\n        \r\n        <el-tab-pane label=\"修改密码\" name=\"password\">\r\n          <div class=\"change-password\">\r\n            <el-form\r\n              ref=\"passwordForm\"\r\n              :model=\"passwordForm\"\r\n              :rules=\"passwordRules\"\r\n              label-width=\"100px\"\r\n            >\r\n              <el-form-item label=\"当前密码\" prop=\"oldPassword\">\r\n                <el-input\r\n                  v-model=\"passwordForm.oldPassword\"\r\n                  type=\"password\"\r\n                  show-password\r\n                  placeholder=\"请输入当前密码\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n                <el-input\r\n                  v-model=\"passwordForm.newPassword\"\r\n                  type=\"password\"\r\n                  show-password\r\n                  placeholder=\"请输入新密码\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n                <el-input\r\n                  v-model=\"passwordForm.confirmPassword\"\r\n                  type=\"password\"\r\n                  show-password\r\n                  placeholder=\"请再次输入新密码\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item>\r\n                <el-button type=\"primary\" :loading=\"passwordLoading\" @click=\"changePassword\">\r\n                  修改密码\r\n                </el-button>\r\n                <el-button @click=\"resetPasswordForm\">重置</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n          </div>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n    \r\n    <!-- 编辑个人信息对话框 -->\r\n    <el-dialog v-model=\"editInfoDialogVisible\" title=\"编辑个人信息\" width=\"500px\">\r\n      <el-form\r\n        ref=\"userForm\"\r\n        :model=\"userForm\"\r\n        :rules=\"userRules\"\r\n        label-width=\"80px\"\r\n      >\r\n        <el-form-item label=\"姓名\" prop=\"name\">\r\n          <el-input v-model=\"userForm.name\" placeholder=\"请输入姓名\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"userForm.email\" placeholder=\"请输入邮箱\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"手机\" prop=\"phone\">\r\n          <el-input v-model=\"userForm.phone\" placeholder=\"请输入手机号码\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"editInfoDialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" :loading=\"infoLoading\" @click=\"updateUserInfo\">\r\n            保存\r\n          </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { ElMessage } from 'element-plus';\r\nimport dayjs from 'dayjs';\r\nimport { changePassword as apiChangePassword } from '@/api/auth';\r\n\r\n// 默认头像\r\nconst defaultAvatar = 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png';\r\n\r\nexport default {\r\n  name: 'User',\r\n  setup() {\r\n    const store = useStore();\r\n    const activeTab = ref('info');\r\n    const editInfoDialogVisible = ref(false);\r\n    const passwordLoading = ref(false);\r\n    const infoLoading = ref(false);\r\n    const avatarInput = ref(null);\r\n    \r\n    // 用户信息\r\n    const userInfo = computed(() => store.getters['user/userInfo']);\r\n    \r\n    // 用户表单\r\n    const userForm = ref({\r\n      name: '',\r\n      email: '',\r\n      phone: ''\r\n    });\r\n    \r\n    // 密码表单\r\n    const passwordForm = ref({\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: ''\r\n    });\r\n    \r\n    // 表单引用\r\n    const userFormRef = ref(null);\r\n    const passwordFormRef = ref(null);\r\n    \r\n    // 表单验证规则\r\n    const userRules = {\r\n      name: [\r\n        { required: true, message: '请输入姓名', trigger: 'blur' },\r\n        { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\r\n      ],\r\n      email: [\r\n        { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n        { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\r\n      ],\r\n      phone: [\r\n        { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\r\n      ]\r\n    };\r\n    \r\n    const passwordRules = {\r\n      oldPassword: [\r\n        { required: true, message: '请输入当前密码', trigger: 'blur' },\r\n        { min: 6, message: '密码长度不能少于6个字符', trigger: 'blur' }\r\n      ],\r\n      newPassword: [\r\n        { required: true, message: '请输入新密码', trigger: 'blur' },\r\n        { min: 6, message: '密码长度不能少于6个字符', trigger: 'blur' }\r\n      ],\r\n      confirmPassword: [\r\n        { required: true, message: '请再次输入新密码', trigger: 'blur' },\r\n        {\r\n          validator: (rule, value, callback) => {\r\n            if (value !== passwordForm.value.newPassword) {\r\n              callback(new Error('两次输入的密码不一致'));\r\n            } else {\r\n              callback();\r\n            }\r\n          },\r\n          trigger: 'blur'\r\n        }\r\n      ]\r\n    };\r\n    \r\n    // 显示编辑信息对话框\r\n    const showEditInfoDialog = () => {\r\n      userForm.value = {\r\n        name: userInfo.value.name,\r\n        email: userInfo.value.email,\r\n        phone: userInfo.value.phone || ''\r\n      };\r\n      editInfoDialogVisible.value = true;\r\n    };\r\n    \r\n    // 更新用户信息\r\n    const updateUserInfo = () => {\r\n      userFormRef.value.validate(async (valid) => {\r\n        if (!valid) return;\r\n        \r\n        infoLoading.value = true;\r\n        \r\n        try {\r\n          // 模拟API调用\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n          \r\n          // 更新用户信息\r\n          const updatedInfo = {\r\n            ...userInfo.value,\r\n            ...userForm.value\r\n          };\r\n          \r\n          // 更新Vuex中的用户信息\r\n          store.commit('user/SET_USER_INFO', updatedInfo);\r\n          \r\n          ElMessage.success('个人信息更新成功');\r\n          editInfoDialogVisible.value = false;\r\n        } catch (error) {\r\n          console.error('更新个人信息失败:', error);\r\n          ElMessage.error('更新个人信息失败，请重试');\r\n        } finally {\r\n          infoLoading.value = false;\r\n        }\r\n      });\r\n    };\r\n    \r\n    // 修改密码\r\n    const changePassword = () => {\r\n      passwordFormRef.value.validate(async (valid) => {\r\n        if (!valid) return;\r\n        \r\n        passwordLoading.value = true;\r\n        \r\n        try {\r\n          // 调用修改密码API\r\n          await apiChangePassword({\r\n            oldPassword: passwordForm.value.oldPassword,\r\n            newPassword: passwordForm.value.newPassword\r\n          });\r\n          \r\n          ElMessage.success('密码修改成功，请重新登录');\r\n          resetPasswordForm();\r\n          \r\n          // 退出登录\r\n          setTimeout(() => {\r\n            store.dispatch('user/logout');\r\n          }, 1500);\r\n        } catch (error) {\r\n          console.error('修改密码失败:', error);\r\n          ElMessage.error(error.message || '修改密码失败，请重试');\r\n        } finally {\r\n          passwordLoading.value = false;\r\n        }\r\n      });\r\n    };\r\n    \r\n    // 重置密码表单\r\n    const resetPasswordForm = () => {\r\n      passwordForm.value = {\r\n        oldPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      };\r\n      passwordFormRef.value.resetFields();\r\n    };\r\n    \r\n    // 处理头像点击\r\n    const handleAvatarClick = () => {\r\n      avatarInput.value.click();\r\n    };\r\n    \r\n    // 上传头像\r\n    const uploadAvatar = (e) => {\r\n      const file = e.target.files[0];\r\n      if (!file) return;\r\n      \r\n      // 检查文件类型\r\n      const isImage = /^image\\//.test(file.type);\r\n      if (!isImage) {\r\n        ElMessage.error('请上传图片文件');\r\n        return;\r\n      }\r\n      \r\n      // 检查文件大小\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n      if (!isLt2M) {\r\n        ElMessage.error('图片大小不能超过2MB');\r\n        return;\r\n      }\r\n      \r\n      // 模拟上传\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        // 更新用户头像\r\n        const updatedInfo = {\r\n          ...userInfo.value,\r\n          avatar: reader.result\r\n        };\r\n        \r\n        // 更新Vuex中的用户信息\r\n        store.commit('user/SET_USER_INFO', updatedInfo);\r\n        ElMessage.success('头像更新成功');\r\n      };\r\n    };\r\n    \r\n    // 获取角色名称\r\n    const getRoleName = (role) => {\r\n      const roles = {\r\n        admin: '管理员',\r\n        operator: '操作员',\r\n        viewer: '查看者'\r\n      };\r\n      return roles[role] || '未知';\r\n    };\r\n    \r\n    // 格式化日期时间\r\n    const formatDateTime = (dateTime) => {\r\n      if (!dateTime) return '未登录';\r\n      return dayjs(dateTime).format('YYYY-MM-DD HH:mm:ss');\r\n    };\r\n    \r\n    onMounted(() => {\r\n      // 如果用户信息不存在，获取用户信息\r\n      if (!userInfo.value || !userInfo.value.id) {\r\n        store.dispatch('user/getUserInfo');\r\n      }\r\n    });\r\n    \r\n    return {\r\n      activeTab,\r\n      userInfo,\r\n      defaultAvatar,\r\n      editInfoDialogVisible,\r\n      userForm,\r\n      userFormRef,\r\n      userRules,\r\n      passwordForm,\r\n      passwordFormRef,\r\n      passwordRules,\r\n      passwordLoading,\r\n      infoLoading,\r\n      avatarInput,\r\n      showEditInfoDialog,\r\n      updateUserInfo,\r\n      changePassword,\r\n      resetPasswordForm,\r\n      handleAvatarClick,\r\n      uploadAvatar,\r\n      getRoleName,\r\n      formatDateTime\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-center {\r\n  padding: 20px;\r\n}\r\n\r\n.page-title {\r\n  margin-bottom: 20px;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n.user-info-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.user-profile {\r\n  display: flex;\r\n  gap: 30px;\r\n  margin: 20px 0;\r\n}\r\n\r\n.user-avatar {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.upload-btn {\r\n  width: 100px;\r\n}\r\n\r\n.user-details {\r\n  flex: 1;\r\n}\r\n\r\n.action-buttons {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.change-password {\r\n  max-width: 500px;\r\n  margin: 20px auto;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}