{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"charging-efficiency-trend\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card-header\"\n};\nvar _hoisted_3 = {\n  \"class\": \"header-actions\"\n};\nvar _hoisted_4 = {\n  \"class\": \"chart-container\",\n  ref: \"chartContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"chart-card\",\n    shadow: \"hover\"\n  }, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"充电效率趋势\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_select, {\n        modelValue: $data.timeRange,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.timeRange = $event;\n        }),\n        placeholder: \"选择时间范围\",\n        size: \"small\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_option, {\n            label: \"最近7天\",\n            value: \"7\"\n          }), _createVNode(_component_el_option, {\n            label: \"最近30天\",\n            value: \"30\"\n          }), _createVNode(_component_el_option, {\n            label: \"最近90天\",\n            value: \"90\"\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */)];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["ref","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","shadow","header","_withCtx","_createElementVNode","_hoisted_2","_hoisted_3","_component_el_select","modelValue","$data","timeRange","_cache","$event","placeholder","size","_component_el_option","label","value","_","_hoisted_4"],"sources":["D:\\software_data\\Project\\Y0527\\CODE_BAK\\frontend\\src\\components\\dashboard\\ChargingEfficiencyTrend.vue"],"sourcesContent":["<template>\r\n  <div class=\"charging-efficiency-trend\">\r\n    <el-card class=\"chart-card\" shadow=\"hover\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <h3>充电效率趋势</h3>\r\n          <div class=\"header-actions\">\r\n            <el-select v-model=\"timeRange\" placeholder=\"选择时间范围\" size=\"small\">\r\n              <el-option label=\"最近7天\" value=\"7\"></el-option>\r\n              <el-option label=\"最近30天\" value=\"30\"></el-option>\r\n              <el-option label=\"最近90天\" value=\"90\"></el-option>\r\n            </el-select>\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <div class=\"chart-container\" ref=\"chartContainer\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport dashboardApi from '@/api/dashboard';\r\n\r\nexport default {\r\n  name: 'ChargingEfficiencyTrend',\r\n  data() {\r\n    return {\r\n      chart: null,\r\n      timeRange: '7', // 默认显示最近7天\r\n      loading: false,\r\n      chartData: {\r\n        timeline: [],\r\n        stations: []\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initChart();\r\n    this.fetchChargingEfficiencyData();\r\n    \r\n    // 监听窗口大小变化，调整图表大小\r\n    window.addEventListener('resize', this.resizeChart);\r\n  },\r\n  beforeUnmount() {\r\n    // 移除事件监听\r\n    window.removeEventListener('resize', this.resizeChart);\r\n    \r\n    // 销毁图表实例\r\n    if (this.chart) {\r\n      this.chart.dispose();\r\n      this.chart = null;\r\n    }\r\n  },\r\n  watch: {\r\n    timeRange() {\r\n      this.fetchChargingEfficiencyData();\r\n    }\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      // 初始化图表\r\n      const chartDom = this.$refs.chartContainer;\r\n      if (!chartDom) return;\r\n      \r\n      this.chart = echarts.init(chartDom);\r\n      \r\n      // 设置加载动画\r\n      this.chart.showLoading({\r\n        text: '数据加载中...',\r\n        color: '#409EFF',\r\n        textColor: '#000',\r\n        maskColor: 'rgba(255, 255, 255, 0.8)'\r\n      });\r\n    },\r\n    \r\n    async fetchChargingEfficiencyData() {\r\n      if (!this.chart) return;\r\n      \r\n      this.loading = true;\r\n      this.chart.showLoading();\r\n      \r\n      try {\r\n        // 调用API获取数据\r\n        const response = await dashboardApi.getChargingEfficiencyTrend({\r\n          days: parseInt(this.timeRange)\r\n        });\r\n        \r\n        this.chartData = response.data;\r\n        this.renderChart();\r\n      } catch (error) {\r\n        console.error('获取充电效率趋势数据失败:', error);\r\n        this.$message.error('获取充电效率趋势数据失败');\r\n      } finally {\r\n        this.loading = false;\r\n        this.chart.hideLoading();\r\n      }\r\n    },\r\n    \r\n    renderChart() {\r\n      if (!this.chart || !this.chartData.timeline || !this.chartData.stations) return;\r\n      \r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#6a7985'\r\n            }\r\n          }\r\n        },\r\n        legend: {\r\n          data: this.chartData.stations.map(station => station.name),\r\n          top: '5%',\r\n          type: 'scroll',\r\n          orient: 'horizontal',\r\n          pageButtonPosition: 'end'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          top: '15%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: this.chartData.timeline,\r\n          axisLabel: {\r\n            formatter: function(value) {\r\n              // 格式化日期显示\r\n              const date = new Date(value);\r\n              return `${date.getMonth() + 1}/${date.getDate()}`;\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          name: '充电效率 (%)',\r\n          min: 70,\r\n          max: 100,\r\n          axisLabel: {\r\n            formatter: '{value}%'\r\n          }\r\n        },\r\n        series: this.chartData.stations.map(station => ({\r\n          name: station.name,\r\n          type: 'line',\r\n          smooth: true,\r\n          symbol: 'circle',\r\n          symbolSize: 6,\r\n          sampling: 'average',\r\n          data: station.efficiencyData,\r\n          markPoint: {\r\n            data: [\r\n              { type: 'max', name: '最大值' },\r\n              { type: 'min', name: '最小值' }\r\n            ]\r\n          }\r\n        }))\r\n      };\r\n      \r\n      this.chart.setOption(option);\r\n    },\r\n    \r\n    resizeChart() {\r\n      if (this.chart) {\r\n        this.chart.resize();\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.charging-efficiency-trend {\r\n  width: 100%;\r\n}\r\n\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.header-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.chart-container {\r\n  height: 350px;\r\n  width: 100%;\r\n}\r\n</style> "],"mappings":";;EACO,SAAM;AAA2B;;EAG3B,SAAM;AAAa;;EAEjB,SAAM;AAAgB;;EAS1B,SAAM,iBAAiB;EAACA,GAAG,EAAC;;;;;;uBAdrCC,mBAAA,CAgBM,OAhBNC,UAgBM,GAfJC,YAAA,CAcUC,kBAAA;IAdD,SAAM,YAAY;IAACC,MAAM,EAAC;;IACtBC,MAAM,EAAAC,QAAA,CACf;MAAA,OASM,CATNC,mBAAA,CASM,OATNC,UASM,G,0BARJD,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAMM,OANNE,UAMM,GALJP,YAAA,CAIYQ,oBAAA;QAXxBC,UAAA,EAOgCC,KAAA,CAAAC,SAAS;QAPzC,uBAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;UAAA,OAOgCH,KAAA,CAAAC,SAAS,GAAAE,MAAA;QAAA;QAAEC,WAAW,EAAC,QAAQ;QAACC,IAAI,EAAC;;QAPrE,WAAAX,QAAA,CAQc;UAAA,OAA8C,CAA9CJ,YAAA,CAA8CgB,oBAAA;YAAnCC,KAAK,EAAC,MAAM;YAACC,KAAK,EAAC;cAC9BlB,YAAA,CAAgDgB,oBAAA;YAArCC,KAAK,EAAC,OAAO;YAACC,KAAK,EAAC;cAC/BlB,YAAA,CAAgDgB,oBAAA;YAArCC,KAAK,EAAC,OAAO;YAACC,KAAK,EAAC;;;QAV7CC,CAAA;;;IAAA,WAAAf,QAAA,CAeM;MAAA,OAAwD,CAAxDC,mBAAA,CAAwD,OAAxDe,UAAwD,8B;;IAf9DD,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}