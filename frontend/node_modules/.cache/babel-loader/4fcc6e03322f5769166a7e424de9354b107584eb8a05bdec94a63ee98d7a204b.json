{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/jiaronghao/Desktop/Documents/\\u672C\\u79D1\\u8BBA\\u6587\\u7F16\\u5199/5\\u3001\\u8D27\\u4ED3\\u673A\\u5668\\u4EBA\\u6FC0\\u5149\\u5145\\u7535\\u548C\\u80FD\\u6548\\u7BA1\\u7406\\u4E91\\u5E73\\u53F0\\u7684\\u8BBE\\u8BA1\\u4E0E\\u5B9E\\u73B0/Y0527-final/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _typeof from \"C:/Users/jiaronghao/Desktop/Documents/\\u672C\\u79D1\\u8BBA\\u6587\\u7F16\\u5199/5\\u3001\\u8D27\\u4ED3\\u673A\\u5668\\u4EBA\\u6FC0\\u5149\\u5145\\u7535\\u548C\\u80FD\\u6548\\u7BA1\\u7406\\u4E91\\u5E73\\u53F0\\u7684\\u8BBE\\u8BA1\\u4E0E\\u5B9E\\u73B0/Y0527-final/frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _asyncToGenerator from \"C:/Users/jiaronghao/Desktop/Documents/\\u672C\\u79D1\\u8BBA\\u6587\\u7F16\\u5199/5\\u3001\\u8D27\\u4ED3\\u673A\\u5668\\u4EBA\\u6FC0\\u5149\\u5145\\u7535\\u548C\\u80FD\\u6548\\u7BA1\\u7406\\u4E91\\u5E73\\u53F0\\u7684\\u8BBE\\u8BA1\\u4E0E\\u5B9E\\u73B0/Y0527-final/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { robotApi, stationApi } from '@/api';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'Robots',\n  data: function data() {\n    return {\n      robots: [],\n      stations: [],\n      loading: false,\n      error: null,\n      // 分页相关\n      currentPage: 1,\n      pageSize: 10,\n      // 分配充电桩相关\n      assignDialogVisible: false,\n      currentRobot: null,\n      selectedStationId: null,\n      loadingStations: false,\n      assigningStation: false,\n      // 低电量检查相关\n      checkingBattery: false,\n      chargeResults: []\n    };\n  },\n  computed: {\n    totalItems: function totalItems() {\n      return this.robots.length;\n    },\n    paginatedRobots: function paginatedRobots() {\n      var startIndex = (this.currentPage - 1) * this.pageSize;\n      var endIndex = startIndex + this.pageSize;\n      return this.robots.slice(startIndex, endIndex);\n    },\n    availableStations: function availableStations() {\n      return this.stations.filter(function (station) {\n        return station.status === 'idle';\n      });\n    }\n  },\n  created: function created() {\n    var _this = this;\n    console.log('Robots组件已创建，准备获取数据');\n\n    // 添加这个延迟调用以避免可能的ResizeObserver问题\n    setTimeout(function () {\n      _this.fetchRobots();\n      _this.fetchStations();\n    }, 0);\n  },\n  methods: {\n    fetchRobots: function fetchRobots() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, validRobots;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _this2.loading = true;\n              _this2.error = null;\n              console.log('开始获取机器人数据');\n              _context.prev = 4;\n              _context.next = 7;\n              return robotApi.getAll();\n            case 7:\n              response = _context.sent;\n              // 打印原始响应\n              console.log('获取到机器人数据(原始):', response);\n              console.log('获取到机器人数据:', response.data);\n              console.log('机器人数据类型:', _typeof(response.data), Array.isArray(response.data));\n\n              // 确保数据是数组\n              if (Array.isArray(response.data)) {\n                // 检查每个机器人对象的字段\n                validRobots = response.data.filter(function (robot) {\n                  var isValid = robot && _typeof(robot) === 'object' && 'id' in robot && 'name' in robot && 'battery_level' in robot && 'status' in robot;\n                  if (!isValid) {\n                    console.warn('过滤掉无效的机器人数据:', robot);\n                  }\n                  return isValid;\n                });\n                console.log('有效的机器人数据:', validRobots);\n                _this2.robots = validRobots;\n                // 重置为第一页\n                _this2.currentPage = 1;\n                console.log('成功设置机器人数据，数量:', _this2.robots.length);\n              } else {\n                console.error('API返回的机器人数据不是数组:', response.data);\n                _this2.robots = []; // 设置为空数组\n                _this2.error = '机器人数据格式错误，请联系管理员';\n                ElMessage.error('机器人数据格式错误');\n              }\n              _context.next = 20;\n              break;\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](4);\n              console.error('API调用出错:', _context.t0);\n              _this2.robots = []; // 确保错误时也设置为空数组\n              _this2.error = \"API\\u8C03\\u7528\\u51FA\\u9519: \".concat(_context.t0.message || '未知错误');\n              ElMessage.error('获取机器人数据失败');\n            case 20:\n              _context.next = 28;\n              break;\n            case 22:\n              _context.prev = 22;\n              _context.t1 = _context[\"catch\"](0);\n              console.error('获取机器人列表失败:', _context.t1);\n              _this2.robots = []; // 确保错误时也设置为空数组\n              _this2.error = \"\\u83B7\\u53D6\\u6570\\u636E\\u5931\\u8D25: \".concat(_context.t1.message || '未知错误');\n              ElMessage.error('获取机器人列表失败');\n            case 28:\n              _context.prev = 28;\n              _this2.loading = false;\n              return _context.finish(28);\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 22, 28, 31], [4, 14]]);\n      }))();\n    },\n    fetchStations: function fetchStations() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _this3.loadingStations = true;\n              console.log('开始获取充电站数据');\n              _context2.next = 5;\n              return stationApi.getAll();\n            case 5:\n              response = _context2.sent;\n              console.log('获取到充电站数据:', response.data);\n              if (Array.isArray(response.data)) {\n                _this3.stations = response.data;\n                console.log('成功设置充电站数据，数量:', _this3.stations.length);\n              } else {\n                console.error('API返回的充电站数据不是数组');\n                _this3.stations = [];\n              }\n              _context2.next = 15;\n              break;\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('获取充电站列表失败:', _context2.t0);\n              _this3.stations = [];\n              ElMessage.error('获取充电站数据失败');\n            case 15:\n              _context2.prev = 15;\n              _this3.loadingStations = false;\n              return _context2.finish(15);\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 10, 15, 18]]);\n      }))();\n    },\n    // 检查低电量机器人并自动充电\n    checkLowBattery: function checkLowBattery() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _this4.checkingBattery = true;\n              _this4.chargeResults = [];\n              console.log('开始检查低电量机器人');\n              _context3.next = 6;\n              return robotApi.checkLowBattery();\n            case 6:\n              response = _context3.sent;\n              console.log('检查结果:', response.data);\n              if (Array.isArray(response.data) && response.data.length > 0) {\n                _this4.chargeResults = response.data;\n                ElMessage.success(\"\\u68C0\\u6D4B\\u5230 \".concat(response.data.length, \" \\u4E2A\\u9700\\u8981\\u5904\\u7406\\u7684\\u673A\\u5668\\u4EBA\"));\n              } else {\n                ElMessage.info('没有需要充电的机器人');\n              }\n\n              // 刷新机器人数据\n              _context3.next = 11;\n              return _this4.fetchRobots();\n            case 11:\n              _context3.next = 17;\n              break;\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('检查低电量机器人失败:', _context3.t0);\n              ElMessage.error('检查低电量机器人失败');\n            case 17:\n              _context3.prev = 17;\n              _this4.checkingBattery = false;\n              return _context3.finish(17);\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 13, 17, 20]]);\n      }))();\n    },\n    // 显示分配充电桩对话框\n    showAssignDialog: function showAssignDialog(robot) {\n      this.currentRobot = robot;\n      this.selectedStationId = robot.station_id || null;\n      this.assignDialogVisible = true;\n\n      // 如果充电站数据为空，重新获取\n      if (this.stations.length === 0) {\n        this.fetchStations();\n      }\n    },\n    // 分配充电桩\n    assignStation: function assignStation() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response, errorMsg;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(!_this5.currentRobot || !_this5.selectedStationId)) {\n                _context4.next = 3;\n                break;\n              }\n              ElMessage.warning('请选择充电桩');\n              return _context4.abrupt(\"return\");\n            case 3:\n              _context4.prev = 3;\n              _this5.assigningStation = true;\n              console.log(\"\\u5206\\u914D\\u673A\\u5668\\u4EBA \".concat(_this5.currentRobot.id, \" \\u5230\\u5145\\u7535\\u6869 \").concat(_this5.selectedStationId));\n              _context4.next = 8;\n              return robotApi.assignToStation(_this5.currentRobot.id, _this5.selectedStationId);\n            case 8:\n              response = _context4.sent;\n              if (response && response.data && response.data.message) {\n                ElMessage.success(response.data.message || '成功分配充电桩');\n              } else {\n                ElMessage.success('成功分配充电桩');\n              }\n              _this5.assignDialogVisible = false;\n\n              // 刷新机器人数据\n              _context4.next = 13;\n              return _this5.fetchRobots();\n            case 13:\n              _context4.next = 15;\n              return _this5.fetchStations();\n            case 15:\n              _context4.next = 23;\n              break;\n            case 17:\n              _context4.prev = 17;\n              _context4.t0 = _context4[\"catch\"](3);\n              console.error('分配充电桩失败:', _context4.t0);\n              // 提取API返回的具体错误信息\n              errorMsg = '未知错误';\n              if (_context4.t0.response && _context4.t0.response.data) {\n                errorMsg = _context4.t0.response.data.error || _context4.t0.response.data.message || _context4.t0.message || '分配失败';\n              } else if (_context4.t0.message) {\n                errorMsg = _context4.t0.message;\n              }\n              ElMessage.error('分配充电桩失败: ' + errorMsg);\n            case 23:\n              _context4.prev = 23;\n              _this5.assigningStation = false;\n              return _context4.finish(23);\n            case 26:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[3, 17, 23, 26]]);\n      }))();\n    },\n    // 获取充电桩名称\n    getStationName: function getStationName(stationId) {\n      var station = this.stations.find(function (s) {\n        return s.id === stationId;\n      });\n      return station ? station.name : \"\\u5145\\u7535\\u6869 \".concat(stationId);\n    },\n    // 分页相关方法\n    handleCurrentChange: function handleCurrentChange(page) {\n      this.currentPage = page;\n      console.log(\"\\u5F53\\u524D\\u9875: \".concat(this.currentPage));\n    },\n    // 获取电池状态\n    getBatteryStatus: function getBatteryStatus(level) {\n      if (level < 20) return 'exception';\n      if (level < 50) return 'warning';\n      return 'success';\n    },\n    getStatusType: function getStatusType(status) {\n      var types = {\n        'idle': 'info',\n        'working': 'success',\n        'charging': 'primary',\n        'error': 'danger'\n      };\n      return types[status] || 'info';\n    },\n    getStatusText: function getStatusText(status) {\n      var texts = {\n        'idle': '空闲',\n        'working': '工作中',\n        'charging': '充电中',\n        'error': '故障'\n      };\n      return texts[status] || status;\n    },\n    // 解除充电桩\n    releaseStation: function releaseStation(robot) {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response, errorMsg;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _this6.assigningStation = true;\n              console.log(\"\\u89E3\\u9664\\u673A\\u5668\\u4EBA \".concat(robot.id, \" \\u7684\\u5145\\u7535\\u6869\"));\n              _context5.next = 5;\n              return robotApi.releaseFromStation(robot.id);\n            case 5:\n              response = _context5.sent;\n              if (response && response.data && response.data.message) {\n                ElMessage.success(response.data.message || '成功解除充电桩');\n              } else {\n                ElMessage.success('成功解除充电桩');\n              }\n\n              // 刷新机器人数据\n              _context5.next = 9;\n              return _this6.fetchRobots();\n            case 9:\n              _context5.next = 11;\n              return _this6.fetchStations();\n            case 11:\n              _context5.next = 19;\n              break;\n            case 13:\n              _context5.prev = 13;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('解除充电桩失败:', _context5.t0);\n              // 提取API返回的具体错误信息\n              errorMsg = '未知错误';\n              if (_context5.t0.response && _context5.t0.response.data) {\n                errorMsg = _context5.t0.response.data.error || _context5.t0.response.data.message || _context5.t0.message || '解除失败';\n              } else if (_context5.t0.message) {\n                errorMsg = _context5.t0.message;\n              }\n              ElMessage.error('解除充电桩失败: ' + errorMsg);\n            case 19:\n              _context5.prev = 19;\n              _this6.assigningStation = false;\n              return _context5.finish(19);\n            case 22:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[0, 13, 19, 22]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["robotApi","stationApi","ElMessage","name","data","robots","stations","loading","error","currentPage","pageSize","assignDialogVisible","currentRobot","selectedStationId","loadingStations","assigningStation","checkingBattery","chargeResults","computed","totalItems","length","paginatedRobots","startIndex","endIndex","slice","availableStations","filter","station","status","created","_this","console","log","setTimeout","fetchRobots","fetchStations","methods","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","validRobots","wrap","_callee$","_context","prev","next","getAll","sent","_typeof","Array","isArray","robot","isValid","warn","t0","concat","message","t1","finish","stop","_this3","_callee2","_callee2$","_context2","checkLowBattery","_this4","_callee3","_callee3$","_context3","success","info","showAssignDialog","station_id","assignStation","_this5","_callee4","errorMsg","_callee4$","_context4","warning","abrupt","id","assignToStation","getStationName","stationId","find","s","handleCurrentChange","page","getBatteryStatus","level","getStatusType","types","getStatusText","texts","releaseStation","_this6","_callee5","_callee5$","_context5","releaseFromStation"],"sources":["C:\\Users\\jiaronghao\\Desktop\\Documents\\本科论文编写\\5、货仓机器人激光充电和能效管理云平台的设计与实现\\Y0527-final\\frontend\\src\\views\\Robots.vue"],"sourcesContent":["<template>\n  <div class=\"robots-container\">\n    <h2>机器人管理</h2>\n    <el-card class=\"box-card\">\n      <div class=\"toolbar\">\n        <!-- <el-button type=\"primary\" @click=\"checkLowBattery\" :loading=\"checkingBattery\">\n          检查低电量机器人并自动充电\n        </el-button> -->\n        <el-button type=\"success\" @click=\"fetchRobots\" :loading=\"loading\">\n          刷新数据\n        </el-button>\n      </div>\n      \n      <div v-if=\"error\" class=\"error-message\">\n        <el-alert\n          title=\"加载数据出错\"\n          type=\"error\"\n          :description=\"error\"\n          show-icon\n        />\n      </div>\n      \n      <div v-if=\"chargeResults && chargeResults.length > 0\" class=\"charge-results\">\n        <el-alert\n          title=\"自动充电结果\"\n          type=\"success\"\n          :closable=\"true\"\n          show-icon\n        >\n          <div v-for=\"(result, index) in chargeResults\" :key=\"index\">\n            {{ result.message }}\n          </div>\n        </el-alert>\n      </div>\n      \n      <el-table \n        v-if=\"robots && robots.length > 0\" \n        :data=\"paginatedRobots\" \n        style=\"width: 100%\" \n        v-loading=\"loading\">\n        <el-table-column prop=\"id\" label=\"机器人ID\" width=\"100\" />\n        <el-table-column prop=\"name\" label=\"名称\" width=\"150\" />\n        <el-table-column prop=\"battery_level\" label=\"电量\" width=\"180\">\n          <template #default=\"scope\">\n            <el-progress \n              :percentage=\"scope.row.battery_level\" \n              :status=\"getBatteryStatus(scope.row.battery_level)\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\" width=\"120\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.status)\">\n              {{ getStatusText(scope.row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"station_id\" label=\"关联充电桩\" width=\"150\">\n          <template #default=\"scope\">\n            <span v-if=\"scope.row.station_id\">\n              {{ getStationName(scope.row.station_id) }}\n            </span>\n            <span v-else class=\"no-station\">未分配</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"last_charging\" label=\"上次充电时间\" />\n        <el-table-column label=\"操作\" width=\"240\">\n          <template #default=\"scope\">\n            <el-button \n              size=\"small\" \n              type=\"primary\" \n              @click=\"showAssignDialog(scope.row)\"\n              :disabled=\"scope.row.status === 'charging'\"\n              v-if=\"!scope.row.station_id\"\n            >\n              分配充电桩\n            </el-button>\n            <el-button \n              size=\"small\" \n              type=\"danger\" \n              @click=\"releaseStation(scope.row)\"\n              v-if=\"scope.row.station_id\"\n            >\n              解除充电桩\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div v-else-if=\"!loading\" class=\"no-data\">\n        <el-empty description=\"暂无数据\" />\n      </div>\n      \n      <!-- 分页控件 -->\n      <div class=\"pagination-container\" v-if=\"robots && robots.length > 0\">\n        <el-pagination\n          v-model:current-page=\"currentPage\"\n          :page-size=\"pageSize\"\n          :total=\"totalItems\"\n          layout=\"total, prev, pager, next, jumper\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n    \n    <!-- 分配充电桩对话框 -->\n    <el-dialog \n      title=\"分配充电桩\" \n      v-model=\"assignDialogVisible\"\n      width=\"500px\"\n    >\n      <div v-if=\"loadingStations\" class=\"dialog-loading\">\n        <el-skeleton :rows=\"3\" animated />\n      </div>\n      <div v-else>\n        <p>为机器人 <strong>{{ currentRobot?.name }}</strong> 选择一个充电桩:</p>\n        \n        <div v-if=\"availableStations.length === 0\" class=\"no-stations-message\">\n          <el-alert\n            title=\"没有可用的充电桩\"\n            type=\"warning\"\n            description=\"所有充电桩都在使用中或处于维护状态\"\n            show-icon\n          />\n        </div>\n        \n        <el-form v-else>\n          <el-form-item>\n            <el-select v-model=\"selectedStationId\" placeholder=\"请选择充电桩\" style=\"width: 100%\">\n              <el-option\n                v-for=\"station in availableStations\"\n                :key=\"station.id\"\n                :label=\"`${station.name} (${station.location})`\"\n                :value=\"station.id\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </div>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"assignDialogVisible = false\">取消</el-button>\n          <el-button \n            type=\"primary\" \n            @click=\"assignStation\" \n            :disabled=\"!selectedStationId || assigningStation\"\n            :loading=\"assigningStation\"\n          >\n            确定\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { robotApi, stationApi } from '@/api'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'Robots',\n  data() {\n    return {\n      robots: [],\n      stations: [],\n      loading: false,\n      error: null,\n      // 分页相关\n      currentPage: 1,\n      pageSize: 10,\n      // 分配充电桩相关\n      assignDialogVisible: false,\n      currentRobot: null,\n      selectedStationId: null,\n      loadingStations: false,\n      assigningStation: false,\n      // 低电量检查相关\n      checkingBattery: false,\n      chargeResults: []\n    }\n  },\n  computed: {\n    totalItems() {\n      return this.robots.length\n    },\n    paginatedRobots() {\n      const startIndex = (this.currentPage - 1) * this.pageSize\n      const endIndex = startIndex + this.pageSize\n      return this.robots.slice(startIndex, endIndex)\n    },\n    availableStations() {\n      return this.stations.filter(station => station.status === 'idle')\n    }\n  },\n  created() {\n    console.log('Robots组件已创建，准备获取数据')\n    \n    // 添加这个延迟调用以避免可能的ResizeObserver问题\n    setTimeout(() => {\n      this.fetchRobots()\n      this.fetchStations()\n    }, 0)\n  },\n  methods: {\n    async fetchRobots() {\n      try {\n        this.loading = true\n        this.error = null\n        console.log('开始获取机器人数据')\n        \n        try {\n          const response = await robotApi.getAll()\n          // 打印原始响应\n          console.log('获取到机器人数据(原始):', response)\n          console.log('获取到机器人数据:', response.data)\n          console.log('机器人数据类型:', typeof response.data, Array.isArray(response.data))\n          \n          // 确保数据是数组\n          if (Array.isArray(response.data)) {\n            // 检查每个机器人对象的字段\n            const validRobots = response.data.filter(robot => {\n              const isValid = robot && \n                             typeof robot === 'object' && \n                             'id' in robot && \n                             'name' in robot && \n                             'battery_level' in robot && \n                             'status' in robot;\n              if (!isValid) {\n                console.warn('过滤掉无效的机器人数据:', robot);\n              }\n              return isValid;\n            });\n            \n            console.log('有效的机器人数据:', validRobots);\n            this.robots = validRobots;\n            // 重置为第一页\n            this.currentPage = 1;\n            console.log('成功设置机器人数据，数量:', this.robots.length)\n          } else {\n            console.error('API返回的机器人数据不是数组:', response.data)\n            this.robots = [] // 设置为空数组\n            this.error = '机器人数据格式错误，请联系管理员'\n            ElMessage.error('机器人数据格式错误')\n          }\n        } catch (apiError) {\n          console.error('API调用出错:', apiError)\n          this.robots = [] // 确保错误时也设置为空数组\n          this.error = `API调用出错: ${apiError.message || '未知错误'}`\n          ElMessage.error('获取机器人数据失败')\n        }\n      } catch (error) {\n        console.error('获取机器人列表失败:', error)\n        this.robots = [] // 确保错误时也设置为空数组\n        this.error = `获取数据失败: ${error.message || '未知错误'}`\n        ElMessage.error('获取机器人列表失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    async fetchStations() {\n      try {\n        this.loadingStations = true\n        console.log('开始获取充电站数据')\n        \n        const response = await stationApi.getAll()\n        console.log('获取到充电站数据:', response.data)\n        \n        if (Array.isArray(response.data)) {\n          this.stations = response.data\n          console.log('成功设置充电站数据，数量:', this.stations.length)\n        } else {\n          console.error('API返回的充电站数据不是数组')\n          this.stations = []\n        }\n      } catch (error) {\n        console.error('获取充电站列表失败:', error)\n        this.stations = []\n        ElMessage.error('获取充电站数据失败')\n      } finally {\n        this.loadingStations = false\n      }\n    },\n    \n    // 检查低电量机器人并自动充电\n    async checkLowBattery() {\n      try {\n        this.checkingBattery = true\n        this.chargeResults = []\n        \n        console.log('开始检查低电量机器人')\n        const response = await robotApi.checkLowBattery()\n        console.log('检查结果:', response.data)\n        \n        if (Array.isArray(response.data) && response.data.length > 0) {\n          this.chargeResults = response.data\n          ElMessage.success(`检测到 ${response.data.length} 个需要处理的机器人`)\n        } else {\n          ElMessage.info('没有需要充电的机器人')\n        }\n        \n        // 刷新机器人数据\n        await this.fetchRobots()\n      } catch (error) {\n        console.error('检查低电量机器人失败:', error)\n        ElMessage.error('检查低电量机器人失败')\n      } finally {\n        this.checkingBattery = false\n      }\n    },\n    \n    // 显示分配充电桩对话框\n    showAssignDialog(robot) {\n      this.currentRobot = robot\n      this.selectedStationId = robot.station_id || null\n      this.assignDialogVisible = true\n      \n      // 如果充电站数据为空，重新获取\n      if (this.stations.length === 0) {\n        this.fetchStations()\n      }\n    },\n    \n    // 分配充电桩\n    async assignStation() {\n      if (!this.currentRobot || !this.selectedStationId) {\n        ElMessage.warning('请选择充电桩')\n        return\n      }\n      \n      try {\n        this.assigningStation = true\n        console.log(`分配机器人 ${this.currentRobot.id} 到充电桩 ${this.selectedStationId}`)\n        \n        const response = await robotApi.assignToStation(this.currentRobot.id, this.selectedStationId)\n        \n        if (response && response.data && response.data.message) {\n          ElMessage.success(response.data.message || '成功分配充电桩')\n        } else {\n          ElMessage.success('成功分配充电桩')\n        }\n        \n        this.assignDialogVisible = false\n        \n        // 刷新机器人数据\n        await this.fetchRobots()\n        // 刷新充电站数据\n        await this.fetchStations()\n      } catch (error) {\n        console.error('分配充电桩失败:', error)\n        // 提取API返回的具体错误信息\n        let errorMsg = '未知错误'\n        if (error.response && error.response.data) {\n          errorMsg = error.response.data.error || error.response.data.message || error.message || '分配失败'\n        } else if (error.message) {\n          errorMsg = error.message\n        }\n        ElMessage.error('分配充电桩失败: ' + errorMsg)\n      } finally {\n        this.assigningStation = false\n      }\n    },\n    \n    // 获取充电桩名称\n    getStationName(stationId) {\n      const station = this.stations.find(s => s.id === stationId)\n      return station ? station.name : `充电桩 ${stationId}`\n    },\n    \n    // 分页相关方法\n    handleCurrentChange(page) {\n      this.currentPage = page\n      console.log(`当前页: ${this.currentPage}`)\n    },\n    \n    // 获取电池状态\n    getBatteryStatus(level) {\n      if (level < 20) return 'exception'\n      if (level < 50) return 'warning'\n      return 'success'\n    },\n    \n    getStatusType(status) {\n      const types = {\n        'idle': 'info',\n        'working': 'success',\n        'charging': 'primary',\n        'error': 'danger'\n      }\n      return types[status] || 'info'\n    },\n    \n    getStatusText(status) {\n      const texts = {\n        'idle': '空闲',\n        'working': '工作中',\n        'charging': '充电中',\n        'error': '故障'\n      }\n      return texts[status] || status\n    },\n    \n    // 解除充电桩\n    async releaseStation(robot) {\n      try {\n        this.assigningStation = true\n        console.log(`解除机器人 ${robot.id} 的充电桩`)\n        \n        const response = await robotApi.releaseFromStation(robot.id)\n        \n        if (response && response.data && response.data.message) {\n          ElMessage.success(response.data.message || '成功解除充电桩')\n        } else {\n          ElMessage.success('成功解除充电桩')\n        }\n        \n        // 刷新机器人数据\n        await this.fetchRobots()\n        // 刷新充电站数据\n        await this.fetchStations()\n      } catch (error) {\n        console.error('解除充电桩失败:', error)\n        // 提取API返回的具体错误信息\n        let errorMsg = '未知错误'\n        if (error.response && error.response.data) {\n          errorMsg = error.response.data.error || error.response.data.message || error.message || '解除失败'\n        } else if (error.message) {\n          errorMsg = error.message\n        }\n        ElMessage.error('解除充电桩失败: ' + errorMsg)\n      } finally {\n        this.assigningStation = false\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.robots-container {\n  padding: 20px;\n}\n.error-message, .charge-results {\n  margin-bottom: 20px;\n}\n.no-data {\n  padding: 20px 0;\n}\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n.toolbar {\n  margin-bottom: 20px;\n  display: flex;\n  gap: 10px;\n}\n.no-station {\n  color: #909399;\n  font-style: italic;\n}\n.dialog-loading {\n  padding: 20px 0;\n}\n.no-stations-message {\n  margin: 20px 0;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}