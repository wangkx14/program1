{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, createBlock as _createBlock, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"robots-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"toolbar\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"error-message\"\n};\nvar _hoisted_4 = {\n  key: 1,\n  \"class\": \"charge-results\"\n};\nvar _hoisted_5 = {\n  key: 0\n};\nvar _hoisted_6 = {\n  key: 1,\n  \"class\": \"no-station\"\n};\nvar _hoisted_7 = {\n  key: 3,\n  \"class\": \"no-data\"\n};\nvar _hoisted_8 = {\n  key: 4,\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_9 = {\n  key: 0,\n  \"class\": \"dialog-loading\"\n};\nvar _hoisted_10 = {\n  key: 1\n};\nvar _hoisted_11 = {\n  key: 0,\n  \"class\": \"no-stations-message\"\n};\nvar _hoisted_12 = {\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_alert = _resolveComponent(\"el-alert\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_progress = _resolveComponent(\"el-progress\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_empty = _resolveComponent(\"el-empty\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  var _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[11] || (_cache[11] = _createElementVNode(\"h2\", null, \"机器人管理\", -1 /* HOISTED */)), _createVNode(_component_el_card, {\n    \"class\": \"box-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.checkLowBattery,\n        loading: $data.checkingBattery\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[4] || (_cache[4] = [_createTextVNode(\" 检查低电量机器人并自动充电 \")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [4]\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"]), _createVNode(_component_el_button, {\n        type: \"success\",\n        onClick: $options.fetchRobots,\n        loading: $data.loading\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[5] || (_cache[5] = [_createTextVNode(\" 刷新数据 \")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [5]\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"])]), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_alert, {\n        title: \"加载数据出错\",\n        type: \"error\",\n        description: $data.error,\n        \"show-icon\": \"\"\n      }, null, 8 /* PROPS */, [\"description\"])])) : _createCommentVNode(\"v-if\", true), $data.chargeResults && $data.chargeResults.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_alert, {\n        title: \"自动充电结果\",\n        type: \"success\",\n        closable: true,\n        \"show-icon\": \"\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.chargeResults, function (result, index) {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: index\n            }, _toDisplayString(result.message), 1 /* TEXT */);\n          }), 128 /* KEYED_FRAGMENT */))];\n        }),\n        _: 1 /* STABLE */\n      })])) : _createCommentVNode(\"v-if\", true), $data.robots && $data.robots.length > 0 ? _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n        key: 2,\n        data: $options.paginatedRobots,\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_table_column, {\n            prop: \"id\",\n            label: \"机器人ID\",\n            width: \"100\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"名称\",\n            width: \"150\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"battery_level\",\n            label: \"电量\",\n            width: \"180\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_progress, {\n                percentage: scope.row.battery_level,\n                status: $options.getBatteryStatus(scope.row.battery_level)\n              }, null, 8 /* PROPS */, [\"percentage\", \"status\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"status\",\n            label: \"状态\",\n            width: \"120\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_tag, {\n                type: $options.getStatusType(scope.row.status)\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($options.getStatusText(scope.row.status)), 1 /* TEXT */)];\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"station_id\",\n            label: \"关联充电桩\",\n            width: \"150\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [scope.row.station_id ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString($options.getStationName(scope.row.station_id)), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"未分配\"))];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"last_charging\",\n            label: \"上次充电时间\"\n          }), _createVNode(_component_el_table_column, {\n            label: \"操作\",\n            width: \"200\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_button, {\n                size: \"small\",\n                type: \"primary\",\n                onClick: function onClick($event) {\n                  return $options.showAssignDialog(scope.row);\n                },\n                disabled: scope.row.status === 'charging'\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[6] || (_cache[6] = [_createTextVNode(\" 分配充电桩 \")]);\n                }),\n                _: 2 /* DYNAMIC */,\n                __: [6]\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"disabled\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $data.loading]]) : !$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createVNode(_component_el_empty, {\n        description: \"暂无数据\"\n      })])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 分页控件 \"), $data.robots && $data.robots.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createVNode(_component_el_pagination, {\n        \"current-page\": $data.currentPage,\n        \"onUpdate:currentPage\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.currentPage = $event;\n        }),\n        \"page-size\": $data.pageSize,\n        total: $options.totalItems,\n        layout: \"total, prev, pager, next, jumper\",\n        onCurrentChange: $options.handleCurrentChange\n      }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\", \"onCurrentChange\"])])) : _createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 分配充电桩对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"分配充电桩\",\n    modelValue: $data.assignDialogVisible,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n      return $data.assignDialogVisible = $event;\n    }),\n    width: \"500px\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_12, [_createVNode(_component_el_button, {\n        onClick: _cache[2] || (_cache[2] = function ($event) {\n          return $data.assignDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[9] || (_cache[9] = [_createTextVNode(\"取消\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [9]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.assignStation,\n        disabled: !$data.selectedStationId || $data.assigningStation,\n        loading: $data.assigningStation\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[10] || (_cache[10] = [_createTextVNode(\" 确定 \")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [10]\n      }, 8 /* PROPS */, [\"onClick\", \"disabled\", \"loading\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      var _$data$currentRobot;\n      return [$data.loadingStations ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createVNode(_component_el_skeleton, {\n        rows: 3,\n        animated: \"\"\n      })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"p\", null, [_cache[7] || (_cache[7] = _createTextVNode(\"为机器人 \")), _createElementVNode(\"strong\", null, _toDisplayString((_$data$currentRobot = $data.currentRobot) === null || _$data$currentRobot === void 0 ? void 0 : _$data$currentRobot.name), 1 /* TEXT */), _cache[8] || (_cache[8] = _createTextVNode(\" 选择一个充电桩:\"))]), $options.availableStations.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createVNode(_component_el_alert, {\n        title: \"没有可用的充电桩\",\n        type: \"warning\",\n        description: \"所有充电桩都在使用中或处于维护状态\",\n        \"show-icon\": \"\"\n      })])) : (_openBlock(), _createBlock(_component_el_form, {\n        key: 1\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_select, {\n                modelValue: $data.selectedStationId,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $data.selectedStationId = $event;\n                }),\n                placeholder: \"请选择充电桩\",\n                style: {\n                  \"width\": \"100%\"\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.availableStations, function (station) {\n                    return _openBlock(), _createBlock(_component_el_option, {\n                      key: station.id,\n                      label: \"\".concat(station.name, \" (\").concat(station.location, \")\"),\n                      value: station.id\n                    }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                  }), 128 /* KEYED_FRAGMENT */))];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }))]))];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_card","_withCtx","_hoisted_2","_component_el_button","type","onClick","$options","checkLowBattery","loading","$data","checkingBattery","_cache","_createTextVNode","_","__","fetchRobots","error","_hoisted_3","_component_el_alert","title","description","_createCommentVNode","chargeResults","length","_hoisted_4","closable","_Fragment","_renderList","result","index","_toDisplayString","message","robots","_createBlock","_component_el_table","data","paginatedRobots","style","_component_el_table_column","prop","label","width","scope","_component_el_progress","percentage","row","battery_level","status","getBatteryStatus","_component_el_tag","getStatusType","getStatusText","station_id","_hoisted_5","getStationName","_hoisted_6","size","$event","showAssignDialog","disabled","_hoisted_7","_component_el_empty","_hoisted_8","_component_el_pagination","currentPage","pageSize","total","totalItems","layout","onCurrentChange","handleCurrentChange","_component_el_dialog","modelValue","assignDialogVisible","footer","_hoisted_12","assignStation","selectedStationId","assigningStation","_$data$currentRobot","loadingStations","_hoisted_9","_component_el_skeleton","rows","animated","_hoisted_10","currentRobot","name","availableStations","_hoisted_11","_component_el_form","_component_el_form_item","_component_el_select","placeholder","station","_component_el_option","id","concat","location","value"],"sources":["C:\\Users\\jiaronghao\\Desktop\\Documents\\本科论文编写\\5、货仓机器人激光充电和能效管理云平台的设计与实现\\Y0527-final\\frontend\\src\\views\\Robots.vue"],"sourcesContent":["<template>\n  <div class=\"robots-container\">\n    <h2>机器人管理</h2>\n    <el-card class=\"box-card\">\n      <div class=\"toolbar\">\n        <el-button type=\"primary\" @click=\"checkLowBattery\" :loading=\"checkingBattery\">\n          检查低电量机器人并自动充电\n        </el-button>\n        <el-button type=\"success\" @click=\"fetchRobots\" :loading=\"loading\">\n          刷新数据\n        </el-button>\n      </div>\n      \n      <div v-if=\"error\" class=\"error-message\">\n        <el-alert\n          title=\"加载数据出错\"\n          type=\"error\"\n          :description=\"error\"\n          show-icon\n        />\n      </div>\n      \n      <div v-if=\"chargeResults && chargeResults.length > 0\" class=\"charge-results\">\n        <el-alert\n          title=\"自动充电结果\"\n          type=\"success\"\n          :closable=\"true\"\n          show-icon\n        >\n          <div v-for=\"(result, index) in chargeResults\" :key=\"index\">\n            {{ result.message }}\n          </div>\n        </el-alert>\n      </div>\n      \n      <el-table \n        v-if=\"robots && robots.length > 0\" \n        :data=\"paginatedRobots\" \n        style=\"width: 100%\" \n        v-loading=\"loading\">\n        <el-table-column prop=\"id\" label=\"机器人ID\" width=\"100\" />\n        <el-table-column prop=\"name\" label=\"名称\" width=\"150\" />\n        <el-table-column prop=\"battery_level\" label=\"电量\" width=\"180\">\n          <template #default=\"scope\">\n            <el-progress \n              :percentage=\"scope.row.battery_level\" \n              :status=\"getBatteryStatus(scope.row.battery_level)\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\" width=\"120\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.status)\">\n              {{ getStatusText(scope.row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"station_id\" label=\"关联充电桩\" width=\"150\">\n          <template #default=\"scope\">\n            <span v-if=\"scope.row.station_id\">\n              {{ getStationName(scope.row.station_id) }}\n            </span>\n            <span v-else class=\"no-station\">未分配</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"last_charging\" label=\"上次充电时间\" />\n        <el-table-column label=\"操作\" width=\"200\">\n          <template #default=\"scope\">\n            <el-button \n              size=\"small\" \n              type=\"primary\" \n              @click=\"showAssignDialog(scope.row)\"\n              :disabled=\"scope.row.status === 'charging'\"\n            >\n              分配充电桩\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div v-else-if=\"!loading\" class=\"no-data\">\n        <el-empty description=\"暂无数据\" />\n      </div>\n      \n      <!-- 分页控件 -->\n      <div class=\"pagination-container\" v-if=\"robots && robots.length > 0\">\n        <el-pagination\n          v-model:current-page=\"currentPage\"\n          :page-size=\"pageSize\"\n          :total=\"totalItems\"\n          layout=\"total, prev, pager, next, jumper\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n    \n    <!-- 分配充电桩对话框 -->\n    <el-dialog \n      title=\"分配充电桩\" \n      v-model=\"assignDialogVisible\"\n      width=\"500px\"\n    >\n      <div v-if=\"loadingStations\" class=\"dialog-loading\">\n        <el-skeleton :rows=\"3\" animated />\n      </div>\n      <div v-else>\n        <p>为机器人 <strong>{{ currentRobot?.name }}</strong> 选择一个充电桩:</p>\n        \n        <div v-if=\"availableStations.length === 0\" class=\"no-stations-message\">\n          <el-alert\n            title=\"没有可用的充电桩\"\n            type=\"warning\"\n            description=\"所有充电桩都在使用中或处于维护状态\"\n            show-icon\n          />\n        </div>\n        \n        <el-form v-else>\n          <el-form-item>\n            <el-select v-model=\"selectedStationId\" placeholder=\"请选择充电桩\" style=\"width: 100%\">\n              <el-option\n                v-for=\"station in availableStations\"\n                :key=\"station.id\"\n                :label=\"`${station.name} (${station.location})`\"\n                :value=\"station.id\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </div>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"assignDialogVisible = false\">取消</el-button>\n          <el-button \n            type=\"primary\" \n            @click=\"assignStation\" \n            :disabled=\"!selectedStationId || assigningStation\"\n            :loading=\"assigningStation\"\n          >\n            确定\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { robotApi, stationApi } from '@/api'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'Robots',\n  data() {\n    return {\n      robots: [],\n      stations: [],\n      loading: false,\n      error: null,\n      // 分页相关\n      currentPage: 1,\n      pageSize: 10,\n      // 分配充电桩相关\n      assignDialogVisible: false,\n      currentRobot: null,\n      selectedStationId: null,\n      loadingStations: false,\n      assigningStation: false,\n      // 低电量检查相关\n      checkingBattery: false,\n      chargeResults: []\n    }\n  },\n  computed: {\n    totalItems() {\n      return this.robots.length\n    },\n    paginatedRobots() {\n      const startIndex = (this.currentPage - 1) * this.pageSize\n      const endIndex = startIndex + this.pageSize\n      return this.robots.slice(startIndex, endIndex)\n    },\n    availableStations() {\n      return this.stations.filter(station => station.status === 'idle')\n    }\n  },\n  created() {\n    console.log('Robots组件已创建，准备获取数据')\n    \n    // 添加这个延迟调用以避免可能的ResizeObserver问题\n    setTimeout(() => {\n      this.fetchRobots()\n      this.fetchStations()\n    }, 0)\n  },\n  methods: {\n    async fetchRobots() {\n      try {\n        this.loading = true\n        this.error = null\n        console.log('开始获取机器人数据')\n        \n        try {\n          const response = await robotApi.getAll()\n          // 打印原始响应\n          console.log('获取到机器人数据(原始):', response)\n          console.log('获取到机器人数据:', response.data)\n          console.log('机器人数据类型:', typeof response.data, Array.isArray(response.data))\n          \n          // 确保数据是数组\n          if (Array.isArray(response.data)) {\n            // 检查每个机器人对象的字段\n            const validRobots = response.data.filter(robot => {\n              const isValid = robot && \n                             typeof robot === 'object' && \n                             'id' in robot && \n                             'name' in robot && \n                             'battery_level' in robot && \n                             'status' in robot;\n              if (!isValid) {\n                console.warn('过滤掉无效的机器人数据:', robot);\n              }\n              return isValid;\n            });\n            \n            console.log('有效的机器人数据:', validRobots);\n            this.robots = validRobots;\n            // 重置为第一页\n            this.currentPage = 1;\n            console.log('成功设置机器人数据，数量:', this.robots.length)\n          } else {\n            console.error('API返回的机器人数据不是数组:', response.data)\n            this.robots = [] // 设置为空数组\n            this.error = '机器人数据格式错误，请联系管理员'\n            ElMessage.error('机器人数据格式错误')\n          }\n        } catch (apiError) {\n          console.error('API调用出错:', apiError)\n          this.robots = [] // 确保错误时也设置为空数组\n          this.error = `API调用出错: ${apiError.message || '未知错误'}`\n          ElMessage.error('获取机器人数据失败')\n        }\n      } catch (error) {\n        console.error('获取机器人列表失败:', error)\n        this.robots = [] // 确保错误时也设置为空数组\n        this.error = `获取数据失败: ${error.message || '未知错误'}`\n        ElMessage.error('获取机器人列表失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    async fetchStations() {\n      try {\n        this.loadingStations = true\n        console.log('开始获取充电站数据')\n        \n        const response = await stationApi.getAll()\n        console.log('获取到充电站数据:', response.data)\n        \n        if (Array.isArray(response.data)) {\n          this.stations = response.data\n          console.log('成功设置充电站数据，数量:', this.stations.length)\n        } else {\n          console.error('API返回的充电站数据不是数组')\n          this.stations = []\n        }\n      } catch (error) {\n        console.error('获取充电站列表失败:', error)\n        this.stations = []\n        ElMessage.error('获取充电站数据失败')\n      } finally {\n        this.loadingStations = false\n      }\n    },\n    \n    // 检查低电量机器人并自动充电\n    async checkLowBattery() {\n      try {\n        this.checkingBattery = true\n        this.chargeResults = []\n        \n        console.log('开始检查低电量机器人')\n        const response = await robotApi.checkLowBattery()\n        console.log('检查结果:', response.data)\n        \n        if (Array.isArray(response.data) && response.data.length > 0) {\n          this.chargeResults = response.data\n          ElMessage.success(`检测到 ${response.data.length} 个需要处理的机器人`)\n        } else {\n          ElMessage.info('没有需要充电的机器人')\n        }\n        \n        // 刷新机器人数据\n        await this.fetchRobots()\n      } catch (error) {\n        console.error('检查低电量机器人失败:', error)\n        ElMessage.error('检查低电量机器人失败')\n      } finally {\n        this.checkingBattery = false\n      }\n    },\n    \n    // 显示分配充电桩对话框\n    showAssignDialog(robot) {\n      this.currentRobot = robot\n      this.selectedStationId = robot.station_id || null\n      this.assignDialogVisible = true\n      \n      // 如果充电站数据为空，重新获取\n      if (this.stations.length === 0) {\n        this.fetchStations()\n      }\n    },\n    \n    // 分配充电桩\n    async assignStation() {\n      if (!this.currentRobot || !this.selectedStationId) {\n        ElMessage.warning('请选择充电桩')\n        return\n      }\n      \n      try {\n        this.assigningStation = true\n        console.log(`分配机器人 ${this.currentRobot.id} 到充电桩 ${this.selectedStationId}`)\n        \n        await robotApi.assignToStation(this.currentRobot.id, this.selectedStationId)\n        \n        ElMessage.success('成功分配充电桩')\n        this.assignDialogVisible = false\n        \n        // 刷新机器人数据\n        await this.fetchRobots()\n      } catch (error) {\n        console.error('分配充电桩失败:', error)\n        ElMessage.error('分配充电桩失败: ' + (error.message || '未知错误'))\n      } finally {\n        this.assigningStation = false\n      }\n    },\n    \n    // 获取充电桩名称\n    getStationName(stationId) {\n      const station = this.stations.find(s => s.id === stationId)\n      return station ? station.name : `充电桩 ${stationId}`\n    },\n    \n    // 分页相关方法\n    handleCurrentChange(page) {\n      this.currentPage = page\n      console.log(`当前页: ${this.currentPage}`)\n    },\n    \n    // 获取电池状态\n    getBatteryStatus(level) {\n      if (level < 20) return 'exception'\n      if (level < 50) return 'warning'\n      return 'success'\n    },\n    \n    getStatusType(status) {\n      const types = {\n        'idle': 'info',\n        'working': 'success',\n        'charging': 'primary',\n        'error': 'danger'\n      }\n      return types[status] || 'info'\n    },\n    \n    getStatusText(status) {\n      const texts = {\n        'idle': '空闲',\n        'working': '工作中',\n        'charging': '充电中',\n        'error': '故障'\n      }\n      return texts[status] || status\n    }\n  }\n}\n</script>\n\n<style scoped>\n.robots-container {\n  padding: 20px;\n}\n.error-message, .charge-results {\n  margin-bottom: 20px;\n}\n.no-data {\n  padding: 20px 0;\n}\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n.toolbar {\n  margin-bottom: 20px;\n  display: flex;\n  gap: 10px;\n}\n.no-station {\n  color: #909399;\n  font-style: italic;\n}\n.dialog-loading {\n  padding: 20px 0;\n}\n.no-stations-message {\n  margin: 20px 0;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}