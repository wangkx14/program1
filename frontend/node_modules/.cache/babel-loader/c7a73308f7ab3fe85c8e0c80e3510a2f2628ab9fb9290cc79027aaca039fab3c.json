{"ast":null,"code":"import _objectSpread from \"D:/software_data/Project/Y0527/CODE_BAK/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport router from '@/router';\nimport store from '@/store';\n\n// 创建axios实例\nvar service = axios.create({\n  baseURL: process.env.VUE_APP_API_URL || 'http://localhost:5000',\n  timeout: 15000 // 请求超时时间\n});\n\n// 请求拦截器\nservice.interceptors.request.use(function (config) {\n  // 从store获取token\n  var token = store.getters.token;\n\n  // 如果有token，添加到请求头\n  if (token) {\n    config.headers['Authorization'] = \"Bearer \".concat(token);\n  }\n  return config;\n}, function (error) {\n  console.error('请求错误:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(function (response) {\n  var res = response.data;\n\n  // 如果响应成功但业务状态失败\n  if (res.success === false) {\n    ElMessage({\n      message: res.message || '请求失败',\n      type: 'error',\n      duration: 5 * 1000\n    });\n    return Promise.reject(new Error(res.message || '请求失败'));\n  }\n  return res;\n}, function (error) {\n  console.error('响应错误:', error);\n\n  // 处理特定的错误状态码\n  if (error.response) {\n    var _error$response = error.response,\n      status = _error$response.status,\n      data = _error$response.data;\n    switch (status) {\n      case 401:\n        // 未授权，清除token并跳转到登录页\n        store.dispatch('user/logout');\n        router.push('/login');\n        ElMessage({\n          message: data.message || '登录已过期，请重新登录',\n          type: 'error',\n          duration: 5 * 1000\n        });\n        break;\n      case 403:\n        // 权限不足\n        ElMessage({\n          message: data.message || '权限不足，无法访问',\n          type: 'error',\n          duration: 5 * 1000\n        });\n        break;\n      case 404:\n        // 资源不存在\n        ElMessage({\n          message: data.message || '请求的资源不存在',\n          type: 'error',\n          duration: 5 * 1000\n        });\n        break;\n      case 500:\n        // 服务器错误\n        ElMessage({\n          message: data.message || '服务器内部错误',\n          type: 'error',\n          duration: 5 * 1000\n        });\n        break;\n      default:\n        // 其他错误\n        ElMessage({\n          message: data.message || \"\\u8BF7\\u6C42\\u5931\\u8D25 (\".concat(status, \")\"),\n          type: 'error',\n          duration: 5 * 1000\n        });\n    }\n  } else {\n    // 网络错误或请求被取消\n    ElMessage({\n      message: '网络错误，请检查您的网络连接',\n      type: 'error',\n      duration: 5 * 1000\n    });\n  }\n  return Promise.reject(error);\n});\n\n/**\r\n * 封装GET请求\r\n * @param {string} url - 请求URL\r\n * @param {object} params - 请求参数\r\n * @param {object} config - 额外配置\r\n * @returns {Promise} - 请求Promise\r\n */\nexport function get(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return service(_objectSpread({\n    url: url,\n    method: 'get',\n    params: params\n  }, config));\n}\n\n/**\r\n * 封装POST请求\r\n * @param {string} url - 请求URL\r\n * @param {object} data - 请求数据\r\n * @param {object} config - 额外配置\r\n * @returns {Promise} - 请求Promise\r\n */\nexport function post(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return service(_objectSpread({\n    url: url,\n    method: 'post',\n    data: data\n  }, config));\n}\n\n/**\r\n * 封装PUT请求\r\n * @param {string} url - 请求URL\r\n * @param {object} data - 请求数据\r\n * @param {object} config - 额外配置\r\n * @returns {Promise} - 请求Promise\r\n */\nexport function put(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return service(_objectSpread({\n    url: url,\n    method: 'put',\n    data: data\n  }, config));\n}\n\n/**\r\n * 封装DELETE请求\r\n * @param {string} url - 请求URL\r\n * @param {object} params - 请求参数\r\n * @param {object} config - 额外配置\r\n * @returns {Promise} - 请求Promise\r\n */\nexport function del(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return service(_objectSpread({\n    url: url,\n    method: 'delete',\n    params: params\n  }, config));\n}\n\n// 导出请求实例和封装的请求方法\nexport default service;","map":{"version":3,"names":["axios","ElMessage","router","store","service","create","baseURL","process","env","VUE_APP_API_URL","timeout","interceptors","request","use","config","token","getters","headers","concat","error","console","Promise","reject","response","res","data","success","message","type","duration","Error","_error$response","status","dispatch","push","get","url","params","arguments","length","undefined","_objectSpread","method","post","put","del"],"sources":["D:/software_data/Project/Y0527/CODE_BAK/frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios';\r\nimport { ElMessage } from 'element-plus';\r\nimport router from '@/router';\r\nimport store from '@/store';\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: process.env.VUE_APP_API_URL || 'http://localhost:5000',\r\n  timeout: 15000 // 请求超时时间\r\n});\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    // 从store获取token\r\n    const token = store.getters.token;\r\n    \r\n    // 如果有token，添加到请求头\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  error => {\r\n    console.error('请求错误:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    const res = response.data;\r\n    \r\n    // 如果响应成功但业务状态失败\r\n    if (res.success === false) {\r\n      ElMessage({\r\n        message: res.message || '请求失败',\r\n        type: 'error',\r\n        duration: 5 * 1000\r\n      });\r\n      \r\n      return Promise.reject(new Error(res.message || '请求失败'));\r\n    }\r\n    \r\n    return res;\r\n  },\r\n  error => {\r\n    console.error('响应错误:', error);\r\n    \r\n    // 处理特定的错误状态码\r\n    if (error.response) {\r\n      const { status, data } = error.response;\r\n      \r\n      switch (status) {\r\n        case 401:\r\n          // 未授权，清除token并跳转到登录页\r\n          store.dispatch('user/logout');\r\n          router.push('/login');\r\n          ElMessage({\r\n            message: data.message || '登录已过期，请重新登录',\r\n            type: 'error',\r\n            duration: 5 * 1000\r\n          });\r\n          break;\r\n          \r\n        case 403:\r\n          // 权限不足\r\n          ElMessage({\r\n            message: data.message || '权限不足，无法访问',\r\n            type: 'error',\r\n            duration: 5 * 1000\r\n          });\r\n          break;\r\n          \r\n        case 404:\r\n          // 资源不存在\r\n          ElMessage({\r\n            message: data.message || '请求的资源不存在',\r\n            type: 'error',\r\n            duration: 5 * 1000\r\n          });\r\n          break;\r\n          \r\n        case 500:\r\n          // 服务器错误\r\n          ElMessage({\r\n            message: data.message || '服务器内部错误',\r\n            type: 'error',\r\n            duration: 5 * 1000\r\n          });\r\n          break;\r\n          \r\n        default:\r\n          // 其他错误\r\n          ElMessage({\r\n            message: data.message || `请求失败 (${status})`,\r\n            type: 'error',\r\n            duration: 5 * 1000\r\n          });\r\n      }\r\n    } else {\r\n      // 网络错误或请求被取消\r\n      ElMessage({\r\n        message: '网络错误，请检查您的网络连接',\r\n        type: 'error',\r\n        duration: 5 * 1000\r\n      });\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n/**\r\n * 封装GET请求\r\n * @param {string} url - 请求URL\r\n * @param {object} params - 请求参数\r\n * @param {object} config - 额外配置\r\n * @returns {Promise} - 请求Promise\r\n */\r\nexport function get(url, params = {}, config = {}) {\r\n  return service({\r\n    url,\r\n    method: 'get',\r\n    params,\r\n    ...config\r\n  });\r\n}\r\n\r\n/**\r\n * 封装POST请求\r\n * @param {string} url - 请求URL\r\n * @param {object} data - 请求数据\r\n * @param {object} config - 额外配置\r\n * @returns {Promise} - 请求Promise\r\n */\r\nexport function post(url, data = {}, config = {}) {\r\n  return service({\r\n    url,\r\n    method: 'post',\r\n    data,\r\n    ...config\r\n  });\r\n}\r\n\r\n/**\r\n * 封装PUT请求\r\n * @param {string} url - 请求URL\r\n * @param {object} data - 请求数据\r\n * @param {object} config - 额外配置\r\n * @returns {Promise} - 请求Promise\r\n */\r\nexport function put(url, data = {}, config = {}) {\r\n  return service({\r\n    url,\r\n    method: 'put',\r\n    data,\r\n    ...config\r\n  });\r\n}\r\n\r\n/**\r\n * 封装DELETE请求\r\n * @param {string} url - 请求URL\r\n * @param {object} params - 请求参数\r\n * @param {object} config - 额外配置\r\n * @returns {Promise} - 请求Promise\r\n */\r\nexport function del(url, params = {}, config = {}) {\r\n  return service({\r\n    url,\r\n    method: 'delete',\r\n    params,\r\n    ...config\r\n  });\r\n}\r\n\r\n// 导出请求实例和封装的请求方法\r\nexport default service; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}