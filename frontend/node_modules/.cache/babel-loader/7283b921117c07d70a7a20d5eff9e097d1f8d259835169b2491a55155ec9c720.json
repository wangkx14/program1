{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { computed, onMounted, onUnmounted, ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { ElMessageBox } from 'element-plus';\nimport { Monitor, Location, Cpu, Document, TrendCharts, Setting, Connection, User } from '@element-plus/icons-vue';\n// 开发环境下导入错误处理样式\nimport '@/assets/css/error-overlay-fix.css';\nexport default {\n  name: 'App',\n  components: {\n    Monitor: Monitor,\n    Location: Location,\n    Cpu: Cpu,\n    Document: Document,\n    TrendCharts: TrendCharts,\n    Setting: Setting,\n    Connection: Connection,\n    User: User\n  },\n  setup: function setup() {\n    var store = useStore();\n    var router = useRouter();\n    var isAuthenticated = computed(function () {\n      return store.getters.isAuthenticated;\n    });\n    var currentUser = computed(function () {\n      return store.getters.currentUser || {};\n    });\n    var isAdmin = computed(function () {\n      return store.getters.isAdmin;\n    });\n    var isDev = ref(process.env.NODE_ENV === 'development');\n    var handleCommand = function handleCommand(command) {\n      if (command === 'logout') {\n        ElMessageBox.confirm('确定要退出登录吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          store.dispatch('logout');\n          router.push('/login');\n        })[\"catch\"](function () {});\n      }\n    };\n\n    // 处理ResizeObserver错误的定时器引用\n    var errorOverlayCheckTimer = null;\n\n    // 组件挂载时设置错误覆盖层处理\n    onMounted(function () {\n      if (isDev.value) {\n        // 处理webpack-dev-server错误覆盖层\n        var handleErrorOverlays = function handleErrorOverlays() {\n          try {\n            var overlays = document.querySelectorAll('div[id^=\"webpack-dev-server-client-overlay\"]');\n            overlays.forEach(function (overlay) {\n              // 查找包含ResizeObserver错误的覆盖层\n              if (overlay.textContent && overlay.textContent.includes('ResizeObserver')) {\n                // 添加自定义类以隐藏\n                overlay.classList.add('hide-resize-observer-errors');\n                // 或直接设置样式\n                overlay.style.display = 'none';\n              }\n            });\n          } catch (e) {\n            // 忽略错误\n          }\n        };\n\n        // 立即处理一次\n        handleErrorOverlays();\n\n        // 设置定时检查\n        errorOverlayCheckTimer = setInterval(handleErrorOverlays, 500);\n\n        // 监听DOM变化\n        try {\n          var observer = new MutationObserver(function (mutations) {\n            mutations.forEach(function (mutation) {\n              if (mutation.addedNodes.length) {\n                handleErrorOverlays();\n              }\n            });\n          });\n\n          // 开始观察body的变化\n          observer.observe(document.body, {\n            childList: true,\n            subtree: true\n          });\n        } catch (e) {\n          console.warn('无法设置MutationObserver:', e);\n        }\n      }\n    });\n\n    // 组件卸载时清理\n    onUnmounted(function () {\n      if (errorOverlayCheckTimer) {\n        clearInterval(errorOverlayCheckTimer);\n        errorOverlayCheckTimer = null;\n      }\n    });\n    return {\n      isAuthenticated: isAuthenticated,\n      currentUser: currentUser,\n      isAdmin: isAdmin,\n      isDev: isDev,\n      handleCommand: handleCommand\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","onUnmounted","ref","useStore","useRouter","ElMessageBox","Monitor","Location","Cpu","Document","TrendCharts","Setting","Connection","User","name","components","setup","store","router","isAuthenticated","getters","currentUser","isAdmin","isDev","process","env","NODE_ENV","handleCommand","command","confirm","confirmButtonText","cancelButtonText","type","then","dispatch","push","errorOverlayCheckTimer","value","handleErrorOverlays","overlays","document","querySelectorAll","forEach","overlay","textContent","includes","classList","add","style","display","e","setInterval","observer","MutationObserver","mutations","mutation","addedNodes","length","observe","body","childList","subtree","console","warn","clearInterval"],"sources":["C:\\Users\\jiaronghao\\Desktop\\Documents\\本科论文编写\\5、程序编写\\Y0527-final\\frontend\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <template v-if=\"$route.name === 'Login'\">\r\n      <router-view />\r\n    </template>\r\n    <el-container v-else>\r\n      <el-header>\r\n        <div class=\"header-content\">\r\n          <div class=\"logo-container\">\r\n            <el-icon class=\"logo-icon\"><TrendCharts /></el-icon>\r\n          </div>\r\n          <h1 class=\"system-title\">货仓机器人激光充电和能效管理云平台</h1>\r\n          \r\n          <div class=\"user-actions\" v-if=\"isAuthenticated\">\r\n            <span class=\"username\">\r\n              <el-icon><User /></el-icon>\r\n              {{ currentUser.username }} ({{ currentUser.role === 'admin' ? '管理员' : '普通用户' }})\r\n            </span>\r\n            <el-dropdown @command=\"handleCommand\">\r\n              <span class=\"el-dropdown-link\">\r\n                <el-icon><Setting /></el-icon>\r\n              </span>\r\n              <template #dropdown>\r\n                <el-dropdown-menu>\r\n                  <el-dropdown-item command=\"logout\">退出登录</el-dropdown-item>\r\n                </el-dropdown-menu>\r\n              </template>\r\n            </el-dropdown>\r\n          </div>\r\n        </div>\r\n      </el-header>\r\n      <el-container>\r\n        <el-aside width=\"200px\">\r\n          <el-menu\r\n            router\r\n            :default-active=\"$route.path\"\r\n            class=\"el-menu-vertical\">\r\n            <el-menu-item index=\"/dashboard\">\r\n              <el-icon><Monitor /></el-icon>\r\n              <span>系统概览</span>\r\n            </el-menu-item>\r\n            <el-menu-item index=\"/stations\">\r\n              <el-icon><Location /></el-icon>\r\n              <span>充电桩管理</span>\r\n            </el-menu-item>\r\n            <el-menu-item index=\"/robots\" v-if=\"isAdmin\">\r\n              <el-icon><Cpu /></el-icon>\r\n              <span>机器人管理</span>\r\n            </el-menu-item>\r\n            <el-menu-item index=\"/orders\">\r\n              <el-icon><Document /></el-icon>\r\n              <span>充电订单</span>\r\n            </el-menu-item>\r\n            <el-menu-item index=\"/energy-efficiency\">\r\n              <el-icon><TrendCharts /></el-icon>\r\n              <span>能效分析</span>\r\n            </el-menu-item>\r\n            <el-menu-item index=\"/system\" v-if=\"isAdmin\">\r\n              <el-icon><Setting /></el-icon>\r\n              <span>系统设置</span>\r\n            </el-menu-item>\r\n            <el-menu-item index=\"/test-api\" v-if=\"isAdmin\">\r\n              <el-icon><Connection /></el-icon>\r\n              <span>API测试</span>\r\n            </el-menu-item>\r\n          </el-menu>\r\n        </el-aside>\r\n        <el-main>\r\n          <router-view></router-view>\r\n        </el-main>\r\n      </el-container>\r\n    </el-container>\r\n    \r\n    <!-- 错误覆盖层修复元素 - 仅开发环境 -->\r\n    <div v-if=\"isDev\" class=\"error-overlay-fix\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, onMounted, onUnmounted, ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessageBox } from 'element-plus'\r\nimport { Monitor, Location, Cpu, Document, TrendCharts, Setting, Connection, User } from '@element-plus/icons-vue'\r\n// 开发环境下导入错误处理样式\r\nimport '@/assets/css/error-overlay-fix.css'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    Monitor,\r\n    Location,\r\n    Cpu,\r\n    Document,\r\n    TrendCharts,\r\n    Setting,\r\n    Connection,\r\n    User\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    \r\n    const isAuthenticated = computed(() => store.getters.isAuthenticated)\r\n    const currentUser = computed(() => store.getters.currentUser || {})\r\n    const isAdmin = computed(() => store.getters.isAdmin)\r\n    const isDev = ref(process.env.NODE_ENV === 'development')\r\n    \r\n    const handleCommand = (command) => {\r\n      if (command === 'logout') {\r\n        ElMessageBox.confirm(\r\n          '确定要退出登录吗？',\r\n          '提示',\r\n          {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }\r\n        ).then(() => {\r\n          store.dispatch('logout')\r\n          router.push('/login')\r\n        }).catch(() => {})\r\n      }\r\n    }\r\n    \r\n    // 处理ResizeObserver错误的定时器引用\r\n    let errorOverlayCheckTimer = null\r\n    \r\n    // 组件挂载时设置错误覆盖层处理\r\n    onMounted(() => {\r\n      if (isDev.value) {\r\n        // 处理webpack-dev-server错误覆盖层\r\n        const handleErrorOverlays = () => {\r\n          try {\r\n            const overlays = document.querySelectorAll('div[id^=\"webpack-dev-server-client-overlay\"]');\r\n            overlays.forEach(overlay => {\r\n              // 查找包含ResizeObserver错误的覆盖层\r\n              if (overlay.textContent && overlay.textContent.includes('ResizeObserver')) {\r\n                // 添加自定义类以隐藏\r\n                overlay.classList.add('hide-resize-observer-errors');\r\n                // 或直接设置样式\r\n                overlay.style.display = 'none';\r\n              }\r\n            });\r\n          } catch (e) {\r\n            // 忽略错误\r\n          }\r\n        };\r\n        \r\n        // 立即处理一次\r\n        handleErrorOverlays();\r\n        \r\n        // 设置定时检查\r\n        errorOverlayCheckTimer = setInterval(handleErrorOverlays, 500);\r\n        \r\n        // 监听DOM变化\r\n        try {\r\n          const observer = new MutationObserver((mutations) => {\r\n            mutations.forEach(mutation => {\r\n              if (mutation.addedNodes.length) {\r\n                handleErrorOverlays();\r\n              }\r\n            });\r\n          });\r\n          \r\n          // 开始观察body的变化\r\n          observer.observe(document.body, { childList: true, subtree: true });\r\n        } catch (e) {\r\n          console.warn('无法设置MutationObserver:', e);\r\n        }\r\n      }\r\n    });\r\n    \r\n    // 组件卸载时清理\r\n    onUnmounted(() => {\r\n      if (errorOverlayCheckTimer) {\r\n        clearInterval(errorOverlayCheckTimer);\r\n        errorOverlayCheckTimer = null;\r\n      }\r\n    });\r\n    \r\n    return {\r\n      isAuthenticated,\r\n      currentUser,\r\n      isAdmin,\r\n      isDev,\r\n      handleCommand\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  height: 100vh;\r\n}\r\n\r\n.el-header {\r\n  background: linear-gradient(135deg, #409EFF, #2c6bdb);\r\n  color: white;\r\n  line-height: 60px;\r\n  padding: 0 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.header-content {\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n}\r\n\r\n.logo-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-right: 15px;\r\n}\r\n\r\n.logo-icon {\r\n  font-size: 24px;\r\n}\r\n\r\n.system-title {\r\n  margin: 0;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\r\n  flex-grow: 1;\r\n}\r\n\r\n.user-actions {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.username {\r\n  margin-right: 15px;\r\n  font-size: 14px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.username .el-icon {\r\n  margin-right: 5px;\r\n}\r\n\r\n.el-dropdown-link {\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.el-dropdown-link .el-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n.el-aside {\r\n  background-color: #f5f7fa;\r\n  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.el-menu {\r\n  border-right: none;\r\n}\r\n\r\n/* 错误覆盖层修复样式 */\r\n.error-overlay-fix {\r\n  position: fixed;\r\n  z-index: 9999;\r\n  pointer-events: none;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}