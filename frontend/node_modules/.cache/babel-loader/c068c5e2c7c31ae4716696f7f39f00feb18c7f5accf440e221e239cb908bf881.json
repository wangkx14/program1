{"ast":null,"code":"import _regeneratorRuntime from \"D:/software_data/Project/Y0527/CODE/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _typeof from \"D:/software_data/Project/Y0527/CODE/frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _asyncToGenerator from \"D:/software_data/Project/Y0527/CODE/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport { robotApi } from '@/api';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'Robots',\n  data: function data() {\n    return {\n      robots: [],\n      loading: false,\n      error: null\n    };\n  },\n  created: function created() {\n    this.fetchRobots();\n  },\n  methods: {\n    fetchRobots: function fetchRobots() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _this.loading = true;\n              _this.error = null;\n              console.log('开始获取机器人数据');\n              _context.prev = 4;\n              _context.next = 7;\n              return robotApi.getAll();\n            case 7:\n              response = _context.sent;\n              console.log('获取到机器人数据:', response.data);\n              console.log('机器人数据类型:', _typeof(response.data), Array.isArray(response.data));\n\n              // 确保数据是数组\n              if (Array.isArray(response.data)) {\n                _this.robots = response.data;\n                console.log('成功设置机器人数据，数量:', _this.robots.length);\n              } else {\n                console.error('API返回的机器人数据不是数组:', response.data);\n                _this.robots = []; // 设置为空数组\n                _this.error = '机器人数据格式错误，请联系管理员';\n                ElMessage.error('机器人数据格式错误');\n              }\n              _context.next = 19;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](4);\n              console.error('API调用出错:', _context.t0);\n              _this.robots = []; // 确保错误时也设置为空数组\n              _this.error = \"API\\u8C03\\u7528\\u51FA\\u9519: \".concat(_context.t0.message || '未知错误');\n              ElMessage.error('获取机器人数据失败');\n            case 19:\n              _context.next = 27;\n              break;\n            case 21:\n              _context.prev = 21;\n              _context.t1 = _context[\"catch\"](0);\n              console.error('获取机器人列表失败:', _context.t1);\n              _this.robots = []; // 确保错误时也设置为空数组\n              _this.error = \"\\u83B7\\u53D6\\u6570\\u636E\\u5931\\u8D25: \".concat(_context.t1.message || '未知错误');\n              ElMessage.error('获取机器人列表失败');\n            case 27:\n              _context.prev = 27;\n              _this.loading = false;\n              return _context.finish(27);\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 21, 27, 30], [4, 13]]);\n      }))();\n    },\n    getStatusType: function getStatusType(status) {\n      var types = {\n        'idle': 'info',\n        'working': 'success',\n        'charging': 'primary',\n        'error': 'danger'\n      };\n      return types[status] || 'info';\n    },\n    getStatusText: function getStatusText(status) {\n      var texts = {\n        'idle': '空闲',\n        'working': '工作中',\n        'charging': '充电中',\n        'error': '故障'\n      };\n      return texts[status] || status;\n    }\n  }\n};","map":{"version":3,"names":["robotApi","ElMessage","name","data","robots","loading","error","created","fetchRobots","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","console","log","getAll","sent","_typeof","Array","isArray","length","t0","concat","message","t1","finish","stop","getStatusType","status","types","getStatusText","texts"],"sources":["D:\\software_data\\Project\\Y0527\\CODE\\frontend\\src\\views\\Robots.vue"],"sourcesContent":["<template>\r\n  <div class=\"robots-container\">\r\n    <h2>机器人管理</h2>\r\n    <el-card class=\"box-card\">\r\n      <div v-if=\"error\" class=\"error-message\">\r\n        <el-alert\r\n          title=\"加载数据出错\"\r\n          type=\"error\"\r\n          :description=\"error\"\r\n          show-icon\r\n        />\r\n      </div>\r\n      <el-table \r\n        v-if=\"robots && robots.length > 0\" \r\n        :data=\"robots\" \r\n        style=\"width: 100%\" \r\n        v-loading=\"loading\">\r\n        <el-table-column prop=\"id\" label=\"机器人ID\" width=\"180\" />\r\n        <el-table-column prop=\"name\" label=\"名称\" width=\"180\" />\r\n        <el-table-column prop=\"battery_level\" label=\"电量\">\r\n          <template #default=\"scope\">\r\n            <el-progress :percentage=\"scope.row.battery_level\" />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"status\" label=\"状态\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getStatusType(scope.row.status)\">\r\n              {{ getStatusText(scope.row.status) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"last_charging\" label=\"上次充电时间\" />\r\n      </el-table>\r\n      <div v-else-if=\"!loading\" class=\"no-data\">\r\n        <el-empty description=\"暂无数据\" />\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { robotApi } from '@/api'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'Robots',\r\n  data() {\r\n    return {\r\n      robots: [],\r\n      loading: false,\r\n      error: null\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchRobots()\r\n  },\r\n  methods: {\r\n    async fetchRobots() {\r\n      try {\r\n        this.loading = true\r\n        this.error = null\r\n        console.log('开始获取机器人数据')\r\n        \r\n        try {\r\n          const response = await robotApi.getAll()\r\n          console.log('获取到机器人数据:', response.data)\r\n          console.log('机器人数据类型:', typeof response.data, Array.isArray(response.data))\r\n          \r\n          // 确保数据是数组\r\n          if (Array.isArray(response.data)) {\r\n            this.robots = response.data\r\n            console.log('成功设置机器人数据，数量:', this.robots.length)\r\n          } else {\r\n            console.error('API返回的机器人数据不是数组:', response.data)\r\n            this.robots = [] // 设置为空数组\r\n            this.error = '机器人数据格式错误，请联系管理员'\r\n            ElMessage.error('机器人数据格式错误')\r\n          }\r\n        } catch (apiError) {\r\n          console.error('API调用出错:', apiError)\r\n          this.robots = [] // 确保错误时也设置为空数组\r\n          this.error = `API调用出错: ${apiError.message || '未知错误'}`\r\n          ElMessage.error('获取机器人数据失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取机器人列表失败:', error)\r\n        this.robots = [] // 确保错误时也设置为空数组\r\n        this.error = `获取数据失败: ${error.message || '未知错误'}`\r\n        ElMessage.error('获取机器人列表失败')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    getStatusType(status) {\r\n      const types = {\r\n        'idle': 'info',\r\n        'working': 'success',\r\n        'charging': 'primary',\r\n        'error': 'danger'\r\n      }\r\n      return types[status] || 'info'\r\n    },\r\n    getStatusText(status) {\r\n      const texts = {\r\n        'idle': '空闲',\r\n        'working': '工作中',\r\n        'charging': '充电中',\r\n        'error': '故障'\r\n      }\r\n      return texts[status] || status\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.robots-container {\r\n  padding: 20px;\r\n}\r\n.error-message {\r\n  margin-bottom: 20px;\r\n}\r\n.no-data {\r\n  padding: 20px 0;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}